******************************************************************************************
* Script generated on 2014-10-28   at 11.06.40 
* Script generated by user 'dbmcd01' on host 'xsa00y16' 
* Queue manager name: ABKA 
* Queue manager platform: UNIX
* Queue manager command level: (750/750) 
* Command issued: dmpmqcfg -m ABKA -t all -x all -o mqsc -a  
******************************************************************************************
ALTER QMGR +
   ACCTCONO(DISABLED) +
   ACCTINT(1800) +
   ACCTMQI(OFF) +
   ACCTQ(OFF) +
   ACTIVREC(MSG) +
   ACTVCONO(DISABLED) +
   ACTVTRC(OFF) +
*  ALTDATE(2014-10-17) +
*  ALTTIME(14.14.32) +
   AUTHOREV(DISABLED) +
   CCSID(819) +
   CERTVPOL(ANY) +
   CHAD(DISABLED) +
   CHADEV(DISABLED) +
   CHADEXIT(' ') +
   CHLEV(DISABLED) +
   CHLAUTH(DISABLED) +
   CLWLDATA(' ') +
   CLWLEXIT(' ') +
   CLWLLEN(100) +
   CLWLMRUC(999999999) +
   CLWLUSEQ(LOCAL) +
   CMDEV(DISABLED) +
*  CMDLEVEL(750) +
*  COMMANDQ(SYSTEM.ADMIN.COMMAND.QUEUE) +
   CONFIGEV(DISABLED) +
*  CRDATE(2010-03-02) +
*  CRTIME(13.41.12) +
   CUSTOM(' ') +
   DEADQ('ABKA.DEAD.QUEUE') +
   DEFCLXQ(SCTQ) +
   DEFXMITQ(' ') +
   DESCR('CAT-A') +
*  DISTL(YES) +
   INHIBTEV(DISABLED) +
   IPADDRV(IPV4) +
   LOCALEV(DISABLED) +
   LOGGEREV(DISABLED) +
   MARKINT(5000) +
   MAXHANDS(256) +
   MAXMSGL(104857600) +
   MAXPROPL(NOLIMIT) +
*  MAXPRTY(9) +
   MAXUMSGS(10000) +
   MONACLS(QMGR) +
   MONCHL(OFF) +
   MONQ(OFF) +
   PARENT(' ') +
   PERFMEV(DISABLED) +
*  PLATFORM(UNIX) +
   PSMODE(ENABLED) +
   PSCLUS(ENABLED) +
   PSNPMSG(DISCARD) +
   PSNPRES(NORMAL) +
   PSRTYCNT(5) +
   PSSYNCPT(IFPER) +
*  QMID(ABKA_2010-03-02_13.41.12) +
   REMOTEEV(DISABLED) +
   REPOS(' ') +
   REPOSNL(' ') +
   ROUTEREC(MSG) +
   SCHINIT(QMGR) +
   SCMDSERV(QMGR) +
*  SPLCAP(DISABLED) +
   SSLCRLNL(' ') +
   SSLCRYP(' ') +
   SSLEV(DISABLED) +
   SSLFIPS(NO) +
   SSLKEYR('/var/mqm/qmgrs/ABKA/ssl/key') +
   SSLRKEYC(0) +
   STATACLS(QMGR) +
   STATCHL(LOW) +
   STATINT(60) +
   STATMQI(OFF) +
   STATQ(OFF) +
   STRSTPEV(DISABLED) +
   SUITEB(NONE) +
*  SYNCPT +
   TREELIFE(1800) +
   TRIGINT(1800000) +
*  VERSION(07050003) +
*  XRCAP(NO) +
   FORCE
SET AUTHREC +
   PROFILE('self') +
   GROUP('mqbrkrs') +
   OBJTYPE(QMGR) +
   AUTHADD(ALTUSR,CHG,CONNECT,DLT,DSP,INQ,SET,SETALL,SETID,CTRL,SYSTEM)
SET AUTHREC +
   PROFILE('self') +
   GROUP('mqmon') +
   OBJTYPE(QMGR) +
   AUTHADD(CONNECT,DSP,INQ)
SET AUTHREC +
   PROFILE('self') +
   GROUP('dbmc') +
   OBJTYPE(QMGR) +
   AUTHADD(CONNECT,DSP,INQ)
SET AUTHREC +
   PROFILE('self') +
   GROUP('pbmc') +
   OBJTYPE(QMGR) +
   AUTHADD(CONNECT,DSP,INQ)
SET AUTHREC +
   PROFILE('self') +
   GROUP('mqm') +
   OBJTYPE(QMGR) +
   AUTHADD(ALTUSR,CHG,CONNECT,DLT,DSP,INQ,SET,SETALL,SETID,CTRL,SYSTEM)
SET AUTHREC +
   PROFILE('self') +
   GROUP('pgsc') +
   OBJTYPE(QMGR) +
   AUTHADD(CONNECT)
SET AUTHREC +
   PROFILE('self') +
   GROUP('wpra') +
   OBJTYPE(QMGR) +
   AUTHADD(CONNECT,DSP,INQ)
SET AUTHREC +
   PROFILE('self') +
   GROUP('dbdc') +
   OBJTYPE(QMGR) +
   AUTHADD(CONNECT,DSP,INQ,SETID)
SET AUTHREC +
   PROFILE('self') +
   GROUP('w5rsse') +
   OBJTYPE(QMGR) +
   AUTHADD(CONNECT,DSP,INQ)
SET AUTHREC +
   PROFILE('self') +
   GROUP('dgsc') +
   OBJTYPE(QMGR) +
   AUTHADD(CONNECT,DSP,INQ,SETID)
SET AUTHREC +
   PROFILE('self') +
   GROUP('pbdc') +
   OBJTYPE(QMGR) +
   AUTHADD(CONNECT)
SET AUTHREC +
   PROFILE('self') +
   GROUP('w5rxlm') +
   OBJTYPE(QMGR) +
   AUTHADD(CONNECT,DSP,INQ)
SET AUTHREC +
   PROFILE('self') +
   GROUP('wgcskms') +
   OBJTYPE(QMGR) +
   AUTHADD(CONNECT,DSP,INQ)
SET AUTHREC +
   PROFILE('self') +
   GROUP('w5rkms') +
   OBJTYPE(QMGR) +
   AUTHADD(CONNECT)
SET AUTHREC +
   PROFILE('self') +
   GROUP('w5rgsc') +
   OBJTYPE(QMGR) +
   AUTHADD(CONNECT,DSP,INQ,SETID)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('mqbrkrs') +
   OBJTYPE(QMGR) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('mqmon') +
   OBJTYPE(QMGR) +
   AUTHADD(NONE)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('dbmc') +
   OBJTYPE(QMGR) +
   AUTHADD(NONE)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('pbmc') +
   OBJTYPE(QMGR) +
   AUTHADD(NONE)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('mqm') +
   OBJTYPE(QMGR) +
   AUTHADD(NONE)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('pgsc') +
   OBJTYPE(QMGR) +
   AUTHADD(NONE)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('wpra') +
   OBJTYPE(QMGR) +
   AUTHADD(NONE)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('dbdc') +
   OBJTYPE(QMGR) +
   AUTHADD(NONE)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('w5rsse') +
   OBJTYPE(QMGR) +
   AUTHADD(NONE)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('dgsc') +
   OBJTYPE(QMGR) +
   AUTHADD(NONE)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('pbdc') +
   OBJTYPE(QMGR) +
   AUTHADD(NONE)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('w5rxlm') +
   OBJTYPE(QMGR) +
   AUTHADD(NONE)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('wgcskms') +
   OBJTYPE(QMGR) +
   AUTHADD(NONE)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('w5rkms') +
   OBJTYPE(QMGR) +
   AUTHADD(NONE)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('w5rgsc') +
   OBJTYPE(QMGR) +
   AUTHADD(NONE)
DEFINE QLOCAL('ABDA') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-01-28) +
*  ALTTIME(11.57.21) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2011-04-26) +
*  CRTIME(17.20.56) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR(' ') +
   DISTL(YES) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(50000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   TRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(XMITQ) +
   REPLACE
DEFINE QLOCAL('ABJA') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-09-04) +
*  ALTTIME(15.59.05) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-06-10) +
*  CRTIME(23.25.51) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('itsp #476693') +
   DISTL(YES) +
   GET(ENABLED) +
   HARDENBO +
   INITQ('SYSTEM.CHANNEL.INITQ') +
*  IPPROCS(0) +
   MAXDEPTH(50000) +
   MAXMSGL(15000) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   TRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA('ABKA.TO.ABJA') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(XMITQ) +
   REPLACE
DEFINE QLOCAL('ABJA.TO.ABKA.TEST.01') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-09-04) +
*  ALTTIME(16.01.10) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-09-04) +
*  CRTIME(16.01.10) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR(' ') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(80000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('ABKA.DEAD.QUEUE') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-09-10) +
*  ALTTIME(11.18.23) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(14.12.42) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('Default dead letter queue') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(100) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(1) +
   QDEPTHLO(0) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('ABKA.TARGET.QUEUE') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-06-10) +
*  ALTTIME(14.55.30) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(14.12.42) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('Required for MQMECHO from RemoteQueueManager') +
   DISTL(NO) +
   GET(ENABLED) +
   NOHARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(100) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(0) +
   QDPHIEV(DISABLED) +
   QDPLOEV(ENABLED) +
   QDPMAXEV(DISABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QREMOTE('ABKA.TO.ABJA.TEST.01') +
*  ALTDATE(2014-09-04) +
*  ALTTIME(14.57.52) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DESCR(' ') +
   PUT(ENABLED) +
   RQMNAME('ABJA') +
   RNAME('ABKA.TO.ABJA.TEST.01') +
   SCOPE(QMGR) +
   XMITQ('ABJA') +
   REPLACE
DEFINE QREMOTE('ABPA') +
*  ALTDATE(2013-07-30) +
*  ALTTIME(12.17.39) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DESCR(' ') +
   PUT(ENABLED) +
   RQMNAME('ABKA') +
   RNAME(' ') +
   SCOPE(QMGR) +
   XMITQ(' ') +
   REPLACE
DEFINE QLOCAL('ABUA') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-09-09) +
*  ALTTIME(14.17.01) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-09-09) +
*  CRTIME(14.09.52) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR(' ') +
   DISTL(YES) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(50000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   TRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(XMITQ) +
   REPLACE
DEFINE QREMOTE('ADPSYS0AB') +
*  ALTDATE(2011-06-27) +
*  ALTTIME(13.52.29) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DESCR(' ') +
   PUT(ENABLED) +
   RQMNAME('ADPSYS0AB') +
   RNAME(' ') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS0AB_1') +
   REPLACE
DEFINE QLOCAL('ADPSYS0AB_1') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-10-28) +
*  ALTTIME(08.40.02) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(14.12.42) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('TransmitQ to ADPSYS0AB') +
   DISTL(YES) +
   GET(ENABLED) +
   HARDENBO +
   INITQ('SYSTEM.CHANNEL.INITQ') +
*  IPPROCS(1) +
   MAXDEPTH(50000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   TRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(6) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA('BNY_ABKA.ADP_0AB.C1') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(XMITQ) +
   REPLACE
DEFINE QREMOTE('ADPSYS0B') +
*  ALTDATE(2011-06-27) +
*  ALTTIME(13.52.06) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DESCR(' ') +
   PUT(ENABLED) +
   RQMNAME('ADPSYS0B') +
   RNAME(' ') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS0B_1') +
   REPLACE
DEFINE QLOCAL('ADPSYS0B_1') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-10-28) +
*  ALTTIME(04.03.42) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(14.12.42) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('TransmitQ to ADPSYS0B') +
   DISTL(YES) +
   GET(ENABLED) +
   HARDENBO +
   INITQ('SYSTEM.CHANNEL.INITQ') +
*  IPPROCS(1) +
   MAXDEPTH(10000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   TRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(8) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA('BNY_ABKA.ADP_0B.C1') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(XMITQ) +
   REPLACE
DEFINE QLOCAL('ADPSYS0B_2') +
   ACCTQ(QMGR) +
*  ALTDATE(2013-11-29) +
*  ALTTIME(13.37.53) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(14.12.42) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('TransmitQ to ADPSYS0B') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ('SYSTEM.CHANNEL.INITQ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   TRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA('BNY_ABKA.ADP_0B.C2') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(XMITQ) +
   REPLACE
DEFINE QLOCAL('ADPSYS0B_3') +
   ACCTQ(QMGR) +
*  ALTDATE(2013-11-29) +
*  ALTTIME(13.43.20) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(14.12.42) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('TransmitQ to ADPSYS0B') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ('SYSTEM.CHANNEL.INITQ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   TRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA('BNY_ABKA.ADP_0B.C3') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(XMITQ) +
   REPLACE
DEFINE QLOCAL('ADPSYS0C_1') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-10-28) +
*  ALTTIME(02.50.01) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-08-17) +
*  CRTIME(13.58.02) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('TransmitQ to ADPSYS0C') +
   DISTL(YES) +
   GET(ENABLED) +
   HARDENBO +
   INITQ('SYSTEM.CHANNEL.INITQ') +
*  IPPROCS(1) +
   MAXDEPTH(10000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   TRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(11) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA('BNY_ABKA.ADP_0C.C1') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(XMITQ) +
   REPLACE
DEFINE QREMOTE('ADPSYS1') +
*  ALTDATE(2011-01-27) +
*  ALTTIME(17.24.33) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DESCR(' ') +
   PUT(ENABLED) +
   RQMNAME('ADPSYS1') +
   RNAME(' ') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS1_1') +
   REPLACE
DEFINE QLOCAL('ADPSYS1_1') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-10-28) +
*  ALTTIME(10.56.19) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(14.12.42) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('TransmitQ to ADPSYS1') +
   DISTL(YES) +
   GET(ENABLED) +
   HARDENBO +
   INITQ('SYSTEM.CHANNEL.INITQ') +
*  IPPROCS(1) +
   MAXDEPTH(10000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   TRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(5) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA('BNY_ABKA.ADP_SYS1.C1') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(XMITQ) +
   REPLACE
DEFINE QLOCAL('ADPSYS1_2') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-10-28) +
*  ALTTIME(05.23.35) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(14.12.42) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('TransmitQ to ADPSYS1') +
   DISTL(YES) +
   GET(ENABLED) +
   HARDENBO +
   INITQ('SYSTEM.CHANNEL.INITQ') +
*  IPPROCS(1) +
   MAXDEPTH(10000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   TRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(7) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA('BNY_ABKA.ADP_SYS1.C2') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(XMITQ) +
   REPLACE
DEFINE QLOCAL('ADP_SYS1_1') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.42) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(14.12.42) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('TransmitQ to ADPSYS1') +
   DISTL(YES) +
   GET(ENABLED) +
   HARDENBO +
   INITQ('SYSTEM.CHANNEL.INITQ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   TRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA('BNY_ABKA.ADP_SYS1.C1') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(XMITQ) +
   REPLACE
DEFINE QLOCAL('ADP_SYS1_2') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.42) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(14.12.42) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('TransmitQ to ADPSYS1') +
   DISTL(YES) +
   GET(ENABLED) +
   HARDENBO +
   INITQ('SYSTEM.CHANNEL.INITQ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   TRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA('BNY_ABKA.ADP_SYS1.C2') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(XMITQ) +
   REPLACE
DEFINE QALIAS('AIS.BMC.AIS_INS_I') +
*  ALTDATE(2010-09-10) +
*  ALTTIME(18.57.40) +
   TARGET('AIS_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RGW1501 TO RECEIVE MESSAGES FROM AIS.') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('AIS.BMC.AIS_RSP_I') +
*  ALTDATE(2010-09-10) +
*  ALTTIME(18.57.40) +
   TARGET('AIS_RSP_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RGW1501 TO SEND RESPONSES TO AIS.') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('AMC.GSCX.TO.CMSFED.ACCP') +
*  ALTDATE(2013-02-13) +
*  ALTTIME(06.46.41) +
   TARGET('MQABNY.MQMHMEL.CMS.BMC.GSC_RSP_O_A') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RYD1666 RESPONSE QUEUE FOR UAT TEST') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('AMC.GSCX.TO.CMSFED.SYST') +
*  ALTDATE(2013-02-13) +
*  ALTTIME(06.46.41) +
   TARGET('MQABNY.MQMHMEL.CMS.BMC.GSC_RSP_O_S') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RYD1666 RESPONSE QUEUE FOR SIN TEST') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('AMC.GSCX.TO.CMSFED.UNIT') +
*  ALTDATE(2013-02-13) +
*  ALTTIME(06.46.41) +
   TARGET('MQABNY.MQMHMEL.CMS.BMC.GSC_RSP_O_U') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RYD1666 RESPONSE QUEUE FOR UNIT TEST') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('AMH.BMC.SWP_INS_I') +
*  ALTDATE(2013-01-17) +
*  ALTTIME(03.16.31) +
   TARGET('MQABNY.MQVBNY.BMC.BMC.SWIFT_PP_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('ITSP# 206891') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QLOCAL('AQT3') +
   ACCTQ(QMGR) +
*  ALTDATE(2013-02-26) +
*  ALTTIME(04.28.15) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2013-02-26) +
*  CRTIME(04.22.20) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('ITSP #227564') +
   DISTL(YES) +
   GET(ENABLED) +
   HARDENBO +
   INITQ('SYSTEM.CHANNEL.INITQ') +
*  IPPROCS(0) +
   MAXDEPTH(5000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   TRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA('ABKA.TO.AQT3') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(XMITQ) +
   REPLACE
DEFINE QLOCAL('ASMPMQI') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-07-01) +
*  ALTTIME(15.04.32) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2011-05-19) +
*  CRTIME(13.09.24) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('TransmitQ to ASMPMQI') +
   DISTL(YES) +
   GET(ENABLED) +
   HARDENBO +
   INITQ('SYSTEM.CHANNEL.INITQ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   TRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(40) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(120000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA('ABKA.TO.ASMPMQI') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(XMITQ) +
   REPLACE
DEFINE QLOCAL('BBHTST') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-10-28) +
*  ALTTIME(03.58.43) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2011-04-07) +
*  CRTIME(10.52.02) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('TransmitQ to BBH Test') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ('SYSTEM.CHANNEL.INITQ') +
*  IPPROCS(0) +
   MAXDEPTH(50000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   TRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(1) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA('BNY_ABKA.BBHTST.C1') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(XMITQ) +
   REPLACE
DEFINE QALIAS('BBP.BMC.BBP_INS_I') +
*  ALTDATE(2011-04-04) +
*  ALTTIME(10.21.37) +
   TARGET('BBP_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RRB1522 SETTL INSTR. FOR BROWN BROTHERS.') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BBP.BMC.HAR_INS_I') +
*  ALTDATE(2011-04-04) +
*  ALTTIME(10.21.37) +
   TARGET('HAR_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RRB1522 SETTL INSTR. FOR HARRIMAN.') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BDC.BMC.ACK_O') +
*  ALTDATE(2014-06-13) +
*  ALTTIME(13.19.49) +
   TARGET('MQABNY.MQABNY.BMC.BDC.ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RLP1638 BDC ACK MESSAGES THAT NEEDS FURTHER ROUTING') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BDC.BMC.ALL_FRB_RSP_I') +
*  ALTDATE(2014-05-15) +
*  ALTTIME(01.20.10) +
   TARGET('MQVBNY.MQABNY.BMC.WUI.ALL_FRB_RSP_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR(' ') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BDC.BMC.BNYM_FRB_INS_H_CU') +
*  ALTDATE(2014-05-15) +
*  ALTTIME(01.25.00) +
   TARGET('MQABNY.MQVBNY.WUI.BMC.BNYM_FRB_INS_H_CU') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('ITSP#460556') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BDC.BMC.BNYM_FRB_INS_L_CU') +
*  ALTDATE(2014-05-15) +
*  ALTTIME(01.45.32) +
   TARGET('MQABNY.MQVBNY.WUI.BMC.BNYM_FRB_INS_L_CU') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('ITSP#460559') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BDC.BMC.BNYM_FRB_INS_O_CU') +
*  ALTDATE(2014-05-15) +
*  ALTTIME(01.45.03) +
   TARGET('MQABNY.MQVBNY.WUI.BMC.BNYM_FRB_INS_O_CU') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('ITSP#60570') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BDC.BMC.CMS_FED_INS_I') +
*  ALTDATE(2014-05-22) +
*  ALTTIME(04.55.33) +
   TARGET('MQABNY.MQABNY.BDC.BMC.CMS_FED_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RRB1721 CMS FED QUEUE FOR BDC') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BDC.BMC.CONFIRM_I') +
*  ALTDATE(2014-04-21) +
*  ALTTIME(07.40.47) +
   TARGET('MQABNY.MQABNY.BMC.BDC.CONFIRM_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('ROZ1794 CONF FROM BDC') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BDC.BMC.CONFIRM_O') +
*  ALTDATE(2014-06-13) +
*  ALTTIME(13.20.22) +
   TARGET('MQABNY.MQABNY.BMC.BDC.CONFIRM_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RLP1638 BDC CONFIRM QUEUE') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BDC.BMC.FED_INS_I') +
*  ALTDATE(2014-06-24) +
*  ALTTIME(11.38.56) +
   TARGET('MQABNY.MQABNY.BDC.BMC.FED_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RHI1682 BDC FED INSTRUCTION QUEUE') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BDC.BMC.GNMA_FRB_INS_O_CU') +
*  ALTDATE(2014-05-15) +
*  ALTTIME(01.50.18) +
   TARGET('MQABNY.MQVBNY.WUI.BMC.GNMA_FRB_INS_O_CU') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('ITSP#460574') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BDC.BMC.IMX2_FED_INS_I') +
*  ALTDATE(2014-05-22) +
*  ALTTIME(04.55.33) +
   TARGET('MQABNY.MQABNY.BDC.BMC.IMX2_FED_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RRB1721 IMX FED QUEUE FOR BDC') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BDC.BMC.MX_CASH_ACK_O') +
*  ALTDATE(2014-04-21) +
*  ALTTIME(07.40.47) +
   TARGET('MQABNY.MQABNY.BMC.BDC.MX_CASH_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('ROZ1794 MX CASH ACK FROM BDC') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BDC.BMC.MX_CASH_CONF_O') +
*  ALTDATE(2014-04-21) +
*  ALTTIME(07.40.47) +
   TARGET('MQABNY.MQABNY.BMC.BDC.MX_CASH_CONF_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('ROZ1794 MX CASH CONF FROM BDC') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BDC.BMC.MX_CASH_INS_I') +
*  ALTDATE(2014-06-08) +
*  ALTTIME(23.46.14) +
   TARGET('MQABNY.MQABNY.BDC.BMC.MX_CASH_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RJC1653 BDC INPUT QUEUE FOR SWIFT MX CASH MSGS') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BDC.BMC.SWFNET_FED_INS_I') +
*  ALTDATE(2014-05-22) +
*  ALTTIME(04.55.33) +
   TARGET('MQABNY.MQABNY.BDC.BMC.SWFNET_FED_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RRB1721 SWF NET FED QUEEU FOR BDC') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BDC.BMC.SWFPP_FED_INS_I') +
*  ALTDATE(2014-05-22) +
*  ALTTIME(04.55.33) +
   TARGET('MQABNY.MQABNY.BDC.BMC.SWFPP_FED_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RRB1721 SWF PP FED QUEUE FOR BDC') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BDC.F.RPO.ACP_RESULT.0001') +
*  ALTDATE(2013-12-10) +
*  ALTTIME(02.22.32) +
   TARGET('BNMS.RPO.BNMA.BDC.ACP_RESULT.0001') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('ITSP: 376604 : ReplyQ for ACP_REQUEST') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BDC.F.RPO.RPONFE_RESULT.0001') +
*  ALTDATE(2014-05-16) +
*  ALTTIME(03.19.47) +
   TARGET('BNMS.RPO.BNMA.BDC.RPONFE_RESULT.0001') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('ITSP: 462150 : ReplyQ for RPONFE_REQUEST') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BDC.GSC.BDCNOTIF_O') +
*  ALTDATE(2014-04-17) +
*  ALTTIME(09.02.53) +
   TARGET('MQABNY.MQABNY.GSC.BDC.BDCNOTIF_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVP1727 BDC TO GSC ASSET SERVICE NOTIFICATION QUEUE') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BDC.GSC.BDCRPT_O') +
*  ALTDATE(2014-04-17) +
*  ALTTIME(09.02.54) +
   TARGET('MQABNY.MQABNY.GSC.BDC.BDCRPT_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVP1727 BDC TO GSC POST REPORT OUTBOUND QUEUE') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BDC.GSC.GSCRPT_O') +
*  ALTDATE(2014-04-17) +
*  ALTTIME(09.19.28) +
   TARGET('MQABNY.MQABNY.BDC.GSC.GSCRPT_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RAQ1614 GSC TO BDC POST REPORT QUEUE') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BDC.GSC.GSCSEC_O') +
*  ALTDATE(2014-06-13) +
*  ALTTIME(13.20.49) +
   TARGET('MQABNY.MQABNY.BDC.GSC.GSCSEC_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RAQ1614 GSC TO BDC SECURITY OUTPUT QUEUE') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BDC.T.RPO.ACP_REQUEST.0001') +
*  ALTDATE(2013-12-10) +
*  ALTTIME(02.22.32) +
   TARGET('BNMA.BDC.BNMS.RPO.ACP_REQUEST.0001') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('ITSP: 376604 : ACP services') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BDC.T.RPO.RPONFE_REQUEST.0001') +
*  ALTDATE(2014-05-16) +
*  ALTTIME(03.19.32) +
   TARGET('BNMA.BDC.BNMS.RPO.RPONFE_REQUEST.0001') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('ITSP: 462150 : RPO NFE services') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QLOCAL('BDSVD2') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-10-28) +
*  ALTTIME(10.33.27) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-09-13) +
*  CRTIME(11.01.05) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('TransmitQ to BDSVD2') +
   DISTL(YES) +
   GET(ENABLED) +
   HARDENBO +
   INITQ('SYSTEM.CHANNEL.INITQ') +
*  IPPROCS(1) +
   MAXDEPTH(10000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   TRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(2) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(40) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(120000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA('ABKA.TO.BDSVD2') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(XMITQ) +
   REPLACE
DEFINE QREMOTE('BDSVD2.REMOTE.QUEUE') +
*  ALTDATE(2010-09-13) +
*  ALTTIME(11.01.05) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(9) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('Queue for accessing TARGET.QUEUE on BDSVD2') +
   PUT(ENABLED) +
   RQMNAME('BDSVD2') +
   RNAME('BDSVD2.TARGET.QUEUE') +
   SCOPE(QMGR) +
   XMITQ('BDSVD2') +
   REPLACE
DEFINE QALIAS('BMC.///.CLM_CMD_REQ_I_A') +
*  ALTDATE(2011-07-15) +
*  ALTTIME(18.59.32) +
   TARGET('MQXBNY.MQABNY.BMC.///.CLM_CMD_REQ_I_A.MULT') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RRJ1548 TO RECEIVE COMMAND REQUESTS.') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.///.CLM_CMD_REQ_I_B') +
*  ALTDATE(2011-07-15) +
*  ALTTIME(18.59.32) +
   TARGET('MQXBNY.MQABNY.BMC.///.CLM_CMD_REQ_I_B.MULT') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RES1541 TO RECEIVE COMMAND REQUESTS.') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.///.CLM_INQ_REQ_I_A') +
*  ALTDATE(2011-07-15) +
*  ALTTIME(18.59.32) +
   TARGET('MQXBNY.MQABNY.BMC.///.CLM_INQ_REQ_I_A.MULT') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RPQ1577 TO RECEIVE CLM INQ REQUESTS.') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.///.CLM_INQ_REQ_I_B') +
*  ALTDATE(2011-07-15) +
*  ALTTIME(18.59.32) +
   TARGET('MQXBNY.MQABNY.BMC.///.CLM_INQ_REQ_I_B.MULT') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RDB1569 TO RECEIVE CLM INQ REQUESTS.') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.AIS.AIS_INS_I') +
*  ALTDATE(2010-09-10) +
*  ALTTIME(18.57.40) +
   TARGET('MQWBNY.MQABNY.BMC.AIS.AIS_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RGW1501 TO RECEIVE MESSAGES FROM AIS.') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.AIS.AIS_RSP_I') +
*  ALTDATE(2010-09-10) +
*  ALTTIME(18.57.40) +
   TARGET('MQWBNY.MQABNY.BMC.AIS.AIS_RSP_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RGW1501 TO SEND RESPONSES TO AIS.') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BBP.BBP_ACK_O') +
*  ALTDATE(2011-04-06) +
*  ALTTIME(14.45.12) +
   TARGET('MQABNY.MQMBBH.BBP.BMC.BBP_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RHV1503 GSCX ACK/NACK TO BROWN BROTHERS') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BBP.BBP_INS_I') +
*  ALTDATE(2011-04-04) +
*  ALTTIME(10.21.37) +
   TARGET('MQMBBH.MQABNY.BMC.BBP.BBP_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RRB1522 SETTL INSTR. FOR BROWN BROTHERS.') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BBP.BBP_RSP_O') +
*  ALTDATE(2011-04-06) +
*  ALTTIME(14.45.12) +
   TARGET('MQABNY.MQMBBH.BBP.BMC.BBP_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RHV1503 GSCX CONFIRMS TO BROWN BROTHERS.') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BBP.HAR_ACK_O') +
*  ALTDATE(2011-04-06) +
*  ALTTIME(14.45.12) +
   TARGET('MQABNY.MQMBBH.BBP.BMC.HAR_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RHV1503 GSCX ACK/NACK TO HARRIMAN.') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BBP.HAR_INS_I') +
*  ALTDATE(2011-04-04) +
*  ALTTIME(10.21.37) +
   TARGET('MQMBBH.MQABNY.BMC.BBP.HAR_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RRB1522 SETTL INSTR. FOR HARRIMAN.') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BBP.HAR_RSP_O') +
*  ALTDATE(2011-04-06) +
*  ALTTIME(14.45.12) +
   TARGET('MQABNY.MQMBBH.BBP.BMC.HAR_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RHV1503 GSCX CONFIRMS TO HARRIMAN.') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BDC.ACK_O') +
*  ALTDATE(2014-06-01) +
*  ALTTIME(22.39.36) +
   TARGET('MQABNY.MQABNY.BMC.BDC.ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RLP1638 BDC ACK MESSAGES THAT NEEDS FURTHER ROUTING') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BDC.CMS_FED_INS_I') +
*  ALTDATE(2014-05-22) +
*  ALTTIME(04.55.33) +
   TARGET('MQABNY.MQABNY.BDC.BMC.CMS_FED_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RRB1721 CMS FED QUEUE FOR BDC') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BDC.CONFIRM_I') +
*  ALTDATE(2014-04-21) +
*  ALTTIME(07.40.47) +
   TARGET('MQABNY.MQABNY.BMC.BDC.CONFIRM_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('ROZ1794 CONF FROM BDC') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BDC.CONFIRM_O') +
*  ALTDATE(2014-06-01) +
*  ALTTIME(22.39.36) +
   TARGET('MQABNY.MQABNY.BMC.BDC.CONFIRM_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RLP1638 BDC CONFIRM QUEUE') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BDC.FED_INS_I') +
*  ALTDATE(2014-05-22) +
*  ALTTIME(06.50.10) +
   TARGET('MQABNY.MQABNY.BDC.BMC.FED_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RHI1682 BDC FED INSTRUCTION QUEUE') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BDC.IMX2_FED_INS_I') +
*  ALTDATE(2014-05-22) +
*  ALTTIME(04.55.33) +
   TARGET('MQABNY.MQABNY.BDC.BMC.IMX2_FED_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RRB1721 IMX FED QUEUE FOR BDC') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BDC.MX_CASH_ACK_O') +
*  ALTDATE(2014-04-21) +
*  ALTTIME(07.40.47) +
   TARGET('MQABNY.MQABNY.BMC.BDC.MX_CASH_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('ROZ1794 MX CASH ACK FROM BDC') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BDC.MX_CASH_CONF_O') +
*  ALTDATE(2014-04-21) +
*  ALTTIME(07.40.47) +
   TARGET('MQABNY.MQABNY.BMC.BDC.MX_CASH_CONF_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('ROZ1794 MX CASH CONF FROM BDC') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BDC.MX_CASH_INS_I') +
*  ALTDATE(2014-06-08) +
*  ALTTIME(23.46.14) +
   TARGET('MQABNY.MQABNY.BDC.BMC.MX_CASH_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RJC1653 BDC INPUT QUEUE FOR SWIFT MX CASH MSGS') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BDC.SWFNET_FED_INS_I') +
*  ALTDATE(2014-05-22) +
*  ALTTIME(04.55.33) +
   TARGET('MQABNY.MQABNY.BDC.BMC.SWFNET_FED_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RRB1721 SWF NET FED QUEEU FOR BDC') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BDC.SWFPP_FED_INS_I') +
*  ALTDATE(2014-05-22) +
*  ALTTIME(04.55.33) +
   TARGET('MQABNY.MQABNY.BDC.BMC.SWFPP_FED_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RRB1721 SWF PP FED QUEUE FOR BDC') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.ADM_BGM_INS_I') +
*  ALTDATE(2013-02-26) +
*  ALTTIME(21.27.33) +
   TARGET('MQABNY.MQABNY.BMC.BMC.ADM_BGM_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RUS1679 TO RECEIVE ADM MESSAGES IN BGRAM FORMAT') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.ADM_CITI_RSP_O') +
*  ALTDATE(2013-09-20) +
*  ALTTIME(02.30.11) +
   TARGET('MQABNY.MQABNY.BMC.BMC.ADM_CITI_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RWH1703 HOLDS CITI OUTBOUND ADM FILE RESPONSE') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.ADM_DEF_RSP_O') +
*  ALTDATE(2014-07-15) +
*  ALTTIME(04.30.44) +
   TARGET('MQABNY.MQABNY.BMC.BMC.ADM_DEF_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RJX1798 ADM DEFAULT QUEUE') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.ADM_PIMCO_RSP_O') +
*  ALTDATE(2013-09-13) +
*  ALTTIME(12.21.17) +
   TARGET('MQABNY.MQABNY.BMC.BMC.ADM_PIMCO_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RGD1641 HOLDS PIMCO OUTBOUND ADM FILE RESPONSE') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.ADM_RSP_BGM_M') +
*  ALTDATE(2013-02-26) +
*  ALTTIME(21.27.33) +
   TARGET('MQABNY.MQABNY.BMC.BMC.ADM_RSP_BGM_M') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RUS1679 ADM RESPONSES TO BGRAM FORMAT.') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.ADM_RSP_SWF_M') +
*  ALTDATE(2013-02-26) +
*  ALTTIME(21.27.33) +
   TARGET('MQABNY.MQABNY.BMC.BMC.ADM_RSP_SWF_M') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RUS1679 ADM RESPONSES TO SWIFT FORMAT.') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.ADM_RSP_X') +
*  ALTDATE(2013-10-30) +
*  ALTTIME(06.20.12) +
   TARGET('MQABNY.MQABNY.BMC.BMC.ADM_RSP_X') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RYB1679 REJECT QUEUE FOR ADM RESPONSES.') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.ADM_SWF_INS_I') +
*  ALTDATE(2013-02-26) +
*  ALTTIME(21.27.33) +
   TARGET('MQABNY.MQABNY.BMC.BMC.ADM_SWF_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RUS1679 TO RECEIVE ADM MESSAGES IN SWIFT FORMAT') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.ALL_CLM_CMS_B') +
*  ALTDATE(2014-07-21) +
*  ALTTIME(06.03.33) +
   TARGET('MQABNY.MQABNY.BMC.BMC.ALL_CLM_CMS_B') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RJI1794 BACK OUT QUEUE') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.ALL_GRAM_INS_I_P1') +
*  ALTDATE(2012-09-02) +
*  ALTTIME(22.08.14) +
   TARGET('MQABNY.MQABNY.BMC.BMC.ALL_GRAM_INS_I_P1') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RIY1593 QUEUE TO RECEIVE GRAMS FROM GSCX GRAM LOG') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.ALL_GRAM_INS_I_P2') +
*  ALTDATE(2012-09-02) +
*  ALTTIME(22.08.14) +
   TARGET('MQABNY.MQABNY.BMC.BMC.ALL_GRAM_INS_I_P2') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RIY1593 QUEUE TO RECEIVE GRAM MESSAGES FROM GRAM LOG') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.BDC_CASH_ACK_M') +
*  ALTDATE(2013-12-02) +
*  ALTTIME(01.14.56) +
   TARGET('MQABNY.MQABNY.BMC.BMC.BDC_CASH_ACK_M') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RRC1692 BDC CASH ACK INT QUEUE') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.BDC_CASH_CONF_M') +
*  ALTDATE(2013-12-02) +
*  ALTTIME(01.14.56) +
   TARGET('MQABNY.MQABNY.BMC.BMC.BDC_CASH_CONF_M') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RRC1692 BDC CASH CONF INT QUEUE') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.BDC_CASH_IN_M') +
*  ALTDATE(2013-12-02) +
*  ALTTIME(01.14.56) +
   TARGET('MQABNY.MQABNY.BMC.BMC.BDC_CASH_IN_M') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RRC1692 BDC CASH IN INT QUEUE') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.BDC_DEF_CCONF_O') +
*  ALTDATE(2013-12-02) +
*  ALTTIME(01.14.57) +
   TARGET('MQABNY.MQABNY.BMC.BMC.BDC_DEF_CCONF_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RRC1692 BDC CASH CONF DEF QUEUE') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.BDC_DEF_RSP_O') +
*  ALTDATE(2012-10-11) +
*  ALTTIME(00.18.26) +
   TARGET('MQABNY.MQABNY.BMC.BMC.BDC_DEF_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSF1781 DEFAULT QUEUE FOR RESPONSE MESSAGES TO CLIENT') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.BDC_FTSACK_M') +
*  ALTDATE(2014-02-10) +
*  ALTTIME(21.40.54) +
   TARGET('MQABNY.MQABNY.BMC.BMC.BDC_FTSACK_M') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RLH1753 FTSACK INTERMEDIATE QUEUE') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.BDC_FTSIN_M') +
*  ALTDATE(2014-02-10) +
*  ALTTIME(21.40.54) +
   TARGET('MQABNY.MQABNY.BMC.BMC.BDC_FTSIN_M') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RLH1753 FTS IN INTERMEDIATE QUEUE') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.BDC_FTSOUT_M') +
*  ALTDATE(2014-02-10) +
*  ALTTIME(21.40.54) +
   TARGET('MQABNY.MQABNY.BMC.BMC.BDC_FTSOUT_M') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RLH1753 FTS OUT INTERMEDIATE QUEUE') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.BDS_XLI_ALL_S') +
*  ALTDATE(2012-11-12) +
*  ALTTIME(20.15.57) +
   TARGET('MQVBNY.MQABNY.BMC.BMC.BDS_XLI_ALL_S') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RRI1721 REMOTE QUEUE FROM ROBIN TO Y16(ABKA)') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.BGM_CASH_ACK_M') +
*  ALTDATE(2014-05-07) +
*  ALTTIME(03.35.51) +
   TARGET('MQABNY.MQABNY.BMC.BMC.BGM_CASH_ACK_M') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('ROZ1798 BNYGRAM CASH ACK INTERMEDIATE QUEUE') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.BGM_CASH_CONF_M') +
*  ALTDATE(2014-05-07) +
*  ALTTIME(03.35.51) +
   TARGET('MQABNY.MQABNY.BMC.BMC.BGM_CASH_CONF_M') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('ROZ1798 BNYGRAM CASH CONF INTERMEDIATE QUEUE') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.BGM_CASH_INS_I') +
*  ALTDATE(2014-05-07) +
*  ALTTIME(03.35.51) +
   TARGET('MQABNY.MQABNY.BMC.BMC.BGM_CASH_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('ROZ1798 BNYGRAM CASH INSTRUCTIONSINPUT QUEUE') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.BNYM_ATB_RSH_I') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.42) +
   TARGET('MQABNY.MQABNY.BMC.BMC.BNYM_ATB_RSH_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RYN1413 THIS QUEUE IS TO REFRESH ACCOUNT TABLE.') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.BNYM_ATB_RSH_O') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.42) +
   TARGET('MQABNY.MQABNY.BMC.BMC.BNYM_ATB_RSH_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RYN1413 THIS QUEUE IS TO REFRESH ACCOUNT TABLE.') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.BNYM_BDC_ACK_M') +
*  ALTDATE(2012-08-15) +
*  ALTTIME(22.05.58) +
   TARGET('MQABNY.MQABNY.BMC.BMC.BNYM_BDC_ACK_M') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RHO1635 INTERMEIDIATE QUEUE FOR ACKNOWLEDGEMENTS') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.BNYM_BDC_ACK_O') +
*  ALTDATE(2012-10-11) +
*  ALTTIME(00.19.35) +
   TARGET('MQABNY.MQABNY.BMC.BMC.BNYM_BDC_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RCL1660 DEFAULT ACK QUEUE FOR BDC') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.BNYM_BDC_ALL_R') +
*  ALTDATE(2012-08-15) +
*  ALTTIME(22.05.58) +
   TARGET('MQABNY.MQABNY.BMC.BMC.BNYM_BDC_ALL_R') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RHO1635 REJECT QUEUE FOR BDC') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.BNYM_BDC_ALL_S') +
*  ALTDATE(2012-11-29) +
*  ALTTIME(21.32.58) +
   TARGET('MQABNY.MQABNY.BMC.BMC.BNYM_BDC_ALL_S') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RFI1762 SAVE STORE QUEUE FOR BDC') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.BNYM_BDC_ALL_X') +
*  ALTDATE(2012-08-15) +
*  ALTTIME(22.05.58) +
   TARGET('MQABNY.MQABNY.BMC.BMC.BNYM_BDC_ALL_X') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RHO1635 SCRAP QUEUE FOR BDC') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.BNYM_BDC_BLKFILE_M') +
*  ALTDATE(2012-08-15) +
*  ALTTIME(22.05.58) +
   TARGET('MQABNY.MQABNY.BMC.BMC.BNYM_BDC_BLKFILE_M') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RHO1635 INTERMEDIATE QUEUE FOR BULKFILE MESSAGES') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.BNYM_BDC_BNYCONF_M') +
*  ALTDATE(2012-08-15) +
*  ALTTIME(22.05.58) +
   TARGET('MQABNY.MQABNY.BMC.BMC.BNYM_BDC_BNYCONF_M') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RHO1635 INTERMEDIATE QUEUE FOR CONFIRMATIONS') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.BNYM_BDC_BVAL_M') +
*  ALTDATE(2012-08-15) +
*  ALTTIME(22.05.58) +
   TARGET('MQABNY.MQABNY.BMC.BMC.BNYM_BDC_BVAL_M') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RHO1635 INTERMEIDATE QUEUE FOR BVAL MESSAGES') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.BNYM_BDC_ERR_E') +
*  ALTDATE(2012-10-18) +
*  ALTTIME(20.06.13) +
   TARGET('MQABNY.MQABNY.BMC.BMC.BNYM_BDC_ERR_E') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RED1604 ERROR QUEUE FOR BDC FLOWS') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.BNYM_BDC_GRAM_M') +
*  ALTDATE(2012-08-15) +
*  ALTTIME(22.05.58) +
   TARGET('MQABNY.MQABNY.BMC.BMC.BNYM_BDC_GRAM_M') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RHO1635 INTERMEIDATE QUEUE FOR GRAM MESSAGES') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.BNYM_BDC_STIFIN_M') +
*  ALTDATE(2012-08-15) +
*  ALTTIME(22.05.58) +
   TARGET('MQABNY.MQABNY.BMC.BMC.BNYM_BDC_STIFIN_M') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RHO1635 INTERMEDIATE QUEUE FOR STIFIN MESSAGES') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.BNYM_BDC_STIFOUT_M') +
*  ALTDATE(2012-08-15) +
*  ALTTIME(22.05.58) +
   TARGET('MQABNY.MQABNY.BMC.BMC.BNYM_BDC_STIFOUT_M') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RHO1635 INTERMEIDATE QUEUE FOR STIFOUT MESSAGES') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.BNYM_BDS_ALL_B') +
*  ALTDATE(2011-08-19) +
*  ALTTIME(12.22.25) +
   TARGET('MQABNY.MQABNY.BMC.BMC.BNYM_BDS_ALL_B') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RJL1599 SCRAP QUEUE FOR SAVE STORE QUEUE.') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.BNYM_BDS_ALL_S') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.42) +
   TARGET('MQABNY.MQABNY.BMC.BMC.BNYM_BDS_ALL_S') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RYN1413 THIS QUEUE IS TO SAVE THE MESSAGES') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.BNYM_BDS_ALL_X') +
*  ALTDATE(2010-05-19) +
*  ALTTIME(11.06.52) +
   TARGET('MQABNY.MQABNY.BMC.BMC.BNYM_BDS_ALL_X') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RYN1413 THIS QUEUE IS TO SAVE THE MESSAGES') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.BNYM_BDS_ERR_E') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.42) +
   TARGET('MQABNY.MQABNY.BMC.BMC.BNYM_BDS_ERR_E') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RYN1413 THIS QUEUE IS TO RECEIVE ERROR MESSAGES') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.BNYM_BDS_SCRAP') +
*  ALTDATE(2012-01-23) +
*  ALTTIME(21.41.43) +
   TARGET('MQABNY.MQABNY.BMC.BMC.BNYM_BDS_SCRAP') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RUS1582 THIS QUEUE IS TO RECEIVE SCRAP MESSAGES.') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.BNYM_BE1_RSP_I') +
*  ALTDATE(2010-03-05) +
*  ALTTIME(11.11.57) +
   TARGET('MQABNY.MQABNY.BMC.BMC.BNYM_BE1_RSP_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RYN1413 THIS QUEUE IS TO RECEIVE CONFIRAMTION MESSAGES') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.BNYM_BE2_RSP_I') +
*  ALTDATE(2010-03-05) +
*  ALTTIME(11.11.39) +
   TARGET('MQABNY.MQABNY.BMC.BMC.BNYM_BE2_RSP_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RYN1413 THIS QUEUE IS TO RECEIVE CONFIRAMTION MESSAGES') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.BNYM_CMS_ACK_M') +
*  ALTDATE(2013-02-26) +
*  ALTTIME(21.27.11) +
   TARGET('MQABNY.MQABNY.BMC.BMC.BNYM_CMS_ACK_M') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RYP1660 ACK IMTERMDIATE QUEUE FOR CMS') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.BNYM_CMS_CONF_M') +
*  ALTDATE(2013-02-26) +
*  ALTTIME(21.27.11) +
   TARGET('MQABNY.MQABNY.BMC.BMC.BNYM_CMS_CONF_M') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RYP1660 CONFIRM INTERMEDIATE QUEUE FOR CMS') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.BNYM_CTB_RSH_I') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.42) +
   TARGET('MQABNY.MQABNY.BMC.BMC.BNYM_CTB_RSH_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RYN1413 THIS QUEUE IS TO REFRESH CONFIRM ROUTE TABLE.') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.BNYM_CTB_RSH_O') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.42) +
   TARGET('MQABNY.MQABNY.BMC.BMC.BNYM_CTB_RSH_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RYN1413 THIS QUEUE IS TO REFRESH CONFIRM ROUTE TABLE.') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.BNYM_GSC_RSP_B') +
*  ALTDATE(2011-08-19) +
*  ALTTIME(12.22.25) +
   TARGET('MQABNY.MQABNY.BMC.BMC.BNYM_GSC_RSP_B') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RJL1599 SCRAP QUEUE FOR SAVE STORE QUEUE.') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.BNYM_GSC_RSP_I') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.42) +
   TARGET('MQABNY.MQABNY.BMC.BMC.BNYM_GSC_RSP_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RYN1413 THIS QUEUE IS TO RECEIVE CONFIRAMTION MESSAGES') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.BNYM_GSC_RSP_X') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.42) +
   TARGET('MQABNY.MQABNY.BMC.BMC.BNYM_GSC_RSP_X') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RYN1413 BACK OUT QUEUE FOR CONFIRMS.') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.BNYM_IMX2_ACK_M') +
*  ALTDATE(2013-02-26) +
*  ALTTIME(21.27.11) +
   TARGET('MQABNY.MQABNY.BMC.BMC.BNYM_IMX2_ACK_M') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RYP1660 INTERMEDIATE QUEUE FOR IMX2 ACK MESSAGES') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.BNYM_IMX2_CONF_M') +
*  ALTDATE(2012-05-09) +
*  ALTTIME(21.57.42) +
   TARGET('MQABNY.MQABNY.BMC.BMC.BNYM_IMX2_CONF_M') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RFJ1590 INTERMEDIATE QUEUE FOR IMX2 CONFIRM MESSAGES') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.CASH_INS_I') +
*  ALTDATE(2014-08-11) +
*  ALTTIME(23.50.56) +
   TARGET('MQABNY.MQABNY.BMC.BMC.CASH_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RJS1724 BDC CASH INP QUEUE') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.CMI_ACK_M') +
*  ALTDATE(2013-05-15) +
*  ALTTIME(12.15.15) +
   TARGET('MQABNY.MQABNY.BMC.BMC.CMI_ACK_M') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR(' ') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.CMS_ACK_M') +
*  ALTDATE(2013-05-14) +
*  ALTTIME(04.11.36) +
   TARGET('MQABNY.MQABNY.BMC.BMC.CMS_ACK_M') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RQF1640 INTERMEDIATE QUEUE FOR CMS ACK MESSAGES') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.CMS_CONF_M') +
*  ALTDATE(2013-05-14) +
*  ALTTIME(04.11.36) +
   TARGET('MQABNY.MQABNY.BMC.BMC.CMS_CONF_M') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RQF1640 INTERMEDIATE QUEUE FOR CMS CONF MESSAGES') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.DMS_I_SCRAP') +
*  ALTDATE(2013-09-09) +
*  ALTTIME(03.21.54) +
   TARGET('MQABNY.MQABNY.BMC.BMC.DMS_I_SCRAP') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RWW1788 LOCAL QUE FOR SCRAP ADM DMS REC') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.FNF_566_INS_I') +
*  ALTDATE(2014-03-17) +
*  ALTTIME(05.14.34) +
   TARGET('MQABNY.MQABNY.BMC.BMC.FNF_566_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RYE1730 RECEIVING SWIFT PP MESSAGES') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.GSCX_DEF_RSP_O') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.42) +
   TARGET('MQABNY.MQABNY.BMC.BMC.GSCX_DEF_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RYN1413 THIS QUEUE IS TO HOLD MESSAGES WITHOUT ANY ROUTE') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.GTM_SWF_INS_I') +
*  ALTDATE(2012-03-27) +
*  ALTTIME(22.07.53) +
   TARGET('MQABNY.MQABNY.BMC.BMC.GTM_SWF_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RPG1649 THIS IS FOR GTM TO SEND MESSAGES TO BMC.') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.ICIQA_ACK_M') +
*  ALTDATE(2013-05-02) +
*  ALTTIME(15.11.21) +
   TARGET('MQABNY.MQABNY.BMC.BMC.ICIQA_ACK_M') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR(' ') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.ICIQA_ACK_O') +
*  ALTDATE(2013-05-02) +
*  ALTTIME(05.36.02) +
   TARGET('MQABNY.MQVBDS.BMC.BMC.ICIQA_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RHW1696 BROADRIDGE TEST QUEUE') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.ICIQA_RSP_O') +
*  ALTDATE(2013-05-02) +
*  ALTTIME(05.36.02) +
   TARGET('MQABNY.MQVBDS.BMC.BMC.ICIQA_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RHW1696 BROARDRIDGE TEST QUEUE') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.IMX2_ACK_M') +
*  ALTDATE(2013-05-14) +
*  ALTTIME(04.11.36) +
   TARGET('MQABNY.MQABNY.BMC.BMC.IMX2_ACK_M') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RQF1640 INTERMEDIATE QUEUE FOR IMX2 ACK MESSAGES') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.IMX2_CONF_M') +
*  ALTDATE(2013-05-14) +
*  ALTTIME(04.11.36) +
   TARGET('MQABNY.MQABNY.BMC.BMC.IMX2_CONF_M') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RQF1640 INTERMEDIATE QUEUE FOR IMX2 CONFIRMATIONS') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.MICS_APP_SP1_M') +
*  ALTDATE(2014-06-11) +
*  ALTTIME(18.38.20) +
   TARGET('MQABNY.MQVBNY.BMC.BMC.MICS_APP_SP1_M') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR(' ') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.MSGRTR_BDS_M') +
*  ALTDATE(2014-04-21) +
*  ALTTIME(07.21.48) +
   TARGET('MQABNY.MQABNY.BMC.BMC.MSGRTR_BDS_M') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RHL1690 RECEIVING MSGRTR MESSAGES') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.MX_CASH_DEFRSP_O') +
*  ALTDATE(2014-10-09) +
*  ALTTIME(01.48.33) +
   TARGET('MQABNY.MQABNY.BMC.BMC.MX_CASH_DEFRSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RXX1803 BDC MX CASH DEFAULT QUEUE') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.QMON_CMD_RSP_M') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.42) +
   TARGET('MQABNY.MQABNY.BMC.BMC.QMON_CMD_RSP_M') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RWL1448 THIS QUEUE IS TO COMMAND RESPONSES BY QMON.') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.QMON_RPT_ALM_M') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.42) +
   TARGET('MQABNY.MQABNY.BMC.BMC.QMON_RPT_ALM_M') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RWL1448 THIS QUEUE IS TO REPORT ALARM BY QMON.') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.QMON_RPT_STS_M') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQABNY.MQABNY.BMC.BMC.QMON_RPT_STS_M') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RWL1448 THIS QUEUE TO REPORT STATUS BY QMON.') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.RPOALLOC_INS_I') +
*  ALTDATE(2014-07-02) +
*  ALTTIME(22.23.35) +
   TARGET('MQABNY.MQVBNY.BMC.BMC.RPOALLOC_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RPT1809 INBOUND MESSAGES FOR REPO ALLOCATIONS.') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.SSB_ACK_M') +
*  ALTDATE(2013-07-15) +
*  ALTTIME(03.41.49) +
   TARGET('MQABNY.MQABNY.BMC.BMC.SSB_ACK_M') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RMQ1656 INTER.QUEUE FOR SSB ACK/NAK.') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.SSB_CONF_M') +
*  ALTDATE(2013-07-15) +
*  ALTTIME(03.41.49) +
   TARGET('MQABNY.MQABNY.BMC.BMC.SSB_CONF_M') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RMQ1656 INTER.QUEUE FOR SSB CONFIRMS') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.SWFNET_ACK_M') +
*  ALTDATE(2014-03-25) +
*  ALTTIME(07.40.40) +
   TARGET('MQABNY.MQABNY.BMC.BMC.SWFNET_ACK_M') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RHG1770 SWIFT NET ACK QUEUE') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.SWFNET_CONF_M') +
*  ALTDATE(2013-05-14) +
*  ALTTIME(04.11.36) +
   TARGET('MQABNY.MQABNY.BMC.BMC.SWFNET_CONF_M') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RQF1640 INTERMEDIATE QUEUE FOR SWFNET CONF MESSAGES') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.SWFNET_FED_INS_I') +
*  ALTDATE(2014-03-17) +
*  ALTTIME(05.14.34) +
   TARGET('MQABNY.MQABNY.BMC.BMC.SWFNET_FED_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RYE1730 RECEIVING SWIFT FED MESSAGES') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.SWFPP_ACK_M') +
*  ALTDATE(2014-03-25) +
*  ALTTIME(07.40.40) +
   TARGET('MQABNY.MQABNY.BMC.BMC.SWFPP_ACK_M') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RHG1770 SWIFT PP ACK QUEUE') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.SWFPP_CONF_M') +
*  ALTDATE(2013-05-14) +
*  ALTTIME(04.11.36) +
   TARGET('MQABNY.MQABNY.BMC.BMC.SWFPP_CONF_M') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RQF1640 INTERMEDIATE QUEUE FOR SWFPP CONF MESSAGES') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.SWFPP_FED_INS_I') +
*  ALTDATE(2014-03-17) +
*  ALTTIME(05.14.34) +
   TARGET('MQABNY.MQABNY.BMC.BMC.SWFPP_FED_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RYE1730 SENDING FED MESSAGES') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.SWFPP_INS_I') +
*  ALTDATE(2014-03-17) +
*  ALTTIME(05.14.34) +
   TARGET('MQABNY.MQABNY.BMC.BMC.SWFPP_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RYE1730 RECEIVING SWIFT PP MESSAGES') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.SWF_ACK_M') +
*  ALTDATE(2014-03-25) +
*  ALTTIME(07.40.40) +
   TARGET('MQABNY.MQABNY.BMC.BMC.SWF_ACK_M') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RHG1770 SWIFT ACK QUEUE') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.SWF_ADM_INS_I') +
*  ALTDATE(2014-03-17) +
*  ALTTIME(05.14.34) +
   TARGET('MQABNY.MQABNY.BMC.BMC.SWF_ADM_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RYE1730 SENDING ADM MESSAGES') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.SWF_CASH_INS_I') +
*  ALTDATE(2014-03-17) +
*  ALTTIME(05.14.34) +
   TARGET('MQABNY.MQABNY.BMC.BMC.SWF_CASH_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RYE1730 SWIFT MESSAGES') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.SWF_DTC_INS_I') +
*  ALTDATE(2014-03-17) +
*  ALTTIME(05.14.34) +
   TARGET('MQABNY.MQABNY.BMC.BMC.SWF_DTC_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RYE1730 SENDING DTC MESSAGES') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.SWIFTNET_BDS_M') +
*  ALTDATE(2013-09-16) +
*  ALTTIME(01.17.33) +
   TARGET('MQABNY.MQABNY.BMC.BMC.SWIFTNET_BDS_M') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RIE1610 INTERMEDIATE QUEUE FOR SWIFT MESSAGES GOING TO FNI') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.SWIFTNET_BDS_X') +
*  ALTDATE(2013-11-19) +
*  ALTTIME(06.46.28) +
   TARGET('MQABNY.MQABNY.BMC.BMC.SWIFTNET_BDS_X') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVW1711 THIS IS A SCRAP QUEUE FOR MESSAGES NOT GOING TO FNI') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.SWIFTNET_NAK_M') +
*  ALTDATE(2014-10-28) +
*  ALTTIME(00.33.08) +
   TARGET('MQABNY.MQABNY.BMC.BMC.SWIFTNET_NAK_M') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RLE1750 SENDING FENAK AND NAK MESSAGES') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.SWIFT_PP_INS_I') +
*  ALTDATE(2012-11-19) +
*  ALTTIME(22.45.36) +
   TARGET('MQABNY.MQVBNY.BMC.BMC.SWIFT_PP_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RNQ1732 INBOUND FOR ADM') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.SWP_GSCX1_INST') +
*  ALTDATE(2013-07-24) +
*  ALTTIME(00.15.01) +
   TARGET('MQABNY.MQVBNY.BMC.BMC.SWP_GSCX1_INST') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RUJ1775 INBOUND FOR GSCX 1') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.SWP_GSCX2_INST') +
*  ALTDATE(2013-07-24) +
*  ALTTIME(00.15.01) +
   TARGET('MQABNY.MQVBNY.BMC.BMC.SWP_GSCX2_INST') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RUJ1775 QUEUE FOR SWP INBOUND GSCX 2') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.SWP_INS_I') +
*  ALTDATE(2012-09-28) +
*  ALTTIME(02.30.30) +
   TARGET('MQABNY.MQVBNY.BMC.BMC.SWP_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RKS1682 QUEUE FOR ADM SWP INBOUND') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.SWP_INS_I_1') +
*  ALTDATE(2012-09-28) +
*  ALTTIME(02.30.30) +
   TARGET('MQABNY.MQVBNY.BMC.BMC.SWP_INS_I_1') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RKS1682 INBOUND FOR GSCX 1') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.SWP_INS_I_2') +
*  ALTDATE(2012-09-28) +
*  ALTTIME(02.30.30) +
   TARGET('MQABNY.MQVBNY.BMC.BMC.SWP_INS_I_2') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RKS1682 QUEUE FOR SWP INBOUND GSCX 2') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.TEMP_APP_SP1_M') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQABNY.MQABNY.BMC.BMC.TEMP_APP_SP1_M') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RAX1386 THIS IS A SPARE QUEUE') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.TEMP_APP_SP2_M') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQABNY.MQABNY.BMC.BMC.TEMP_APP_SP2_M') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RAX1386 THIS IS A SPARE QUEUE') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.TEMP_APP_SP3_M') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQABNY.MQABNY.BMC.BMC.TEMP_APP_SP3_M') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RAX1386 THIS IS A SPARE QUEUE') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.TEMP_APP_SP4_M') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQABNY.MQABNY.BMC.BMC.TEMP_APP_SP4_M') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RAX1386 THIS IS A SPARE QUEUE') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.TEMP_APP_SP5_M') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQABNY.MQABNY.BMC.BMC.TEMP_APP_SP5_M') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RAX1386 THIS IS A SPARE QUEUE') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.TEMP_APP_SP6_M') +
*  ALTDATE(2011-12-09) +
*  ALTTIME(11.29.31) +
   TARGET('MQABNY.MQABNY.BMC.BMC.TEMP_APP_SP6_M') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RAX1386 THIS IS A SPARE QUEUE') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMC.TEMP_APP_SP7_M') +
*  ALTDATE(2011-12-09) +
*  ALTTIME(11.29.40) +
   TARGET('MQABNY.MQABNY.BMC.BMC.TEMP_APP_SP7_M') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RAX1386 THIS IS A SPARE QUEUE') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMO.BMOCM_ACK_O') +
*  ALTDATE(2014-06-19) +
*  ALTTIME(08.07.51) +
   TARGET('MQABNY.MQWBMO.BMO.BMC.BMOCM_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RAL1578 ACKNAK QUEUE FOR BMOCM') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.BMO.BMOCM_RSP_O') +
*  ALTDATE(2014-06-19) +
*  ALTTIME(08.07.51) +
   TARGET('MQABNY.MQWBMO.BMO.BMC.BMOCM_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RAL1578 CONFIRM QUEUE FOR BMOCM') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.CIG.CIG_INS_I') +
*  ALTDATE(2013-02-26) +
*  ALTTIME(21.25.52) +
   TARGET('MQSCIG.MQABNY.BMC.CIG.CIG_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RAT1598 GSCX MESSAGES FROM CITADEL') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.CIG.CIG_RPO_RSP_O') +
*  ALTDATE(2013-02-26) +
*  ALTTIME(21.26.40) +
   TARGET('MQABNY.MQSCIG.CIG.BMC.CIG_RPO_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RIN1597 GSCX ACK/NACK TO CITADEL') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.CIG.CIG_RSP_O') +
*  ALTDATE(2013-02-26) +
*  ALTTIME(21.26.40) +
   TARGET('MQABNY.MQSCIG.CIG.BMC.CIG_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RIN1597 GSCX ACK/NACK TO CITADEL') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.CIG.CWT_RSP_O') +
*  ALTDATE(2013-02-26) +
*  ALTTIME(21.26.40) +
   TARGET('MQABNY.MQSCIG.CIG.BMC.CWT_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RIN1597 GSCX ACK/NACK TO CITADEL') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.CIG.FEP_RSP_O') +
*  ALTDATE(2013-02-26) +
*  ALTTIME(21.26.40) +
   TARGET('MQABNY.MQSCIG.CIG.BMC.FEP_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RIN1597 GSCX ACK/NACK TO CITADEL') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.CLS.CLASS_INS_I') +
*  ALTDATE(2011-05-16) +
*  ALTTIME(01.01.20) +
   TARGET('MQABNY.MQDBNY.CLS.BMC.CLASS_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RQD1544 RESPONSES FROM ABKA') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.CMS.GSC_INS_I_A') +
*  ALTDATE(2013-03-14) +
*  ALTTIME(10.05.28) +
   TARGET('MQMMEL.MQABNY.BMC.CMS.GSC_INS_I_A') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RUI1784 INPUT QUEUE FOR CMS UAT TEST') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.CMS.GSC_INS_I_S') +
*  ALTDATE(2013-03-14) +
*  ALTTIME(10.05.28) +
   TARGET('MQMMEL.MQABNY.BMC.CMS.GSC_INS_I_S') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RUI1784 INPUT QUEUE FOR CMS SIN TEST') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.CMS.GSC_INS_I_U') +
*  ALTDATE(2013-03-14) +
*  ALTTIME(10.05.29) +
   TARGET('MQMMEL.MQABNY.BMC.CMS.GSC_INS_I_U') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RUI1784 INPUT QUEUE FOR CMS UNIT TEST') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.CMS.GSC_RSP_O_A') +
*  ALTDATE(2013-02-13) +
*  ALTTIME(06.46.41) +
   TARGET('MQABNY.MQMHMEL.CMS.BMC.GSC_RSP_O_A') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RYD1666 RESPONSE QUEUE FOR UAT TEST') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.CMS.GSC_RSP_O_S') +
*  ALTDATE(2013-02-13) +
*  ALTTIME(06.46.41) +
   TARGET('MQABNY.MQMHMEL.CMS.BMC.GSC_RSP_O_S') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RYD1666 RESPONSE QUEUE FOR SIN TEST') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.CMS.GSC_RSP_O_U') +
*  ALTDATE(2013-02-13) +
*  ALTTIME(06.46.41) +
   TARGET('MQABNY.MQMHMEL.CMS.BMC.GSC_RSP_O_U') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RYD1666 RESPONSE QUEUE FOR UNIT TEST') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.CTG.RPOCNF_LIVE_RSP_O') +
*  ALTDATE(2014-07-14) +
*  ALTTIME(07.47.24) +
   TARGET('MQABNY.MQMCTG.CTG.BMC.RPOCNF_LIVE_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RKY1778 CONFIRMATIONS IN LIVE MODE.') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.CTG.RPOCNF_PROJ_RSP_O') +
*  ALTDATE(2014-07-14) +
*  ALTTIME(07.47.24) +
   TARGET('MQABNY.MQMCTG.CTG.BMC.RPOCNF_PROJ_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RKY1778 CONFIRMATIONS IN PROJECTED MODE.') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.FHF.FHF_INS_O') +
*  ALTDATE(2010-09-23) +
*  ALTTIME(05.16.43) +
   TARGET('MQABNY.MQWBNY.FHF.BMC.FHF_INS_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RDV1444 TO SEND MESSAGES TO FHF.') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.FIS.DWR_ACK_O') +
*  ALTDATE(2010-08-20) +
*  ALTTIME(12.53.43) +
   TARGET('MQABNY.MQMMOR.FIS.BMC.DWR_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RIR1463 ACK/NACK TO MORGAN') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.FIS.DWR_ACK_O_D') +
*  ALTDATE(2012-11-19) +
*  ALTTIME(22.45.59) +
   TARGET('MQABNY.MQMMOR.FIS.BMC.DWR_ACK_O_D') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RCM1661 GSCX ACK/NAK TO MS-DEANWITTER-MQ35') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.FIS.DWR_ACK_O_ND') +
*  ALTDATE(2012-11-19) +
*  ALTTIME(22.45.59) +
   TARGET('MQABNY.MQMMOR.FIS.BMC.DWR_ACK_O_ND') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RCM1661 GSCX ACK/NAK TO MS-DEANWITTER-MQ72') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.FIS.DWR_INS_I') +
*  ALTDATE(2010-08-20) +
*  ALTTIME(12.52.55) +
   TARGET('MQMMOR.MQABNY.BMC.FIS.DWR_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RGM1488 MSSB INSTRUCTIONS') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.FIS.DWR_INS_I_D') +
*  ALTDATE(2012-11-12) +
*  ALTTIME(20.25.50) +
   TARGET('MQMMOR.MQABNY.BMC.FIS.DWR_INS_I_D') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('ROC1662 SETTL INSTR FROM MS-DEANWITTER-MQ35') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.FIS.DWR_INS_I_ND') +
*  ALTDATE(2012-11-12) +
*  ALTTIME(20.25.50) +
   TARGET('MQMMOR.MQABNY.BMC.FIS.DWR_INS_I_ND') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('ROC1662 SETTL INSTR FROM MS-DEANWITTER-MQ72') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.FIS.DWR_RSP_O') +
*  ALTDATE(2010-08-20) +
*  ALTTIME(12.53.43) +
   TARGET('MQABNY.MQMMOR.FIS.BMC.DWR_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RIR1463 SETTLEMENT TO MORGAN') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.FIS.DWR_RSP_O_D') +
*  ALTDATE(2012-11-19) +
*  ALTTIME(22.45.59) +
   TARGET('MQABNY.MQMMOR.FIS.BMC.DWR_RSP_O_D') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RCM1661 GSCX CONFIRMS TO MS-DEANWITTER-MQ35') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.FIS.DWR_RSP_O_ND') +
*  ALTDATE(2012-11-19) +
*  ALTTIME(22.46.00) +
   TARGET('MQABNY.MQMMOR.FIS.BMC.DWR_RSP_O_ND') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RCM1661 GSCX CONFIRMS TO MS-DEANWITTER-MQ72') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.FNI.SWIFTNET_ALL_O') +
*  ALTDATE(2013-04-04) +
*  ALTTIME(23.13.11) +
   TARGET('MQXBNY.MQABNY.FNI.///.SWIFTNET_ALL_O.MULT') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RQU1529 BMC TO FNI FROM TWO MQM') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.FNI.SWIFTNET_BDS_O') +
*  ALTDATE(2013-08-28) +
*  ALTTIME(01.10.41) +
   TARGET('MQXBNY.MQABNY.FNI.///.SWIFTNET_BDS_O.MULT') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RAC1573 BMC TO FNI FOR BDS') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.FNI.SWIFTNET_DMM_O') +
*  ALTDATE(2013-08-28) +
*  ALTTIME(01.10.41) +
   TARGET('MQXBNY.MQABNY.FNI.///.SWIFTNET_DMM_O.MULT') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RAC1573 BMC TO FNI FOR DMM') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.GMS.GSEC_ACK_O') +
*  ALTDATE(2014-09-17) +
*  ALTTIME(05.33.22) +
   TARGET('MQABNY.MQMGSEC.GMS.BMC.GSEC_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('REL1725 ACK/NAK TO GOLDMAN-GSEC.') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.GMS.GSEC_RSP_O') +
*  ALTDATE(2014-09-17) +
*  ALTTIME(05.33.22) +
   TARGET('MQABNY.MQMGSEC.GMS.BMC.GSEC_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('REL1725 CONFIRMATIONS TO GOLDMAN-GSEC.') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.GSC.BDC_FTSIN_I') +
*  ALTDATE(2014-02-13) +
*  ALTTIME(02.13.04) +
   TARGET('MQABNY.MQABNY.GSC.BMC.BDC_FTSIN_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RCQ1747 FTSINTERNAL QUEUE TO GSC') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.GSC.BDC_FTSIN_R') +
*  ALTDATE(2014-02-13) +
*  ALTTIME(02.13.04) +
   TARGET('MQABNY.MQABNY.GSC.BMC.BDC_FTSIN_R') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RCQ1747 FTSRJT QUEUE TO GSC') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.GSC.BDC_FTSOUT_O') +
*  ALTDATE(2014-02-13) +
*  ALTTIME(02.13.04) +
   TARGET('MQABNY.MQABNY.GSC.BMC.BDC_FTSOUT_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RCQ1747 FTSOUT QUEUE TO GSC') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QLOCAL('BMC.GSC.CLMC_BE11_RSP_O') +
   ACCTQ(QMGR) +
*  ALTDATE(2011-11-14) +
*  ALTTIME(10.50.43) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2011-11-14) +
*  CRTIME(10.50.43) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR(' ') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(50000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QALIAS('BMC.GSC.FTSIN_INS_I') +
*  ALTDATE(2014-02-13) +
*  ALTTIME(02.32.03) +
   TARGET('MQABNY.MQABNY.BMC.GSC.FTSIN_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RJB1668 FTS INCOMING QUEUE FROM GSC') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.GTM.GTM_SWF_INS_I_C') +
*  ALTDATE(2012-03-02) +
*  ALTTIME(12.02.47) +
   TARGET('MQMBNY.MQABNY.BMC.GTM.GTM_SWF_INS_I_C') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RQK1557 TO SEND THE SWIFT MESSAGES TO BMC FOR XAW.') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.GUI.CLMC_AE11_RSP_O') +
*  ALTDATE(2011-08-18) +
*  ALTTIME(19.35.09) +
   TARGET('MQABNY.MQSBNY.GUI.BMC.CLMC_AE11_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RXB1618 THIS IS TO SEND CLM CMD. RESPONSES TO AE-SQLB.') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.GUI.CLMC_AE21_RSP_O') +
*  ALTDATE(2011-08-18) +
*  ALTTIME(19.36.42) +
   TARGET('MQABNY.MQSBNY.GUI.BMC.CLMC_AE21_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RCI1584 THIS IS TO SEND CLM CMD. RESPONSES TO AE-SQLO.') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.GUI.CLMI_AE11_RSP_O') +
*  ALTDATE(2011-08-18) +
*  ALTTIME(19.35.09) +
   TARGET('MQABNY.MQSBNY.GUI.BMC.CLMI_AE11_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RXB1618 THIS IS TO SEND CLM INQ. RESPONSES TO AE-SQLB.') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.GUI.CLMI_AE21_RSP_O') +
*  ALTDATE(2011-08-18) +
*  ALTTIME(19.36.42) +
   TARGET('MQABNY.MQSBNY.GUI.BMC.CLMI_AE21_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RCI1584 THIS IS TO SEND CLM INQ. RESPONSES TO AE-SQLO.') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.ACC_ACK_O') +
*  ALTDATE(2010-04-21) +
*  ALTTIME(15.11.56) +
   TARGET('MQABNY.MQDADP.IMP.BMC.ACC_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVT1400 GSCX ACK/NAK TO US CLEARING - ADP / ICI') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.ACC_INS_I') +
*  ALTDATE(2010-04-21) +
*  ALTTIME(15.12.17) +
   TARGET('MQDADP.MQABNY.BMC.IMP.ACC_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RAN1331 GSCX INSTRUCTIONS FROM US CLEARING') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.ACC_RSP_O') +
*  ALTDATE(2010-04-21) +
*  ALTTIME(15.12.37) +
   TARGET('MQABNY.MQDADP.IMP.BMC.ACC_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVT1400 GSCX CONFIRMS TO US CLEARING - ADP / ICI') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.AMH_ACK_O') +
*  ALTDATE(2010-09-08) +
*  ALTTIME(05.13.36) +
   TARGET('MQABNY.MQDADP.IMP.BMC.AMH_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RCL1484 GSCX ACK/NACK TO ADP/AMHERST') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.AMH_INS_I') +
*  ALTDATE(2010-09-08) +
*  ALTTIME(04.57.50) +
   TARGET('MQDADP.MQABNY.BMC.IMP.AMH_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVQ1408 GSCX INSTRUCTIONS FROM AMHERST') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.AMH_RSP_O') +
*  ALTDATE(2010-09-08) +
*  ALTTIME(05.13.36) +
   TARGET('MQABNY.MQDADP.IMP.BMC.AMH_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RCL1484 GSCX CONFIRMS TO ADP/AMHERST') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.BAS_ACK_O') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQABNY.MQDADP.IMP.BMC.BAS_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVT1400 GSCX ACK/NAK TO BOA- ADP / ICI') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.BAS_INS_I') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQDADP.MQABNY.BMC.IMP.BAS_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RAN1331 GSCX INSTRUCTIONS FROM BANK OF AMERICA') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.BAS_RSP_O') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQABNY.MQDADP.IMP.BMC.BAS_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVT1400 GSCX CONFIRMS TO BOA- ADP / ICI') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.BMO_ACK_O') +
*  ALTDATE(2010-04-21) +
*  ALTTIME(14.25.44) +
   TARGET('MQABNY.MQDADP.IMP.BMC.BMO_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVT1400 GSCX ACK/NAK TO BNAK OF MONTREAL - ADP / ICI') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.BMO_INS_I') +
*  ALTDATE(2010-04-21) +
*  ALTTIME(14.25.14) +
   TARGET('MQDADP.MQABNY.BMC.IMP.BMO_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RAN1331 GSCX INSTRUCTIONS FROM BANK OF MONTREAL') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.BMO_RSP_O') +
*  ALTDATE(2010-04-21) +
*  ALTTIME(14.26.09) +
   TARGET('MQABNY.MQDADP.IMP.BMC.BMO_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVT1400 GSCX CONFIRMS TO BANK OF MONTREAL- ADP / ICI') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.BNK_ACK_O') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQABNY.MQDADP.IMP.BMC.BNK_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVT1400 GSCX ACK/NAK TO BOA- ADP / ICI') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.BNK_INS_I') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQDADP.MQABNY.BMC.IMP.BNK_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RAN1331 GSCX INSTRUCTIONS FROM BANK OF AMERICA') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.BNK_RSP_O') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQABNY.MQDADP.IMP.BMC.BNK_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVT1400 GSCX CONFIRMS TO BOA- ADP / ICI') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.BNP_ACK_O') +
*  ALTDATE(2013-07-15) +
*  ALTTIME(03.56.33) +
   TARGET('MQABNY.MQDADP.IMP.BMC.BNP_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RIM1747 BROADRIDGE BNP ACK') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.BNP_INS_I') +
*  ALTDATE(2013-07-15) +
*  ALTTIME(03.34.28) +
   TARGET('MQDADP.MQABNY.BMC.IMP.BNP_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RDO1687 BNP INSTRUCTIONS') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.BNP_RSP_O') +
*  ALTDATE(2013-07-15) +
*  ALTTIME(03.56.33) +
   TARGET('MQABNY.MQDADP.IMP.BMC.BNP_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RIM1747 BROADRIDGE BNP RSP') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.BZW_ACK_O') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQABNY.MQDADP.IMP.BMC.BZW_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVT1400 GSCX ACK/NAK TO BARCLAYS - ADP / ICI') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.BZW_INS_I') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQDADP.MQABNY.BMC.IMP.BZW_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RAN1331 GSCX INSTRUCTIONS FROM BARCLAYS') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.BZW_RSP_O') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQABNY.MQDADP.IMP.BMC.BZW_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVT1400 GSCX CONFIRMS TO BARCLAYS - ADP / ICI') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.CITI_ACK_O') +
*  ALTDATE(2010-06-21) +
*  ALTTIME(12.10.55) +
   TARGET('MQABNY.MQDADP.IMP.BMC.CITI_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RDW1397 ACK/NACK TO ADP') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.CITI_INS_I') +
*  ALTDATE(2010-06-21) +
*  ALTTIME(20.37.06) +
   TARGET('MQDADP.MQABNY.BMC.IMP.CITI_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RYM1493 ADP INSTRUCTIONS') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.CITI_RSP_O') +
*  ALTDATE(2010-06-21) +
*  ALTTIME(12.10.55) +
   TARGET('MQABNY.MQDADP.IMP.BMC.CITI_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RDW1397 SETTLEMENT TO ADP') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.CRT_ACK_O') +
*  ALTDATE(2010-09-24) +
*  ALTTIME(14.31.44) +
   TARGET('MQABNY.MQDADP.IMP.BMC.CRT_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSC1435 GSCX ACK/NACK TO CRT CAPITAL') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.CRT_INS_I') +
*  ALTDATE(2010-09-24) +
*  ALTTIME(14.30.48) +
   TARGET('MQDADP.MQABNY.BMC.IMP.CRT_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RKA1505 SETTL INSTR. FOR CRT-CAPITAL.') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.CRT_RSP_O') +
*  ALTDATE(2010-09-24) +
*  ALTTIME(14.31.44) +
   TARGET('MQABNY.MQDADP.IMP.BMC.CRT_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSC1435 GSCX CONFIRMS TO CRT CAPITAL') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.ETRD_ACK_O') +
*  ALTDATE(2011-07-13) +
*  ALTTIME(01.24.58) +
   TARGET('MQABNY.MQDADP.IMP.BMC.ETRD_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('REH1553 GSCX ACK/NAK TO ETRADE.') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.ETRD_INS_I') +
*  ALTDATE(2011-07-13) +
*  ALTTIME(01.24.58) +
   TARGET('MQDADP.MQABNY.BMC.IMP.ETRD_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RFS1595 SETTL INSTR. FOR ETRADE.') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.ETRD_RSP_O') +
*  ALTDATE(2011-07-13) +
*  ALTTIME(01.24.58) +
   TARGET('MQABNY.MQDADP.IMP.BMC.ETRD_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('REH1553 GSCX CONFIRMS TO ETRADE.') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.FOR_ACK_O') +
*  ALTDATE(2010-03-09) +
*  ALTTIME(10.22.02) +
   TARGET('MQABNY.MQDADP.IMP.BMC.FOR_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RRU1438 GSCX ACK/NAK TO MEES PIERSON - ADP / ICI') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.FOR_INS_I') +
*  ALTDATE(2010-03-08) +
*  ALTTIME(11.27.41) +
   TARGET('MQDADP.MQABNY.BMC.IMP.FOR_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RPF1430 GSCX INSTRUCTIONS FROM MEES PIERSON') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.FOR_RSP_O') +
*  ALTDATE(2010-03-09) +
*  ALTTIME(10.22.02) +
   TARGET('MQABNY.MQDADP.IMP.BMC.FOR_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RRU1438 GSCX CONFIRMS TO MEES PIERSON - ADP / ICI') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.GRIF_ACK_O') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQABNY.MQDADP.IMP.BMC.GRIF_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSC1351 ACK/NAK TO ADP/BROADRIDGE') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.GRIF_INS_I') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQDADP.MQABNY.BMC.IMP.GRIF_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RND1316 GRIFFEN/ADP GSCX INSTRUCTIONS') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.GRIF_RSP_O') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQABNY.MQDADP.IMP.BMC.GRIF_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSC1351 RESPONSES TO ADP/BROADRIDGE') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.HVB_ACK_O') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQABNY.MQDADP.IMP.BMC.HVB_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVT1400 GSCX ACK/NAK  TO HYPO VERIENS- ADP / ICI') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.HVB_INS_I') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQDADP.MQABNY.BMC.IMP.HVB_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RAN1331 GSCX INSTRUCTIONS FROM HYPO VERIENS') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.HVB_RSP_O') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQABNY.MQDADP.IMP.BMC.HVB_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVT1400 GSCX CONFIRMS TO HYPO VERIENS- ADP / ICI') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.ICIQA_ACK_O') +
*  ALTDATE(2013-05-02) +
*  ALTTIME(05.35.07) +
   TARGET('MQABNY.MQDADP.IMP.BMC.ICIQA_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RMT1470 BROADRIDGE TEST QUEUE') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.ICIQA_INS_I') +
*  ALTDATE(2013-05-02) +
*  ALTTIME(07.06.43) +
   TARGET('MQDADP.MQABNY.BMC.IMP.ICIQA_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RIO1707 BROADRIDGE TEST QUEUE') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.ICIQA_RSP_O') +
*  ALTDATE(2013-05-02) +
*  ALTTIME(05.35.07) +
   TARGET('MQABNY.MQDADP.IMP.BMC.ICIQA_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RMT1470 BROARDRIDGE TEST QUEUE') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.ING_ACK_O') +
*  ALTDATE(2010-06-14) +
*  ALTTIME(11.25.24) +
   TARGET('MQABNY.MQDADP.IMP.BMC.ING_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RFX1436 ACK/NACK TO ADP') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.ING_INS_I') +
*  ALTDATE(2010-06-14) +
*  ALTTIME(13.01.54) +
   TARGET('MQDADP.MQABNY.BMC.IMP.ING_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RCA1472 ADP INSTRUCTIONS') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.ING_RSP_O') +
*  ALTDATE(2010-06-14) +
*  ALTTIME(11.25.24) +
   TARGET('MQABNY.MQDADP.IMP.BMC.ING_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RFX1436 SETTLEMENT TO ADP') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.JEF_ACK_O') +
*  ALTDATE(2010-04-21) +
*  ALTTIME(14.36.12) +
   TARGET('MQABNY.MQDADP.IMP.BMC.JEF_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVT1400 GSCX ACK/NAK TO JEFFERIES - ADP / ICI') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.JEF_INS_I') +
*  ALTDATE(2010-04-21) +
*  ALTTIME(14.35.50) +
   TARGET('MQDADP.MQABNY.BMC.IMP.JEF_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RAN1331 GSCX INSTRUCTIONS FROM JEFFERIES') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.JEF_RSP_O') +
*  ALTDATE(2010-04-21) +
*  ALTTIME(14.36.34) +
   TARGET('MQABNY.MQDADP.IMP.BMC.JEF_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVT1400 GSCX CONFIRMS TO JEFFERIES- ADP / ICI') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.JMC_ACK_O') +
*  ALTDATE(2010-04-21) +
*  ALTTIME(15.21.22) +
   TARGET('MQABNY.MQDADP.IMP.BMC.JMC_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVT1400 GSCX ACK/NAK TO JP MORGAN CHASE - ADP / ICI') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.JMC_INS_I') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQDADP.MQABNY.BMC.IMP.JMC_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RAN1331 GSCX INSTRUCTIONS FROM JP MPRGAN CHASE') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.JMC_RSP_O') +
*  ALTDATE(2010-04-21) +
*  ALTTIME(15.21.51) +
   TARGET('MQABNY.MQDADP.IMP.BMC.JMC_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVT1400 GSCX CONFIRMS TO JP MORGAN CHASE - ADP / ICI') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.KGS_ACK_O') +
*  ALTDATE(2012-03-21) +
*  ALTTIME(21.32.06) +
   TARGET('MQABNY.MQDADP.IMP.BMC.KGS_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RFV1583 ACK/NACK TO ADP') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.KGS_INS_I') +
*  ALTDATE(2012-03-21) +
*  ALTTIME(21.33.21) +
   TARGET('MQDADP.MQABNY.BMC.IMP.KGS_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RMV1600 ADP INSTRUCTIONS') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.KGS_RSP_O') +
*  ALTDATE(2012-03-21) +
*  ALTTIME(21.32.06) +
   TARGET('MQABNY.MQDADP.IMP.BMC.KGS_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RFV1583 CONFIRMS TO ADP') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.LBBW_ACK_O') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQABNY.MQDADP.IMP.BMC.LBBW_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVT1400 GSCX ACK/NAK TO LANDS BANK- ADP / ICI') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.LBBW_INS_I') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQDADP.MQABNY.BMC.IMP.LBBW_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RAN1331 GSCX INSTRUCTIONS FROM LANDS BANK') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.LBBW_RSP_O') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQABNY.MQDADP.IMP.BMC.LBBW_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVT1400 GSCX CONFIRMS TO LANDS BANK- ADP / ICI') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.LEG_ACK_O') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQABNY.MQDADP.IMP.BMC.LEG_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVT1400 GSCX ACK/NAK TO LEGG MASON - ADP / ICI') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.LEG_INS_I') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQDADP.MQABNY.BMC.IMP.LEG_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RAN1331 GSCX INSTRUCTIONS FROM LEGG MASON') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.LEG_RSP_O') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQABNY.MQDADP.IMP.BMC.LEG_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVT1400 GSCX CONFIRMS TO LEGG MASON - ADP / ICI') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.MCD_ACK_O') +
*  ALTDATE(2010-04-20) +
*  ALTTIME(12.26.29) +
   TARGET('MQABNY.MQDADP.IMP.BMC.MCD_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVT1400 GSCX ACK/NAK TO OPPENHIEMER- ADP / ICI') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.MCD_INS_I') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQDADP.MQABNY.BMC.IMP.MCD_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RAN1331 GSCX INSTRUCTIONS FROM KEY BANK') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.MCD_RSP_O') +
*  ALTDATE(2010-04-20) +
*  ALTTIME(12.26.38) +
   TARGET('MQABNY.MQDADP.IMP.BMC.MCD_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVT1400 GSCX CONFIRMS TO OPPENHIEMER- ADP / ICI') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.MZS_ACK_O') +
*  ALTDATE(2010-04-21) +
*  ALTTIME(15.02.11) +
   TARGET('MQABNY.MQDADP.IMP.BMC.MZS_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVT1400 GSCX ACK/NAK TO MIZUHO - ADP / ICI') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.MZS_INS_I') +
*  ALTDATE(2010-04-21) +
*  ALTTIME(15.01.40) +
   TARGET('MQDADP.MQABNY.BMC.IMP.MZS_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RAN1331 GSCX INSTRUCTIONS FROM MIZUHO') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.MZS_RSP_O') +
*  ALTDATE(2010-04-21) +
*  ALTTIME(15.02.38) +
   TARGET('MQABNY.MQDADP.IMP.BMC.MZS_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVT1400 GSCX CONFIRMS TO MIZUHO - ADP / ICI') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.NAB_ACK_O') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQABNY.MQDADP.IMP.BMC.NAB_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVT1400 GSCX ACK/NAK TO NATIONAL AUSTRALIA BANK- ADP / ICI') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.NAB_INS_I') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQDADP.MQABNY.BMC.IMP.NAB_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RAN1331 GSCX INSTRUCTIONS FROM NATIONAL AUSTRALIA BANK') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.NAB_RSP_O') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQABNY.MQDADP.IMP.BMC.NAB_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVT1400 GSCX CONFIRMS TO NATIONAL AUSTRALIA BANK- ADP / ICI') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.NOMUS_ACK_O') +
*  ALTDATE(2010-04-19) +
*  ALTTIME(16.50.44) +
   TARGET('MQABNY.MQDADP.IMP.BMC.NOMUS_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('REX1412 ACK/NACK TO ADP') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.NOMUS_INS_I') +
*  ALTDATE(2010-04-19) +
*  ALTTIME(16.50.44) +
   TARGET('MQDADP.MQABNY.BMC.IMP.NOMUS_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVO1493 ADP INSTRUCTIONS') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.NOMUS_RSP_O') +
*  ALTDATE(2010-04-19) +
*  ALTTIME(16.50.44) +
   TARGET('MQABNY.MQDADP.IMP.BMC.NOMUS_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('REX1412 SETTLEMENT TO ADP') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.NSB_ACK_O') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQABNY.MQDADP.IMP.BMC.NSB_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVT1400 GSCX ACK/NAK TO NESBIT BURNS- ADP / ICI') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.NSB_INS_I') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQDADP.MQABNY.BMC.IMP.NSB_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RAN1331 GSCX INSTRUCTIONS FROM NESBIT BURNS') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.NSB_RSP_O') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQABNY.MQDADP.IMP.BMC.NSB_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVT1400 GSCX CONFIRMS TO NESBIT BURNS- ADP / ICI') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.OPNH_ACK_O') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQABNY.MQDADP.IMP.BMC.OPNH_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVT1400 GSCX ACK/NAK TO OPPENHIEMER- ADP / ICI') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.OPNH_INS_I') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQDADP.MQABNY.BMC.IMP.OPNH_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RAN1331 GSCX INSTRUCTIONS FROM OPPENHEIMER') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.OPNH_RSP_O') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQABNY.MQDADP.IMP.BMC.OPNH_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVT1400 GSCX CONFIRMS TO OPPENHIEMER- ADP / ICI') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.PJC_ACK_O') +
*  ALTDATE(2010-04-20) +
*  ALTTIME(11.52.52) +
   TARGET('MQABNY.MQDADP.IMP.BMC.PJC_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVT1400 GSCX ACK/NAK TO OPPENHIEMER- ADP / ICI') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.PJC_INS_I') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQDADP.MQABNY.BMC.IMP.PJC_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RAN1331 GSCX INSTRUCTIONS FROM PIPER JEFFERIES') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.PJC_RSP_O') +
*  ALTDATE(2010-04-20) +
*  ALTTIME(11.52.34) +
   TARGET('MQABNY.MQDADP.IMP.BMC.PJC_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVT1400 GSCX CONFIRMS TO OPPENHIEMER- ADP / ICI') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.QPE_ACK_O') +
*  ALTDATE(2012-04-16) +
*  ALTTIME(21.47.56) +
   TARGET('MQABNY.MQDADP.IMP.BMC.QPE_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RUO1688 GSCX ACK/NAK TO PIERPONT') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.QPE_INS_I') +
*  ALTDATE(2012-04-16) +
*  ALTTIME(21.44.24) +
   TARGET('MQDADP.MQABNY.BMC.IMP.QPE_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RRX1663 GSCX MESSAGES FROM PIERPOINT') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.QPE_RSP_O') +
*  ALTDATE(2012-04-16) +
*  ALTTIME(21.47.56) +
   TARGET('MQABNY.MQDADP.IMP.BMC.QPE_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RUO1688 GSCX CONFIRMS TO PIERPONT.') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.RBCD_ACK_O') +
*  ALTDATE(2010-05-28) +
*  ALTTIME(14.38.15) +
   TARGET('MQABNY.MQDADP.IMP.BMC.RBCD_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVT1400 GSCX ACK/NAK TO RBCDAIN - ADP / ICI') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.RBCD_INS_I') +
*  ALTDATE(2010-05-28) +
*  ALTTIME(14.38.32) +
   TARGET('MQDADP.MQABNY.BMC.IMP.RBCD_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RAN1331 GSCX INSTRUCTIONS FROM RBCDAIN') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.RBCD_RSP_O') +
*  ALTDATE(2010-05-28) +
*  ALTTIME(14.38.54) +
   TARGET('MQABNY.MQDADP.IMP.BMC.RBCD_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVT1400 GSCX CONFIRMS TO RBCDAIN - ADP / ICI') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.RBC_ACK_O') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQABNY.MQDADP.IMP.BMC.RBC_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVT1400 GSCX ACK/NAK TO RBC CAPITAL - ADP / ICI') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.RBC_INS_I') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQDADP.MQABNY.BMC.IMP.RBC_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RAN1331 GSCX INSTRUCTIONS FROM RBC CAPITAL') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.RBC_RSP_O') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQABNY.MQDADP.IMP.BMC.RBC_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVT1400 GSCX CONFIRMS TO RBC CAPITAL - ADP / ICI') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.RGE_ACK_O') +
*  ALTDATE(2010-03-08) +
*  ALTTIME(09.43.04) +
   TARGET('MQABNY.MQDADP.IMP.BMC.RGE_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RLX1402 GSCX ACK/NAK TO RIDGE CLEARING - ADP / ICI') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.RGE_INS_I') +
*  ALTDATE(2010-03-08) +
*  ALTTIME(09.20.54) +
   TARGET('MQDADP.MQABNY.BMC.IMP.RGE_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RDC1383 GSCX INSTRUCTIONS FROM RIDGE CLEARING') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.RGE_RSP_O') +
*  ALTDATE(2010-03-08) +
*  ALTTIME(09.43.04) +
   TARGET('MQABNY.MQDADP.IMP.BMC.RGE_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RLX1402 GSCX CONFIRMS TO RIDGE CLEARING  - ADP / ICI') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.SAM_ACK_O') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQABNY.MQDADP.IMP.BMC.SAM_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVT1400 GSCX ACK/NAK TO SWISS AMERICA - ADP / ICI') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.SAM_INS_I') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQDADP.MQABNY.BMC.IMP.SAM_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RAN1331 GSCX INSTRUCTIONS FROM SWISS AMERICAN SECURITIES') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.SAM_RSP_O') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQABNY.MQDADP.IMP.BMC.SAM_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVT1400 GSCX CONFRIMS TO SWISS AMERICA - ADP / ICI') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.SCO_ACK_O') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQABNY.MQDADP.IMP.BMC.SCO_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVT1400 GSCX ACK/NAK TO SCOTIA CAPITAL - ADP / ICI') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.SCO_INS_I') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQDADP.MQABNY.BMC.IMP.SCO_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RAN1331 GSCX INSTRUCTIONS FROM SCOTIA CAPITAL') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.SCO_RSP_O') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQABNY.MQDADP.IMP.BMC.SCO_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVT1400 GSCX ACK/NAK TO SCOTIA CAPITAL - ADP / ICI') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.SG_PD_ACK_O') +
*  ALTDATE(2010-05-11) +
*  ALTTIME(20.11.13) +
   TARGET('MQABNY.MQDADP.IMP.BMC.SG_PD_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RXP1482 ACK/NACK TO ADP FOR SOCIETE GENERALE PD MSGS') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.SG_PD_INS_I') +
*  ALTDATE(2010-05-11) +
*  ALTTIME(20.18.27) +
   TARGET('MQDADP.MQABNY.BMC.IMP.SG_PD_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RUC1410 SETTL INSTR. FOR SOCIETE GENERALE - PRIMERY DEALER') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.SG_PD_RSP_O') +
*  ALTDATE(2010-05-11) +
*  ALTTIME(20.11.13) +
   TARGET('MQABNY.MQDADP.IMP.BMC.SG_PD_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RXP1482 SETTL.CONF FOR SOCIETE GENERALE PD INSTR') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.SUNT_ACK_O') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQABNY.MQDADP.IMP.BMC.SUNT_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVT1400 GSCX ACK/NAK TO SUNTRUST - ADP / ICI') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.SUNT_INS_I') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQDADP.MQABNY.BMC.IMP.SUNT_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RAN1331 GSCX INSTRUCTIONS FROM SUNTRUST') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.SUNT_RSP_O') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQABNY.MQDADP.IMP.BMC.SUNT_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVT1400 GSCX CONFIRMS TO SUNTRUST - ADP / ICI') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.TDS_ACK_O') +
*  ALTDATE(2011-03-17) +
*  ALTTIME(10.31.22) +
   TARGET('MQABNY.MQMTDS.IMP.BMC.TDS_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RIO1521 GSCX ACK/NACK TO TDS SECURITIES') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.TDS_INS_I') +
*  ALTDATE(2011-03-17) +
*  ALTTIME(10.20.21) +
   TARGET('MQMTDS.MQABNY.BMC.IMP.TDS_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RDA1509 SETTL INSTR. FOR TD SECUTRITIES.') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.TDS_RSP_O') +
*  ALTDATE(2011-03-17) +
*  ALTTIME(10.31.22) +
   TARGET('MQABNY.MQMTDS.IMP.BMC.TDS_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RIO1521 GSCX CONFIRMS TO TD SECURITIES.') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.TMS_ACK_O') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQABNY.MQDADP.IMP.BMC.TMS_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVT1400 GSCX ACK/NAK TO BANK OF TOKYO - ADP / ICI') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.TMS_INS_I') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQDADP.MQABNY.BMC.IMP.TMS_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RAN1331 GSCX INSTRUCTIONS FROM BANK OF TOKYO') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.TMS_RSP_O') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQABNY.MQDADP.IMP.BMC.TMS_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVT1400 GSCX ACK/NAK TO BANK OF TOKYO - ADP / ICI') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.UBS_ACK_O') +
*  ALTDATE(2010-06-10) +
*  ALTTIME(18.13.32) +
   TARGET('MQABNY.MQDADP.IMP.BMC.UBS_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RAZ1374 GSCX ACK/NAK TO UBS-ADP/ICI') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.UBS_INS_I') +
*  ALTDATE(2010-06-09) +
*  ALTTIME(18.00.49) +
   TARGET('MQDADP.MQABNY.BMC.IMP.UBS_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RWX1454 GSCX INSTRUCTIONS FROM UBS') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.UBS_RSP_O') +
*  ALTDATE(2010-06-10) +
*  ALTTIME(18.13.32) +
   TARGET('MQABNY.MQDADP.IMP.BMC.UBS_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RAZ1374 GSCX CONFIRMS TO UBS-ADP/ICI') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.WCF_ACK_O') +
*  ALTDATE(2011-07-27) +
*  ALTTIME(04.04.08) +
   TARGET('MQABNY.MQDADP.IMP.BMC.WCF_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RMU1546 GSCX ACK/NAK TO WELLSFARGO.') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.WCF_INS_I') +
*  ALTDATE(2011-07-28) +
*  ALTTIME(07.25.12) +
   TARGET('MQDADP.MQABNY.BMC.IMP.WCF_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('ROA1514 SETTL INSTR. FOR WELLSFARGO.') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.WCF_RSP_O') +
*  ALTDATE(2011-07-27) +
*  ALTTIME(04.04.08) +
   TARGET('MQABNY.MQDADP.IMP.BMC.WCF_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RMU1546 GSCX CONFIRMS TO WELLSFARGO') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.WLB_ACK_O') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQABNY.MQDADP.IMP.BMC.WLB_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVT1400 GSCX ACK/NAK TO WEST LB- ADP / ICI') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.WLB_INS_I') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQDADP.MQABNY.BMC.IMP.WLB_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RAN1331 GSCX INSTRUCTIONS FROM WEST LB') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.IMP.WLB_RSP_O') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQABNY.MQDADP.IMP.BMC.WLB_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVT1400 GSCX ACK/NAK TO WEST LB- ADP / ICI') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.KMS.ALL_KMS_CMS_O') +
*  ALTDATE(2014-07-21) +
*  ALTTIME(06.06.43) +
   TARGET('MQABNY.MQABNY.KMS.BMC.ALL_KMS_CMS_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RPK1735 REPO TO KMS OUTBOUND QUEUE') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.KMS.CLM_CMS_DEF_O') +
*  ALTDATE(2014-07-21) +
*  ALTTIME(06.06.44) +
   TARGET('MQABNY.MQABNY.KMS.BMC.CLM_CMS_DEF_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RPK1735 DEFAULT QUEUE FOR CLM KMS') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.LIB.LIB_ACK_O') +
*  ALTDATE(2012-05-07) +
*  ALTTIME(22.26.17) +
   TARGET('MQABNY.MQSLIB.LIB.BMC.LIB_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RLV1675 ACK/NACK TO LIBERTY') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.LIB.LIB_INS_I') +
*  ALTDATE(2012-05-07) +
*  ALTTIME(22.25.22) +
   TARGET('MQSLIB.MQABNY.BMC.LIB.LIB_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RFO1619 GSCX INSTRUCTIONS FROM BANK OF LIBERTY.') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.LIB.LIB_RSP_O') +
*  ALTDATE(2012-05-07) +
*  ALTTIME(22.26.17) +
   TARGET('MQABNY.MQSLIB.LIB.BMC.LIB_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RLV1675 CONFIRMATIONS TO LIBERTY') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.LMS.BMC2LMS_INPUT1PUT') +
*  ALTDATE(2014-04-05) +
*  ALTTIME(10.26.35) +
   TARGET('MQABNY.MQWBNY.LMS.BMC.BMC2LMS_INPUT1') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('REQ# 520') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.LMS.BMC2LMS_INPUT2PUT') +
*  ALTDATE(2014-04-05) +
*  ALTTIME(10.26.39) +
   TARGET('MQABNY.MQWBNY.LMS.BMC.BMC2LMS_INPUT2') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('REQ# 520') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.LMS.BMC2LMS_INPUT3') +
*  ALTDATE(2014-04-05) +
*  ALTTIME(10.26.42) +
   TARGET('MQABNY.MQWBNY.LMS.BMC.BMC2LMS_INPUT3') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('REQ# 520') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.LMS.BMC2LMS_INPUT5') +
*  ALTDATE(2014-04-05) +
*  ALTTIME(10.26.46) +
   TARGET('MQABNY.MQWBNY.LMS.BMC.BMC2LMS_INPUT5') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('REQ# 520') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.MOR.MORDOM_INS_I') +
*  ALTDATE(2013-07-24) +
*  ALTTIME(05.30.52) +
   TARGET('MQMMOR.MQABNY.BMC.MOR.MORDOM_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RRL1744 SETTL INSTR FROM MS-DOMESTIC') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.MOR.MSI_EQ_A38_RSP_O') +
*  ALTDATE(2013-08-07) +
*  ALTTIME(16.00.39) +
   TARGET('MQABNY.MQMMOR.MOR.BMC.MSI_EQ_A38_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RUX1741 GSCX CONFIRMS TO MSI-EQUITY') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.MOR.MSI_EQ_RSP_O') +
*  ALTDATE(2013-08-07) +
*  ALTTIME(16.00.39) +
   TARGET('MQABNY.MQMMOR.MOR.BMC.MSI_EQ_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RUX1741 GSCX CONFIRMS TO MSI-EQUITY') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.MOR.MSI_FX_RSP_O') +
*  ALTDATE(2013-08-07) +
*  ALTTIME(16.00.39) +
   TARGET('MQABNY.MQMMOR.MOR.BMC.MSI_FX_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RUX1741 GSCX CONFIRMS TO MSI-FIXEDINCOME') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.MOR.MS_DOM_ACK_O') +
*  ALTDATE(2013-08-07) +
*  ALTTIME(16.00.39) +
   TARGET('MQABNY.MQMMOR.MOR.BMC.MS_DOM_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RUX1741 GSCX ACK/NAK TO MS DOMESTIC') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.MOR.MS_DOM_INS_I') +
*  ALTDATE(2013-08-09) +
*  ALTTIME(16.56.39) +
   TARGET('MQMMOR.MQABNY.BMC.MOR.MS_DOM_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RNV1700 SETTL INSTR FROM MS-DOMESTIC') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.MOR.MS_DOM_RSP_O') +
*  ALTDATE(2013-08-07) +
*  ALTTIME(16.00.39) +
   TARGET('MQABNY.MQMMOR.MOR.BMC.MS_DOM_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RUX1741 GSCX CONFIRMS TO MS-DOMESTIC') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.MOR.MS_GCF_ACK_O') +
*  ALTDATE(2013-08-07) +
*  ALTTIME(16.00.39) +
   TARGET('MQABNY.MQMMOR.MOR.BMC.MS_GCF_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RUX1741 GSCX ACK/NAK TO MS-GCF') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.MOR.MS_GCF_INS_I') +
*  ALTDATE(2013-08-09) +
*  ALTTIME(16.56.39) +
   TARGET('MQMMOR.MQABNY.BMC.MOR.MS_GCF_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RNV1700 SETTL INSTR FROM MS-GCF') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.MOR.MS_GCF_RSP_O') +
*  ALTDATE(2013-08-07) +
*  ALTTIME(16.00.39) +
   TARGET('MQABNY.MQMMOR.MOR.BMC.MS_GCF_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RUX1741 GSCX CONFIRMS TO MS-GCF') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.MOR.MS_REPO_ACK_O') +
*  ALTDATE(2013-08-07) +
*  ALTTIME(16.00.39) +
   TARGET('MQABNY.MQMMOR.MOR.BMC.MS_REPO_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RUX1741 GSCX ACK/NAK TO MS DOMESTIC') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.MOR.MS_REPO_INS_I') +
*  ALTDATE(2013-08-09) +
*  ALTTIME(16.56.39) +
   TARGET('MQMMOR.MQABNY.BMC.MOR.MS_REPO_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RNV1700 SETTL INSTR FROM MS-DOMESTIC') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.MOR.MS_REPO_RSP_O') +
*  ALTDATE(2013-08-07) +
*  ALTTIME(16.00.39) +
   TARGET('MQABNY.MQMMOR.MOR.BMC.MS_REPO_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RUX1741 GSCX CONFIRMS TO MS-DOMESTIC') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.OCE.NSB_ACK_O') +
*  ALTDATE(2013-01-09) +
*  ALTTIME(21.43.13) +
   TARGET('MQABNY.MQLBMO.OCE.BMC.NSB_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RZB1676 GSCX ACK/NAK TO BMO-NESBITT BURNS') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.OCE.NSB_INS_I') +
*  ALTDATE(2013-01-09) +
*  ALTTIME(21.42.48) +
   TARGET('MQLBMO.MQABNY.BMC.OCE.NSB_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RIH1684 GSCX MESSAGES FROM BMO-NESBITT BURNS') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.OCE.NSB_RSP_O') +
*  ALTDATE(2013-01-09) +
*  ALTTIME(21.43.13) +
   TARGET('MQABNY.MQLBMO.OCE.BMC.NSB_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RZB1676 GSCX CONFIRMS TO BMO-NESBITT BURNS') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.PH3.ADM_CFI_RSP_O') +
*  ALTDATE(2012-04-03) +
*  ALTTIME(21.50.58) +
   TARGET('MQABNY.MQWSNG.PH3.BMC.ADM_CFI_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSZ1645 ADM RESP QUEUE FOR CANTOR') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.PH3.ADM_DSA_RSP_O') +
*  ALTDATE(2012-04-03) +
*  ALTTIME(21.50.58) +
   TARGET('MQABNY.MQWSNG.PH3.BMC.ADM_DSA_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSZ1645 ADM RESP QUEUE FOR DAIWA') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.PH3.ADM_YPD_RSP_O') +
*  ALTDATE(2012-04-03) +
*  ALTTIME(21.50.58) +
   TARGET('MQABNY.MQWSNG.PH3.BMC.ADM_YPD_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSZ1645 ADM RESP QUEUE FOR CREDIT AGRICOLE') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.PH3.ADM_YZU_RSP_O') +
*  ALTDATE(2012-04-03) +
*  ALTTIME(21.50.58) +
   TARGET('MQABNY.MQWSNG.PH3.BMC.ADM_YZU_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSZ1645 ADM RESP QUEUE FOR CREDIT AGRICOLE') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.PH3.BGM_ALL_INS_I') +
*  ALTDATE(2012-04-03) +
*  ALTTIME(21.49.09) +
   TARGET('MQWSNG.MQABNY.BMC.PH3.BGM_ALL_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RFX1609 INPUT QUEUE FOR BNYGRAM MESSAGES FOR IMX CUSTOMER') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.PH3.IMX_ALL_INS_I') +
*  ALTDATE(2013-04-09) +
*  ALTTIME(15.46.31) +
   TARGET('MQWSNG.MQABNY.BMC.PH3.IMX_ALL_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RFX1609 INPUT QUEUE FOR IMX INCOMING INSTRUCTIONS') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.PH3.IMX_BAK_RSP_O') +
*  ALTDATE(2012-04-03) +
*  ALTTIME(21.50.59) +
   TARGET('MQABNY.MQWSNG.PH3.BMC.IMX_BAK_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSZ1645 RESP QUEUE FOR BAKER') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.PH3.IMX_BBV_RSP_O') +
*  ALTDATE(2012-04-03) +
*  ALTTIME(21.50.59) +
   TARGET('MQABNY.MQWSNG.PH3.BMC.IMX_BBV_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSZ1645 RESP QUEUE FOR BBVP') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.PH3.IMX_BGC_RSP_O') +
*  ALTDATE(2012-04-03) +
*  ALTTIME(21.50.59) +
   TARGET('MQABNY.MQWSNG.PH3.BMC.IMX_BGC_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSZ1645 RESP QUEUE FOR CANTOR') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.PH3.IMX_BLS_RSP_O') +
*  ALTDATE(2012-04-03) +
*  ALTTIME(21.50.59) +
   TARGET('MQABNY.MQWSNG.PH3.BMC.IMX_BLS_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSZ1645 RESP QUEUE FOR BBVA') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.PH3.IMX_CCI_RSP_O') +
*  ALTDATE(2012-04-03) +
*  ALTTIME(21.50.59) +
   TARGET('MQABNY.MQWSNG.PH3.BMC.IMX_CCI_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSZ1645 RESP QUEUE FOR CARTY') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.PH3.IMX_CFC_RSP_O') +
*  ALTDATE(2012-04-03) +
*  ALTTIME(21.50.59) +
   TARGET('MQABNY.MQWSNG.PH3.BMC.IMX_CFC_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSZ1645 RESP QUEUE FOR CANTOR') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.PH3.IMX_CFD_RSP_O') +
*  ALTDATE(2012-04-03) +
*  ALTTIME(21.50.59) +
   TARGET('MQABNY.MQWSNG.PH3.BMC.IMX_CFD_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSZ1645 RESP QUEUE FOR CANTOR') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.PH3.IMX_CFI_RSP_O') +
*  ALTDATE(2012-04-03) +
*  ALTTIME(21.50.59) +
   TARGET('MQABNY.MQWSNG.PH3.BMC.IMX_CFI_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSZ1645 RESP QUEUE FOR CANTOR') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.PH3.IMX_CFM_RSP_O') +
*  ALTDATE(2012-04-03) +
*  ALTTIME(21.50.59) +
   TARGET('MQABNY.MQWSNG.PH3.BMC.IMX_CFM_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSZ1645 RESP QUEUE FOR CANTOR') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.PH3.IMX_CLA_RSP_O') +
*  ALTDATE(2012-04-03) +
*  ALTTIME(21.50.59) +
   TARGET('MQABNY.MQWSNG.PH3.BMC.IMX_CLA_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSZ1645 RESP QUEUE FOR CREDIT AGRICOLE') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.PH3.IMX_CLS_RSP_O') +
*  ALTDATE(2012-04-03) +
*  ALTTIME(21.50.59) +
   TARGET('MQABNY.MQWSNG.PH3.BMC.IMX_CLS_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSZ1645 RESP QUEUE FOR CREDIT AGRICOLE') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.PH3.IMX_DAS_RSP_O') +
*  ALTDATE(2012-04-03) +
*  ALTTIME(21.50.59) +
   TARGET('MQABNY.MQWSNG.PH3.BMC.IMX_DAS_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSZ1645 RESP QUEUE FOR DAIWA') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.PH3.IMX_DSA_RSP_O') +
*  ALTDATE(2012-04-03) +
*  ALTTIME(21.50.59) +
   TARGET('MQABNY.MQWSNG.PH3.BMC.IMX_DSA_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSZ1645 RESP QUEUE FOR DAIWA') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.PH3.IMX_FBS_RSP_O') +
*  ALTDATE(2012-04-03) +
*  ALTTIME(21.50.59) +
   TARGET('MQABNY.MQWSNG.PH3.BMC.IMX_FBS_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSZ1645 RESP QUEUE FOR US BANK') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.PH3.IMX_FNB_RSP_O') +
*  ALTDATE(2012-04-03) +
*  ALTTIME(21.53.40) +
   TARGET('MQABNY.MQWSNG.PH3.BMC.IMX_FNB_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RHK1552 RESP QUEUE FOR WELLS FARGO') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.PH3.IMX_FUI_RSP_O') +
*  ALTDATE(2012-04-03) +
*  ALTTIME(21.53.41) +
   TARGET('MQABNY.MQWSNG.PH3.BMC.IMX_FUI_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RHK1552 RESP QUEUE FOR WELLS FARGO') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.PH3.IMX_FUR_RSP_O') +
*  ALTDATE(2012-04-03) +
*  ALTTIME(21.53.41) +
   TARGET('MQABNY.MQWSNG.PH3.BMC.IMX_FUR_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RHK1552 RESP QUEUE FOR WELLS FARGO') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.PH3.IMX_FUT_RSP_O') +
*  ALTDATE(2012-04-03) +
*  ALTTIME(21.53.41) +
   TARGET('MQABNY.MQWSNG.PH3.BMC.IMX_FUT_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RHK1552 RESP QUEUE FOR WELLS FARGO') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.PH3.IMX_MFI_RSP_O') +
*  ALTDATE(2012-04-03) +
*  ALTTIME(21.50.59) +
   TARGET('MQABNY.MQWSNG.PH3.BMC.IMX_MFI_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSZ1645 RESP QUEUE FOR CANTOR') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.PH3.IMX_MSI_RSP_O') +
*  ALTDATE(2012-04-03) +
*  ALTTIME(21.50.59) +
   TARGET('MQABNY.MQWSNG.PH3.BMC.IMX_MSI_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSZ1645 RESP QUEUE FOR MF GLOBAL') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.PH3.IMX_NOR_RSP_O') +
*  ALTDATE(2012-04-03) +
*  ALTTIME(21.53.41) +
   TARGET('MQABNY.MQWSNG.PH3.BMC.IMX_NOR_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RHK1552 RESP QUEUE FOR WELLS FARGO') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.PH3.IMX_NWA_RSP_O') +
*  ALTDATE(2012-04-03) +
*  ALTTIME(21.50.59) +
   TARGET('MQABNY.MQWSNG.PH3.BMC.IMX_NWA_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSZ1645 RESP QUEUE FOR NEWMAN') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.PH3.IMX_POP_RSP_O') +
*  ALTDATE(2012-04-03) +
*  ALTTIME(21.50.59) +
   TARGET('MQABNY.MQWSNG.PH3.BMC.IMX_POP_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSZ1645 RESP QUEUE FOR POPULAR') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.PH3.IMX_RCA_RSP_O') +
*  ALTDATE(2012-04-03) +
*  ALTTIME(21.50.59) +
   TARGET('MQABNY.MQWSNG.PH3.BMC.IMX_RCA_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSZ1645 RESP QUEUE FOR RCAP') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.PH3.IMX_SNW_RSP_O') +
*  ALTDATE(2012-04-03) +
*  ALTTIME(21.50.59) +
   TARGET('MQABNY.MQWSNG.PH3.BMC.IMX_SNW_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSZ1645 RESP QUEUE FOR SEATTLE NORTHWEST') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.PH3.IMX_TAS_RSP_O') +
*  ALTDATE(2012-04-03) +
*  ALTTIME(21.50.59) +
   TARGET('MQABNY.MQWSNG.PH3.BMC.IMX_TAS_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSZ1645 RESP QUEUE FOR RCAP') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.PH3.IMX_VIN_RSP_O') +
*  ALTDATE(2012-04-03) +
*  ALTTIME(21.50.59) +
   TARGET('MQABNY.MQWSNG.PH3.BMC.IMX_VIN_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSZ1645 RESP QUEUE FOR VINING') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.PH3.IMX_WSL_RSP_O') +
*  ALTDATE(2012-04-03) +
*  ALTTIME(21.53.41) +
   TARGET('MQABNY.MQWSNG.PH3.BMC.IMX_WSL_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RHK1552 RESP QUEUE FOR WELLS FARGO') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.PH3.MIS_CFM_RSP_O') +
*  ALTDATE(2012-04-03) +
*  ALTTIME(21.50.59) +
   TARGET('MQABNY.MQWSNG.PH3.BMC.MIS_CFM_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSZ1645 BONYGRAM RESP QUEUE FOR CANTOR') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.PH3.MIS_MFI_RSP_O') +
*  ALTDATE(2012-04-03) +
*  ALTTIME(21.50.59) +
   TARGET('MQABNY.MQWSNG.PH3.BMC.MIS_MFI_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSZ1645 BONYGRAM RESP QUEUE FOR CANTOR') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.PH3.MIS_SNG_RSP_O') +
*  ALTDATE(2014-07-14) +
*  ALTTIME(07.51.22) +
   TARGET('MQABNY.MQWSNG.PH3.BMC.MIS_SNG_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVG1630 SUNGARD REPLY QUEUE') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.PH3.SNG_TEST_RSP_O') +
*  ALTDATE(2013-09-25) +
*  ALTTIME(23.18.15) +
   TARGET('MQABNY.MQWSNG.PH3.BMC.SNG_TEST_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('REY1677 SNG TEST RESPONSE QUEUE') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.PRA.PRA3_INS_O') +
*  ALTDATE(2013-09-19) +
*  ALTTIME(02.34.27) +
   TARGET('MQABNY.MQWBNY.PRA.BMC.PRA3_INS_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RJA1491 TO SEND MESSAGES TO PRA.') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.PRA.PRA4_INS_O') +
*  ALTDATE(2013-10-08) +
*  ALTTIME(05.41.16) +
   TARGET('MQABNY.MQABNY.PRA.BMC.PRA4_INS_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RNR1638 QNAME=PRA.BMC.PRA4_INS_O') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.QPE.READQ_INS_I') +
*  ALTDATE(2010-03-09) +
*  ALTTIME(10.55.49) +
   TARGET('MQSRDQ.MQABNY.BMC.QPE.READQ_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('ROZ1457 RCV INSTRUCTION FROM READQ/PIERPOINT') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.QPE.READQ_RSP_O') +
*  ALTDATE(2010-03-09) +
*  ALTTIME(10.33.08) +
   TARGET('MQABNY.MQSRDQ.QPE.BMC.READQ_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RKL1427 RESPONSES TO PIERPOINT/READQ') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.RPO.ADM_ESB1_RSP_O_C') +
*  ALTDATE(2010-11-23) +
*  ALTTIME(13.06.24) +
   TARGET('MQSBNY.MQABNY.BMC.RPO.ADM_ESB1_RSP_O_C') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('REP1505 ADM RESPONSES TO AIX.') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.RPO.ADM_ESB1_RSP_O_C2') +
*  ALTDATE(2010-12-23) +
*  ALTTIME(10.28.05) +
   TARGET('MQSBNY.MQABNY.BMC.RPO.ADM_ESB1_RSP_O_C2') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RYY1465 ADM RESPONSES TO AIX.') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QLOCAL('BMC.RPO.ADM_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2012-09-29) +
*  ALTTIME(15.48.39) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2012-09-29) +
*  CRTIME(15.48.39) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR(' ') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(5000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QALIAS('BMC.RPO.ADM_INS_I_C1') +
*  ALTDATE(2010-12-23) +
*  ALTTIME(12.48.18) +
   TARGET('MQXBNY.MQSBNY.RPO.///.ADM_INS_I_C1.MULT') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RWP1396 INSTRUCTIONS TO ADM.') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.RPO.ADM_INS_I_C2') +
*  ALTDATE(2010-12-23) +
*  ALTTIME(14.19.29) +
   TARGET('MQXBNY.MQSBNY.RPO.///.ADM_INS_I_C2.MULT') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RUH1521 INSTRUCTIONS TO ADM.') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.RPO.ALL_CLM_CMS_I') +
*  ALTDATE(2014-07-21) +
*  ALTTIME(05.58.08) +
   TARGET('MQSBNY.MQABNY.BMC.RPO.ALL_CLM_CMS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSK1773 REPO TO BMC INBOUND QUEUE') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.RPO.CLMC_RE11_RSP_O_A') +
*  ALTDATE(2011-07-19) +
*  ALTTIME(21.28.43) +
   TARGET('MQABNY.MQSBNY.RPO.BMC.CLMC_RE11_RSP_O_A') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RXI1606 THIS IS TO SEND CLM CMD. RESPONSES TO RE1.') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.RPO.CLMC_RE11_RSP_O_B') +
*  ALTDATE(2011-07-19) +
*  ALTTIME(21.27.22) +
   TARGET('MQABNY.MQSBNY.RPO.BMC.CLMC_RE11_RSP_O_B') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSV1550 THIS IS TO SEND CLM CMD. RESPONSES TO RE1.') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.RPO.CLMC_RE21_RSP_O_A') +
*  ALTDATE(2011-07-19) +
*  ALTTIME(21.28.43) +
   TARGET('MQABNY.MQSBNY.RPO.BMC.CLMC_RE21_RSP_O_A') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RXI1606 THIS IS TO SEND CLM CMD. RESPONSES TO RE2.') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.RPO.CLMC_RE21_RSP_O_B') +
*  ALTDATE(2011-07-19) +
*  ALTTIME(21.27.22) +
   TARGET('MQABNY.MQSBNY.RPO.BMC.CLMC_RE21_RSP_O_B') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSV1550 THIS IS TO SEND CLM CMD. RESPONSES TO RE2.') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.RPO.CLMC_RE31_RSP_O_A') +
*  ALTDATE(2011-07-19) +
*  ALTTIME(21.28.43) +
   TARGET('MQABNY.MQSBNY.RPO.BMC.CLMC_RE31_RSP_O_A') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RXI1606 THIS IS TO SEND CLM CMD. RESPONSES TO RE3.') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.RPO.CLMC_RE31_RSP_O_B') +
*  ALTDATE(2011-07-19) +
*  ALTTIME(21.27.23) +
   TARGET('MQABNY.MQSBNY.RPO.BMC.CLMC_RE31_RSP_O_B') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSV1550 THIS IS TO SEND CLM CMD. RESPONSES TO RE3.') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.RPO.CLMC_RE41_RSP_O_A') +
*  ALTDATE(2011-07-19) +
*  ALTTIME(21.28.43) +
   TARGET('MQABNY.MQSBNY.RPO.BMC.CLMC_RE41_RSP_O_A') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RXI1606 THIS IS TO SEND CLM CMD. RESPONSES TO RE4.') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.RPO.CLMC_RE41_RSP_O_B') +
*  ALTDATE(2011-07-19) +
*  ALTTIME(21.27.23) +
   TARGET('MQABNY.MQSBNY.RPO.BMC.CLMC_RE41_RSP_O_B') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSV1550 THIS IS TO SEND CLM CMD. RESPONSES TO RE4.') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.RPO.CLMC_REQ_O_A') +
*  ALTDATE(2011-07-19) +
*  ALTTIME(21.26.53) +
   TARGET('MQABNY.MQSBNY.RPO.BMC.CLMC_REQ_O_A') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RQW1565 TO SEND COMMAND REQUESTS TO CLM.') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.RPO.CLMC_REQ_O_B') +
*  ALTDATE(2011-07-19) +
*  ALTTIME(21.28.42) +
   TARGET('MQABNY.MQSBNY.RPO.BMC.CLMC_REQ_O_B') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('ROV1576 TO SEND COMMAND REQUESTS TO CLM.') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.RPO.CLMC_RSP_I_A') +
*  ALTDATE(2011-07-19) +
*  ALTTIME(21.29.16) +
   TARGET('MQSBNY.MQABNY.BMC.RPO.CLMC_RSP_I_A') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSX1485 TO RECIEVE COMMAND RESPONSES FROM CLM.') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.RPO.CLMC_RSP_I_B') +
*  ALTDATE(2011-07-19) +
*  ALTTIME(21.26.53) +
   TARGET('MQSBNY.MQABNY.BMC.RPO.CLMC_RSP_I_B') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RPP1589 TO RECIEVE COMMAND RESPONSES FROM CLM.') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.RPO.CLMI_RE11_RSP_O_A') +
*  ALTDATE(2011-07-19) +
*  ALTTIME(21.28.43) +
   TARGET('MQABNY.MQSBNY.RPO.BMC.CLMI_RE11_RSP_O_A') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RXI1606 THIS IS TO SEND CLM INQ. RESPONSES TO RE1.') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.RPO.CLMI_RE11_RSP_O_B') +
*  ALTDATE(2011-07-19) +
*  ALTTIME(21.27.23) +
   TARGET('MQABNY.MQSBNY.RPO.BMC.CLMI_RE11_RSP_O_B') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSV1550 THIS IS TO SEND CLM INQ. RESPONSES TO RE1.') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.RPO.CLMI_RE21_RSP_O_A') +
*  ALTDATE(2011-07-19) +
*  ALTTIME(21.28.43) +
   TARGET('MQABNY.MQSBNY.RPO.BMC.CLMI_RE21_RSP_O_A') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RXI1606 THIS IS TO SEND CLM INQ. RESPONSES TO RE2.') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.RPO.CLMI_RE21_RSP_O_B') +
*  ALTDATE(2011-07-19) +
*  ALTTIME(21.27.23) +
   TARGET('MQABNY.MQSBNY.RPO.BMC.CLMI_RE21_RSP_O_B') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSV1550 THIS IS TO SEND CLM INQ. RESPONSES TO RE2.') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.RPO.CLMI_RE31_RSP_O_A') +
*  ALTDATE(2011-07-19) +
*  ALTTIME(21.28.43) +
   TARGET('MQABNY.MQSBNY.RPO.BMC.CLMI_RE31_RSP_O_A') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RXI1606 THIS IS TO SEND CLM INQ. RESPONSES TO RE3.') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.RPO.CLMI_RE31_RSP_O_B') +
*  ALTDATE(2011-07-19) +
*  ALTTIME(21.27.23) +
   TARGET('MQABNY.MQSBNY.RPO.BMC.CLMI_RE31_RSP_O_B') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSV1550 THIS IS TO SEND CLM INQ. RESPONSES TO RE3.') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.RPO.CLMI_RE41_RSP_O_A') +
*  ALTDATE(2011-07-19) +
*  ALTTIME(21.28.43) +
   TARGET('MQABNY.MQSBNY.RPO.BMC.CLMI_RE41_RSP_O_A') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RXI1606 THIS IS TO SEND CLM INQ. RESPONSES TO RE4.') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.RPO.CLMI_RE41_RSP_O_B') +
*  ALTDATE(2011-07-19) +
*  ALTTIME(21.27.23) +
   TARGET('MQABNY.MQSBNY.RPO.BMC.CLMI_RE41_RSP_O_B') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSV1550 THIS IS TO SEND CLM INQ. RESPONSES TO RE4.') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.RPO.CLMI_REQ_O_A') +
*  ALTDATE(2011-07-19) +
*  ALTTIME(21.26.53) +
   TARGET('MQABNY.MQSBNY.RPO.BMC.CLMI_REQ_O_A') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RQW1565 TO SEND INQ REQUESTS TO CLM.') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.RPO.CLMI_REQ_O_B') +
*  ALTDATE(2011-07-19) +
*  ALTTIME(21.28.43) +
   TARGET('MQABNY.MQSBNY.RPO.BMC.CLMI_REQ_O_B') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('ROV1576 TO SEND INQ REQUESTS TO CLM.') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.RPO.CLMI_RSP_I_A') +
*  ALTDATE(2011-07-19) +
*  ALTTIME(21.29.16) +
   TARGET('MQSBNY.MQABNY.BMC.RPO.CLMI_RSP_I_A') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSX1485 TO RECEIVE INQ RESPONSES FROM CLM.') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.RPO.CLMI_RSP_I_B') +
*  ALTDATE(2011-07-19) +
*  ALTTIME(21.26.53) +
   TARGET('MQSBNY.MQABNY.BMC.RPO.CLMI_RSP_I_B') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RPP1589 TO RECEIVE INQ RESPONSES FROM CLM.') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.RPO.DEAL_ESB1_RSP_I_A') +
*  ALTDATE(2011-06-23) +
*  ALTTIME(20.41.08) +
   TARGET('MQSBNY.MQABNY.BMC.RPO.DEAL_ESB1_RSP_I_A') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RAD1512 DEAL CONFIRMS TO ESB1-AIX.') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.RPO.DEAL_ESB1_RSP_I_B') +
*  ALTDATE(2011-06-23) +
*  ALTTIME(20.28.35) +
   TARGET('MQSBNY.MQABNY.BMC.RPO.DEAL_ESB1_RSP_I_B') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('REK1550 DEAL CONFIRMS TO ESB1-AIX.') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.RPO.RE1_CMS_O') +
*  ALTDATE(2014-07-21) +
*  ALTTIME(06.14.58) +
   TARGET('MQABNY.MQSBNY.RPO.BMC.RE1_CMS_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RUC1710 KMS TO REPO - BMC OUTBOUND QUEUE') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.RPO.RE2_CMS_O') +
*  ALTDATE(2014-07-21) +
*  ALTTIME(06.14.58) +
   TARGET('MQABNY.MQSBNY.RPO.BMC.RE2_CMS_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RUC1710 KMS TO REPO - BMC OUTBOUND QUEUE') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.RPO.RE3_CMS_O') +
*  ALTDATE(2014-07-21) +
*  ALTTIME(06.14.59) +
   TARGET('MQABNY.MQSBNY.RPO.BMC.RE3_CMS_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RUC1710 KMS TO REPO - BMC OUTBOUND QUEUE') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.RPO.RE3_SWIFT_REV_Q') +
*  ALTDATE(2014-05-22) +
*  ALTTIME(09.22.21) +
   TARGET('MQABNY.MQSBNY.RPO.BMC.RE3_SWIFT_REV_Q') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RHO1714 MORGAN STANLEY INTERNATIONAL INBOUND TO REPO') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.RPO.RE4_CMS_O') +
*  ALTDATE(2014-07-21) +
*  ALTTIME(06.14.59) +
   TARGET('MQABNY.MQSBNY.RPO.BMC.RE4_CMS_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RUC1710 KMS TO REPO - BMC OUTBOUND QUEUE') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.RPO.RE4_SWIFT_REV_Q') +
*  ALTDATE(2014-05-16) +
*  ALTTIME(09.31.54) +
   TARGET('MQABNY.MQSBNY.RPO.BMC.RE4_SWIFT_REV_Q') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RYC1720 SWIFT REV INPUT QUEUE') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.RPO.RE_NET_POSCONF_I') +
*  ALTDATE(2014-08-04) +
*  ALTTIME(07.02.49) +
   TARGET('MQSBNY.MQABNY.BMC.RPO.RE_NET_POSCONF_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RWF1619 REPO NET POSINTION CONFIRMATION INBOUND') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.RPO.RPO2BMC_INQUIRE1.XYZ') +
*  ALTDATE(2014-04-07) +
*  ALTTIME(08.10.53) +
   TARGET('MQSBNY.MQABNY.BMC.RPO.RPO2BMC_INQUIRE1.XYZ') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('REQ# 522') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.RPO.RPO2BMC_INQUIREGET.XYZ') +
*  ALTDATE(2014-04-07) +
*  ALTTIME(08.10.48) +
   TARGET('MQSBNY.MQABNY.BMC.RPO.RPO2BMC_INQUIRE.XYZ') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('REQ# 522') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.SAL.SAB_INS_I') +
*  ALTDATE(2013-02-26) +
*  ALTTIME(21.23.07) +
   TARGET('MQMSAL.MQABNY.BMC.SAL.SAB_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RWH1678 INSTRUCTIONS IN SSB FORMAT.') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.SAL.SAB_RSP_O') +
*  ALTDATE(2013-02-26) +
*  ALTTIME(21.23.43) +
   TARGET('MQABNY.MQMSAL.SAL.BMC.SAB_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RCQ1709 GSCX ACK/NACK TO CITI-SALOMON IN SSB FORMAT.') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.SAL.SAL_INS_I') +
*  ALTDATE(2013-02-26) +
*  ALTTIME(21.23.28) +
   TARGET('MQMSAL.MQABNY.BMC.SAL.SAL_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RXL1671 INSTRUCTIONS IN IMX FORMAT.') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.SAL.SAL_RSP_O') +
*  ALTDATE(2013-02-26) +
*  ALTTIME(21.23.43) +
   TARGET('MQABNY.MQMSAL.SAL.BMC.SAL_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RCQ1709 GSCX ACK/NACK TO CITI-SALOMON IN IMX FORMAT.') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.SAL.SHELL_RSP_O') +
*  ALTDATE(2013-02-26) +
*  ALTTIME(21.23.43) +
   TARGET('MQABNY.MQMSAL.SAL.BMC.SHELL_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RCQ1709 GSCX ACK/NACK TO CITI-SALOMON IN BGRAM FORMAT.') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.SMB.MBSDLV_RSP_O') +
*  ALTDATE(2012-10-07) +
*  ALTTIME(22.19.15) +
   TARGET('MQABNY.MQMSMB.SMB.BMC.MBSDLV_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RFM1638 GSCX ACK/NACK TO CITI-SMB') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.SMB.MBSFUT_INS_I') +
*  ALTDATE(2013-01-09) +
*  ALTTIME(21.43.38) +
   TARGET('MQMSMB.MQABNY.BMC.SMB.MBSFUT_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RGD1617 SETTL INSTR. FROM CITI-SMITHBARNEY.') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.SMB.MBSFUT_RSP_O') +
*  ALTDATE(2012-10-07) +
*  ALTTIME(22.19.15) +
   TARGET('MQABNY.MQMSMB.SMB.BMC.MBSFUT_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RFM1638 GSCX ACK/NACK TO CITI-SMB') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.SMB.MBSREC_RSP_O') +
*  ALTDATE(2012-10-07) +
*  ALTTIME(22.19.15) +
   TARGET('MQABNY.MQMSMB.SMB.BMC.MBSREC_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RFM1638 GSCX ACK/NACK TO CITI-SMB') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.SMB.NKG_RSP_O') +
*  ALTDATE(2012-10-07) +
*  ALTTIME(22.19.15) +
   TARGET('MQABNY.MQMSMB.SMB.BMC.NKG_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RFM1638 GSCX ACK/NACK TO CITI-SMB') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.SMB.RETAIL_RSP_O') +
*  ALTDATE(2012-10-07) +
*  ALTTIME(22.19.15) +
   TARGET('MQABNY.MQMSMB.SMB.BMC.RETAIL_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RFM1638 GSCX ACK/NACK TO CITI-SMB') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.SMB.SMB_INS_I') +
*  ALTDATE(2012-10-07) +
*  ALTTIME(22.18.47) +
   TARGET('MQMSMB.MQABNY.BMC.SMB.SMB_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSD1597 SETTL INSTR. FROM CITI-SMITHBARNEY.') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.SMB.TRSRY_RSP_O') +
*  ALTDATE(2012-10-07) +
*  ALTTIME(22.19.15) +
   TARGET('MQABNY.MQMSMB.SMB.BMC.TRSRY_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RFM1638 GSCX ACK/NACK TO CITI-SMB') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.SSE.BDCT_SEC_O') +
*  ALTDATE(2014-01-29) +
*  ALTTIME(22.45.45) +
   TARGET('MQABNY.MQABNY.SSE.BMC.BDCT_SEC_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RGS1708 SSE BROADCAST OUTBOUND QUEUE') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.TBL.CMI_ACK_O') +
*  ALTDATE(2010-03-12) +
*  ALTTIME(14.49.35) +
   TARGET('MQABNY.MQLMTX.TBL.BMC.CMI_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RCL1437 GSCX ACK/NAK TO BNY CAPITAL MARKET') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.TBL.CMI_INS_I') +
*  ALTDATE(2010-03-12) +
*  ALTTIME(14.43.45) +
   TARGET('MQLMTX.MQABNY.BMC.TBL.CMI_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('ROC1407 GSCX INSTRUCTIONS FROM BNY CAPITAL MARKETS') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.TBL.CMI_RSP_O') +
*  ALTDATE(2010-03-12) +
*  ALTTIME(14.49.35) +
   TARGET('MQABNY.MQLMTX.TBL.BMC.CMI_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RCL1437 GSCX CONFIRMS TO BNY CAPITAL MARKET') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.TBL.GLE_ACK_O') +
*  ALTDATE(2010-10-05) +
*  ALTTIME(09.31.50) +
   TARGET('MQABNY.MQLMTX.TBL.BMC.GLE_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RXP1513 GSCX ACK/NAK TO GLEACHER') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.TBL.GLE_INS_I') +
*  ALTDATE(2010-10-05) +
*  ALTTIME(07.54.34) +
   TARGET('MQLMTX.MQABNY.BMC.TBL.GLE_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RRK1452 GSCX INSTRUCTIONS FROM GLEACHER') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.TBL.GLE_RSP_O') +
*  ALTDATE(2010-10-05) +
*  ALTTIME(09.31.50) +
   TARGET('MQABNY.MQLMTX.TBL.BMC.GLE_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RXP1513 GSCX CONFIRMS TO GLEACHER') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.TBL.PLM_ACK_O') +
*  ALTDATE(2010-03-12) +
*  ALTTIME(14.49.35) +
   TARGET('MQABNY.MQLMTX.TBL.BMC.PLM_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RCL1437 GSCX ACK/NAK TO PALOMA') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.TBL.PLM_INS_I') +
*  ALTDATE(2010-03-12) +
*  ALTTIME(14.43.45) +
   TARGET('MQLMTX.MQABNY.BMC.TBL.PLM_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('ROC1407 GSCX INSTRUCTIONS FROM PALOMA') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.TBL.PLM_RSP_O') +
*  ALTDATE(2010-03-12) +
*  ALTTIME(14.49.35) +
   TARGET('MQABNY.MQLMTX.TBL.BMC.PLM_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RCL1437 GSCX CONFIRMS TO PALOMA') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.TBL.SCB_ACK_O') +
*  ALTDATE(2010-03-12) +
*  ALTTIME(14.49.35) +
   TARGET('MQABNY.MQLMTX.TBL.BMC.SCB_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RCL1437 GSCX ACK/NAK TO STANDARD CHARTERED BANK') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.TBL.SCB_INS_I') +
*  ALTDATE(2010-03-12) +
*  ALTTIME(14.43.45) +
   TARGET('MQLMTX.MQABNY.BMC.TBL.SCB_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('ROC1407 GSCX INSTRUCTIONS FROM STANDARD CHARTERED BANK') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.TBL.SCB_RSP_O') +
*  ALTDATE(2010-03-12) +
*  ALTTIME(14.49.35) +
   TARGET('MQABNY.MQLMTX.TBL.BMC.SCB_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RCL1437 GSCX CONFIRMS TO STANDARD CHARTERED BANK') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.TBL.SSS_ACK_O') +
*  ALTDATE(2010-03-12) +
*  ALTTIME(14.49.35) +
   TARGET('MQABNY.MQLMTX.TBL.BMC.SSS_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RCL1437 GSCX ACK/NAK TO SOUTH STREET') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.TBL.SSS_INS_I') +
*  ALTDATE(2010-03-12) +
*  ALTTIME(14.43.45) +
   TARGET('MQLMTX.MQABNY.BMC.TBL.SSS_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('ROC1407 GSCX INSTRUCTIONS FROM SOUTH STREET') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.TBL.SSS_RSP_O') +
*  ALTDATE(2010-03-12) +
*  ALTTIME(14.49.35) +
   TARGET('MQABNY.MQLMTX.TBL.BMC.SSS_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RCL1437 GSCX CONFIRMS TO SOUTH STREET') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.TLX.SWIFTNET_BDS_I') +
*  ALTDATE(2014-06-11) +
*  ALTTIME(12.12.39) +
   TARGET('MQVBNYM.MQABNY.BMC.TLX.SWIFTNET_BDS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVR1724 RECEIVING MESSAGES FROM MSGRTR') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.TLX.SWIFTNET_BDS_O') +
*  ALTDATE(2014-07-10) +
*  ALTTIME(07.46.06) +
   TARGET('MQABNY.MQVBNYM.TLX.BMC.SWIFTNET_BDS_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RPB1641 BMC SWIFTNET INTERMEDIATE QUEUE') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.VPM.VPM_RSP_O') +
*  ALTDATE(2010-09-24) +
*  ALTTIME(07.23.56) +
   TARGET('MQABNY.MQWBNY.VPM.BMC.VPM_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RWZ1440 TO SEND RESPONSES TO VPM.') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.WUI.ALL_FRB_RSP_I') +
*  ALTDATE(2014-05-15) +
*  ALTTIME(01.21.32) +
   TARGET('MQVBNY.MQABNY.BMC.WUI.ALL_FRB_RSP_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('ITSP#460551') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.WUI.ALL_FRB_RSP_I_C1') +
*  ALTDATE(2012-08-17) +
*  ALTTIME(00.18.46) +
   TARGET('MQVBNY.MQABNY.BMC.WUI.ALL_FRB_RSP_I_C1') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RUA1753 INSTR QUEUE FROM FRB') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.WUI.ALL_FRB_RSP_I_CP') +
*  ALTDATE(2012-08-15) +
*  ALTTIME(22.09.06) +
   TARGET('MQVBNY.MQABNY.BMC.WUI.ALL_FRB_RSP_I_CP') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('REB1653 INSTR QUEUE FROM FRB') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.WUI.ALL_FRB_RSP_I_P') +
*  ALTDATE(2013-03-05) +
*  ALTTIME(17.29.08) +
   TARGET('MQVBNY.MQABNY.BMC.WUI.ALL_FRB_RSP_I_P') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RYO1706 QUEUE FOR FED TRAFFIC FOR BDC PARALLEL') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.WUI.BNYM_FRB_INS_H_CU') +
*  ALTDATE(2014-04-22) +
*  ALTTIME(08.13.55) +
   TARGET('MQABNY.MQVBNY.WUI.BMC.BNYM_FRB_INS_H_CU') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('REV1697 HI PRIORITY QUEUE FOR BNYM CI') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.WUI.BNYM_FRB_INS_L_CU') +
*  ALTDATE(2014-04-22) +
*  ALTTIME(08.13.55) +
   TARGET('MQABNY.MQVBNY.WUI.BMC.BNYM_FRB_INS_L_CU') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('REV1697 LOWPRIORITY QUEUE FOR BNYM CI') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.WUI.BNYM_FRB_INS_O_C1') +
*  ALTDATE(2012-08-20) +
*  ALTTIME(21.53.00) +
   TARGET('MQABNY.MQVBNY.WUI.BMC.BNYM_FRB_INS_O_C1') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RAK1464 INSTR QUEUE TO FRB FOR BNYM CI') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.WUI.BNYM_FRB_INS_O_CD') +
*  ALTDATE(2012-10-09) +
*  ALTTIME(23.45.04) +
   TARGET('MQABNY.MQVBNY.WUI.BMC.BNYM_FRB_INS_O_CD') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RNC1642 BNYM SURROGATE QUEUE TO FE DEV') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.WUI.BNYM_FRB_INS_O_CU') +
*  ALTDATE(2012-10-04) +
*  ALTTIME(09.38.30) +
   TARGET('MQABNY.MQVBNY.WUI.BMC.BNYM_FRB_INS_O_CU') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RPW1677 BNYM SURROGATE QUEUE TO FE QA') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.WUI.FRB_BDCT_SEC_I') +
*  ALTDATE(2014-04-22) +
*  ALTTIME(01.37.14) +
   TARGET('MQVBNY.MQABNY.BMC.WUI.FRB_BDCT_SEC_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RID1590 QUEUE FOR SSE BDCT MSGS TO SSE') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.WUI.GNMA_FRB_INS_O_C1') +
*  ALTDATE(2012-08-20) +
*  ALTTIME(21.53.00) +
   TARGET('MQABNY.MQVBNY.WUI.BMC.GNMA_FRB_INS_O_C1') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RAK1464 INSTR QUEUE TO FRB FOR GNMA CI') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.WUI.GNMA_FRB_INS_O_CD') +
*  ALTDATE(2012-10-09) +
*  ALTTIME(23.45.04) +
   TARGET('MQABNY.MQVBNY.WUI.BMC.GNMA_FRB_INS_O_CD') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RNC1642 GNMA SURROGATE QUEUE TO FE DEV') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.WUI.GNMA_FRB_INS_O_CU') +
*  ALTDATE(2012-10-04) +
*  ALTTIME(09.38.31) +
   TARGET('MQABNY.MQVBNY.WUI.BMC.GNMA_FRB_INS_O_CU') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RPW1677 GNMA SURROGATE QUEUE TO FE QA') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.XAW.SWF_INS_O_C') +
*  ALTDATE(2012-03-07) +
*  ALTTIME(21.35.53) +
   TARGET('MQABNY.MQWBNY.XAW.BMC.SWF_INS_O_C') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSK1648 THIS IS TO RECEIVE MESSAGES FROM GTM.') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.XLM.KMS_XLM_CMS_O') +
*  ALTDATE(2014-07-24) +
*  ALTTIME(00.02.13) +
   TARGET('MQABNY.MQABNY.XLM.BMC.KMS_XLM_CMS_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RNG1728 BMC OUTBOUND QUEUE FOR XLM FROM BMC') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.XLM.RE1_XLM_O') +
*  ALTDATE(2014-07-24) +
*  ALTTIME(00.02.13) +
   TARGET('MQABNY.MQABNY.XLM.BMC.RE1_XLM_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RNG1728 BMC OUTBOUND QUEUE FOR XLM FROM RPO') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.XLM.RE2_XLM_O') +
*  ALTDATE(2014-07-24) +
*  ALTTIME(00.02.13) +
   TARGET('MQABNY.MQABNY.XLM.BMC.RE2_XLM_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RNG1728 BMC OUTBOUND QUEUE FOR XLM FROM RPO') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.XLM.RE3_XLM_O') +
*  ALTDATE(2014-07-24) +
*  ALTTIME(00.02.13) +
   TARGET('MQABNY.MQABNY.XLM.BMC.RE3_XLM_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RNG1728 BMC OUTBOUND QUEUE FOR XLM FROM RPO') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMC.XLM.RE4_XLM_O') +
*  ALTDATE(2014-07-24) +
*  ALTTIME(00.02.13) +
   TARGET('MQABNY.MQABNY.XLM.BMC.RE4_XLM_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RNG1728 BMC OUTBOUND QUEUE FOR XLM FROM RPO') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BMOCM.BMC.SWP_INS_I') +
*  ALTDATE(2014-06-13) +
*  ALTTIME(03.43.35) +
   TARGET('MQABNY.MQABNY.BMC.BMC.SWFPP_FED_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('itsp# 478561') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QLOCAL('BMOCMDEV') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-09-17) +
*  ALTTIME(09.08.28) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-07-10) +
*  CRTIME(10.50.37) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(EXCL) +
*  DEFTYPE(PREDEFINED) +
   DESCR('xmit queue for mq proxy BDS to BMO') +
   DISTL(YES) +
   GET(ENABLED) +
   HARDENBO +
   INITQ('SYSTEM.CHANNEL.INITQ') +
*  IPPROCS(0) +
   MAXDEPTH(1000) +
   MAXMSGL(15000) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   TRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   NOSHARE +
   STATQ(QMGR) +
   TRIGDATA('ABKA.BMOCMDEV.C1') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(XMITQ) +
   REPLACE
DEFINE QREMOTE('BNMA.BDC.BNMS.RPO.ACP_REQUEST.0001') +
*  ALTDATE(2013-12-10) +
*  ALTTIME(02.22.32) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('ITSP  376604 : ACP services') +
   PUT(ENABLED) +
   RQMNAME('SQLD') +
   RNAME('IN.BDC.RPO.ACP_REQUEST.0001') +
   SCOPE(QMGR) +
   XMITQ(' ') +
   REPLACE
DEFINE QREMOTE('BNMA.BDC.BNMS.RPO.RPONFE_REQUEST.0001') +
*  ALTDATE(2014-05-16) +
*  ALTTIME(03.19.19) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('ITSP: 462150 : RPO NFE services') +
   PUT(ENABLED) +
   RQMNAME('SQLD') +
   RNAME('IN.BDC.RPO.RPONFE_REQUEST.0001') +
   SCOPE(QMGR) +
   XMITQ(' ') +
   REPLACE
DEFINE QLOCAL('BNMS.RPO.BNMA.BDC.ACP_RESULT.0001') +
   ACCTQ(QMGR) +
*  ALTDATE(2013-12-10) +
*  ALTTIME(02.22.32) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2013-12-10) +
*  CRTIME(02.22.32) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('ITSP: 376604 : ReplyQ for ACP_REQUEST') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(500) +
   MAXMSGL(10240) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('BNMS.RPO.BNMA.BDC.RPONFE_RESULT.0001') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-05-16) +
*  ALTTIME(03.19.39) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-05-16) +
*  CRTIME(03.19.39) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('ITSP: 462150 : ReplyQ for RPONFE_REQUEST') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(500) +
   MAXMSGL(10240) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QALIAS('BNP.BMC.SWIFT_PP_INS_I') +
*  ALTDATE(2013-07-08) +
*  ALTTIME(23.29.31) +
   TARGET('MQABNY.MQVBNY.BMC.BMC.SWIFT_PP_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('itsp# 298120') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNP.BMC.SWP_INS_I') +
*  ALTDATE(2013-08-06) +
*  ALTTIME(05.47.36) +
   TARGET('MQABNY.MQVBNY.BMC.BMC.SWP_INS_I_1') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('itsp# 298892, 312929') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QLOCAL('BNSUATCDS') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-03-31) +
*  ALTTIME(14.13.01) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2012-07-24) +
*  CRTIME(17.00.02) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('ITSP132661:TransmitQ to Scotia/BNSUATCDS') +
   DISTL(YES) +
   GET(ENABLED) +
   HARDENBO +
   INITQ('SYSTEM.CHANNEL.INITQ') +
*  IPPROCS(0) +
   MAXDEPTH(50000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   TRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA('ABKA.BNSUATCDS.C1') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(XMITQ) +
   REPLACE
DEFINE QALIAS('BNY.ELI.BBH.SONIC.ACKNAK.BBP') +
*  ALTDATE(2011-04-06) +
*  ALTTIME(14.45.12) +
   TARGET('MQABNY.MQMBBH.BBP.BMC.BBP_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RHV1503 GSCX ACK/NACK TO BROWN BROTHERS') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY.ELI.BBH.SONIC.ACKNAK.HAR') +
*  ALTDATE(2011-04-06) +
*  ALTTIME(14.45.12) +
   TARGET('MQABNY.MQMBBH.BBP.BMC.HAR_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RHV1503 GSCX ACK/NACK TO HARRIMAN.') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY.ELI.BBH.SONIC.CONFIRM.BBP') +
*  ALTDATE(2011-04-06) +
*  ALTTIME(14.45.12) +
   TARGET('MQABNY.MQMBBH.BBP.BMC.BBP_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RHV1503 GSCX CONFIRMS TO BROWN BROTHERS.') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY.ELI.BBH.SONIC.CONFIRM.HAR') +
*  ALTDATE(2011-04-06) +
*  ALTTIME(14.45.12) +
   TARGET('MQABNY.MQMBBH.BBP.BMC.HAR_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RHV1503 GSCX CONFIRMS TO HARRIMAN.') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY.TO.CIGCWT.RESPONSE') +
*  ALTDATE(2013-02-26) +
*  ALTTIME(21.26.40) +
   TARGET('MQABNY.MQSCIG.CIG.BMC.CWT_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RIN1597 GSCX ACK/NACK TO CITADEL') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY.TO.CIGFFP.RESPONSE') +
*  ALTDATE(2013-02-26) +
*  ALTTIME(21.26.40) +
   TARGET('MQABNY.MQSCIG.CIG.BMC.FEP_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RIN1597 GSCX ACK/NACK TO CITADEL') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY.TO.CIT.RESPONSE') +
*  ALTDATE(2013-02-26) +
*  ALTTIME(21.26.40) +
   TARGET('MQABNY.MQSCIG.CIG.BMC.CIG_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RIN1597 GSCX ACK/NACK TO CITADEL') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY.TO.CIT.RPO.RESPONSE') +
*  ALTDATE(2013-02-26) +
*  ALTTIME(21.26.40) +
   TARGET('MQABNY.MQSCIG.CIG.BMC.CIG_RPO_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RIN1597 GSCX ACK/NACK TO CITADEL') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY.TO.GSEC.ACKNAK') +
*  ALTDATE(2014-09-17) +
*  ALTTIME(05.33.22) +
   TARGET('MQABNY.MQMGSEC.GMS.BMC.GSEC_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('REL1725 ACK/NAK TO GOLDMAN-GSEC.') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY.TO.GSEC.CONFIRM') +
*  ALTDATE(2014-09-17) +
*  ALTTIME(05.33.22) +
   TARGET('MQABNY.MQMGSEC.GMS.BMC.GSEC_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('REL1725 CONFIRMATIONS TO GOLDMAN-GSEC.') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY.TO.MSCO.ACKNAK') +
*  ALTDATE(2013-08-07) +
*  ALTTIME(16.00.39) +
   TARGET('MQABNY.MQMMOR.MOR.BMC.MS_REPO_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RUX1741 GSCX ACK/NAK TO MS DOMESTIC') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY.TO.MSCO.RECV1') +
*  ALTDATE(2013-08-07) +
*  ALTTIME(16.00.39) +
   TARGET('MQABNY.MQMMOR.MOR.BMC.MS_REPO_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RUX1741 GSCX CONFIRMS TO MS-DOMESTIC') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY.TO.MSIL.EFS.RECV1') +
*  ALTDATE(2013-08-07) +
*  ALTTIME(16.00.39) +
   TARGET('MQABNY.MQMMOR.MOR.BMC.MSI_EQ_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RUX1741 GSCX CONFIRMS TO MSI-EQUITY') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY.TO.MSIL.EFSDOM.RECV1') +
*  ALTDATE(2013-08-07) +
*  ALTTIME(16.00.39) +
   TARGET('MQABNY.MQMMOR.MOR.BMC.MSI_EQ_A38_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RUX1741 GSCX CONFIRMS TO MSI-EQUITY') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY.TO.MSIL.RECV1') +
*  ALTDATE(2013-08-07) +
*  ALTTIME(16.00.39) +
   TARGET('MQABNY.MQMMOR.MOR.BMC.MSI_FX_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RUX1741 GSCX CONFIRMS TO MSI-FIXEDINCOME') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY.TO.PIERPONT.Q') +
*  ALTDATE(2010-03-09) +
*  ALTTIME(10.33.08) +
   TARGET('MQABNY.MQSRDQ.QPE.BMC.READQ_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RKL1427 RESPONSES TO PIERPOINT/READQ') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_AMH_ACKNAK') +
*  ALTDATE(2010-09-08) +
*  ALTTIME(05.13.36) +
   TARGET('MQABNY.MQDADP.IMP.BMC.AMH_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RCL1484 GSCX ACK/NACK TO ADP/AMHERST') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_AMH_RECV') +
*  ALTDATE(2010-09-08) +
*  ALTTIME(05.13.36) +
   TARGET('MQABNY.MQDADP.IMP.BMC.AMH_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RCL1484 GSCX CONFIRMS TO ADP/AMHERST') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_BAK_TEST_RCV') +
*  ALTDATE(2012-04-03) +
*  ALTTIME(21.50.59) +
   TARGET('MQABNY.MQWSNG.PH3.BMC.IMX_BAK_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSZ1645 RESP QUEUE FOR BAKER') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_BAS_ACKNAK') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQABNY.MQDADP.IMP.BMC.BAS_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVT1400 GSCX ACK/NAK TO BOA- ADP / ICI') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_BAS_RECV') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQABNY.MQDADP.IMP.BMC.BAS_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVT1400 GSCX CONFIRMS TO BOA- ADP / ICI') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_BBV_TEST_RCV') +
*  ALTDATE(2012-04-03) +
*  ALTTIME(21.50.59) +
   TARGET('MQABNY.MQWSNG.PH3.BMC.IMX_BBV_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSZ1645 RESP QUEUE FOR BBVP') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_BGC_TEST_RCV') +
*  ALTDATE(2012-04-03) +
*  ALTTIME(21.50.59) +
   TARGET('MQABNY.MQWSNG.PH3.BMC.IMX_BGC_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSZ1645 RESP QUEUE FOR CANTOR') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_BLS_TEST_RCV') +
*  ALTDATE(2012-04-03) +
*  ALTTIME(21.50.59) +
   TARGET('MQABNY.MQWSNG.PH3.BMC.IMX_BLS_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSZ1645 RESP QUEUE FOR BBVA') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_BNK_ACKNAK') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQABNY.MQDADP.IMP.BMC.BNK_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVT1400 GSCX ACK/NAK TO BOA- ADP / ICI') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_BNK_RECV') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQABNY.MQDADP.IMP.BMC.BNK_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVT1400 GSCX CONFIRMS TO BOA- ADP / ICI') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_BNP_ACKNAK') +
*  ALTDATE(2013-07-15) +
*  ALTTIME(03.56.33) +
   TARGET('MQABNY.MQDADP.IMP.BMC.BNP_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RIM1747 BROADRIDGE BNP ACK') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_BNP_RECV') +
*  ALTDATE(2013-07-15) +
*  ALTTIME(03.56.33) +
   TARGET('MQABNY.MQDADP.IMP.BMC.BNP_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RIM1747 BROADRIDGE BNP RSP') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_BZW_ACKNAK') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQABNY.MQDADP.IMP.BMC.BZW_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVT1400 GSCX ACK/NAK TO BARCLAYS - ADP / ICI') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_BZW_RECV') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQABNY.MQDADP.IMP.BMC.BZW_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVT1400 GSCX CONFIRMS TO BARCLAYS - ADP / ICI') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_CCI_TEST_RCV') +
*  ALTDATE(2012-04-03) +
*  ALTTIME(21.50.59) +
   TARGET('MQABNY.MQWSNG.PH3.BMC.IMX_CCI_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSZ1645 RESP QUEUE FOR CARTY') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_CFC_TEST_RCV') +
*  ALTDATE(2012-04-03) +
*  ALTTIME(21.50.59) +
   TARGET('MQABNY.MQWSNG.PH3.BMC.IMX_CFC_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSZ1645 RESP QUEUE FOR CANTOR') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_CFD_TEST_RCV') +
*  ALTDATE(2012-04-03) +
*  ALTTIME(21.50.59) +
   TARGET('MQABNY.MQWSNG.PH3.BMC.IMX_CFD_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSZ1645 RESP QUEUE FOR CANTOR') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_CFI_TEST_RCV') +
*  ALTDATE(2012-04-03) +
*  ALTTIME(21.50.59) +
   TARGET('MQABNY.MQWSNG.PH3.BMC.IMX_CFI_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSZ1645 RESP QUEUE FOR CANTOR') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_CFI_TRI_TEST_RCV') +
*  ALTDATE(2012-04-03) +
*  ALTTIME(21.50.58) +
   TARGET('MQABNY.MQWSNG.PH3.BMC.ADM_CFI_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSZ1645 ADM RESP QUEUE FOR CANTOR') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_CFM_MIS_TEST_RCV') +
*  ALTDATE(2012-04-03) +
*  ALTTIME(21.50.59) +
   TARGET('MQABNY.MQWSNG.PH3.BMC.MIS_CFM_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSZ1645 BONYGRAM RESP QUEUE FOR CANTOR') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_CFM_TEST_RCV') +
*  ALTDATE(2012-04-03) +
*  ALTTIME(21.50.59) +
   TARGET('MQABNY.MQWSNG.PH3.BMC.IMX_CFM_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSZ1645 RESP QUEUE FOR CANTOR') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_CIT_ACKNAK') +
*  ALTDATE(2010-06-21) +
*  ALTTIME(12.10.55) +
   TARGET('MQABNY.MQDADP.IMP.BMC.CITI_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RDW1397 ACK/NACK TO ADP') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_CIT_RECV') +
*  ALTDATE(2010-06-21) +
*  ALTTIME(12.10.55) +
   TARGET('MQABNY.MQDADP.IMP.BMC.CITI_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RDW1397 SETTLEMENT TO ADP') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_CLA_TEST_RCV') +
*  ALTDATE(2012-04-03) +
*  ALTTIME(21.50.59) +
   TARGET('MQABNY.MQWSNG.PH3.BMC.IMX_CLA_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSZ1645 RESP QUEUE FOR CREDIT AGRICOLE') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_CLA_TRI_TEST_RCV') +
*  ALTDATE(2012-04-03) +
*  ALTTIME(21.50.58) +
   TARGET('MQABNY.MQWSNG.PH3.BMC.ADM_YPD_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSZ1645 ADM RESP QUEUE FOR CREDIT AGRICOLE') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_CLS_TEST_RCV') +
*  ALTDATE(2012-04-03) +
*  ALTTIME(21.50.59) +
   TARGET('MQABNY.MQWSNG.PH3.BMC.IMX_CLS_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSZ1645 RESP QUEUE FOR CREDIT AGRICOLE') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_CLS_TRI_TEST_RCV') +
*  ALTDATE(2012-04-03) +
*  ALTTIME(21.50.58) +
   TARGET('MQABNY.MQWSNG.PH3.BMC.ADM_YZU_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSZ1645 ADM RESP QUEUE FOR CREDIT AGRICOLE') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_CMI_DELIVERY') +
*  ALTDATE(2010-03-12) +
*  ALTTIME(14.49.35) +
   TARGET('MQABNY.MQLMTX.TBL.BMC.CMI_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RCL1437 GSCX CONFIRMS TO BNY CAPITAL MARKET') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_CRT_ACKNAK') +
*  ALTDATE(2010-09-24) +
*  ALTTIME(14.31.44) +
   TARGET('MQABNY.MQDADP.IMP.BMC.CRT_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSC1435 GSCX ACK/NACK TO CRT CAPITAL') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_CRT_RECV') +
*  ALTDATE(2010-09-24) +
*  ALTTIME(14.31.44) +
   TARGET('MQABNY.MQDADP.IMP.BMC.CRT_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSC1435 GSCX CONFIRMS TO CRT CAPITAL') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_DAS_TEST_RCV') +
*  ALTDATE(2012-04-03) +
*  ALTTIME(21.50.59) +
   TARGET('MQABNY.MQWSNG.PH3.BMC.IMX_DAS_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSZ1645 RESP QUEUE FOR DAIWA') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_DAS_TRI_TEST_RCV') +
*  ALTDATE(2012-04-03) +
*  ALTTIME(21.50.58) +
   TARGET('MQABNY.MQWSNG.PH3.BMC.ADM_DSA_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSZ1645 ADM RESP QUEUE FOR DAIWA') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_DSA_TEST_RCV') +
*  ALTDATE(2012-04-03) +
*  ALTTIME(21.50.59) +
   TARGET('MQABNY.MQWSNG.PH3.BMC.IMX_DSA_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSZ1645 RESP QUEUE FOR DAIWA') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_FBS_TEST_RCV') +
*  ALTDATE(2012-04-03) +
*  ALTTIME(21.50.59) +
   TARGET('MQABNY.MQWSNG.PH3.BMC.IMX_FBS_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSZ1645 RESP QUEUE FOR US BANK') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_FIDNY_RECV') +
*  ALTDATE(2013-08-07) +
*  ALTTIME(16.00.39) +
   TARGET('MQABNY.MQMMOR.MOR.BMC.MS_DOM_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RUX1741 GSCX CONFIRMS TO MS-DOMESTIC') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_FNB_TEST_RCV') +
*  ALTDATE(2012-04-03) +
*  ALTTIME(21.53.40) +
   TARGET('MQABNY.MQWSNG.PH3.BMC.IMX_FNB_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RHK1552 RESP QUEUE FOR WELLS FARGO') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_FOR_ACKNAK') +
*  ALTDATE(2010-03-09) +
*  ALTTIME(10.22.02) +
   TARGET('MQABNY.MQDADP.IMP.BMC.FOR_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RRU1438 GSCX ACK/NAK TO MEES PIERSON - ADP / ICI') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_FOR_RECV') +
*  ALTDATE(2010-03-09) +
*  ALTTIME(10.22.02) +
   TARGET('MQABNY.MQDADP.IMP.BMC.FOR_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RRU1438 GSCX CONFIRMS TO MEES PIERSON - ADP / ICI') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_FUI_TEST_RCV') +
*  ALTDATE(2012-04-03) +
*  ALTTIME(21.53.41) +
   TARGET('MQABNY.MQWSNG.PH3.BMC.IMX_FUI_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RHK1552 RESP QUEUE FOR WELLS FARGO') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_FUR_TEST_RCV') +
*  ALTDATE(2012-04-03) +
*  ALTTIME(21.53.41) +
   TARGET('MQABNY.MQWSNG.PH3.BMC.IMX_FUR_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RHK1552 RESP QUEUE FOR WELLS FARGO') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_FUT_TEST_RCV') +
*  ALTDATE(2012-04-03) +
*  ALTTIME(21.53.41) +
   TARGET('MQABNY.MQWSNG.PH3.BMC.IMX_FUT_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RHK1552 RESP QUEUE FOR WELLS FARGO') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_GKS_ACKNAK') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQABNY.MQDADP.IMP.BMC.GRIF_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSC1351 ACK/NAK TO ADP/BROADRIDGE') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_GKS_RECV') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQABNY.MQDADP.IMP.BMC.GRIF_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSC1351 RESPONSES TO ADP/BROADRIDGE') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_GLE_DELIVERY') +
*  ALTDATE(2010-10-05) +
*  ALTTIME(09.31.50) +
   TARGET('MQABNY.MQLMTX.TBL.BMC.GLE_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RXP1513 GSCX CONFIRMS TO GLEACHER') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_HVB_ACKNAK') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQABNY.MQDADP.IMP.BMC.HVB_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVT1400 GSCX ACK/NAK  TO HYPO VERIENS- ADP / ICI') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_HVB_RECV') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQABNY.MQDADP.IMP.BMC.HVB_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVT1400 GSCX CONFIRMS TO HYPO VERIENS- ADP / ICI') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_ICIQA_ACKNAK') +
*  ALTDATE(2013-05-02) +
*  ALTTIME(05.35.07) +
   TARGET('MQABNY.MQDADP.IMP.BMC.ICIQA_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RMT1470 BROADRIDGE TEST QUEUE') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_ICIQA_RECV') +
*  ALTDATE(2013-05-02) +
*  ALTTIME(05.35.07) +
   TARGET('MQABNY.MQDADP.IMP.BMC.ICIQA_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RMT1470 BROARDRIDGE TEST QUEUE') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_ING_ACKNAK') +
*  ALTDATE(2010-06-14) +
*  ALTTIME(11.25.24) +
   TARGET('MQABNY.MQDADP.IMP.BMC.ING_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RFX1436 ACK/NACK TO ADP') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_ING_RECV') +
*  ALTDATE(2010-06-14) +
*  ALTTIME(11.25.24) +
   TARGET('MQABNY.MQDADP.IMP.BMC.ING_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RFX1436 SETTLEMENT TO ADP') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_KGS_ACKNAK') +
*  ALTDATE(2012-03-21) +
*  ALTTIME(21.32.06) +
   TARGET('MQABNY.MQDADP.IMP.BMC.KGS_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RFV1583 ACK/NACK TO ADP') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_KGS_RECV') +
*  ALTDATE(2012-03-21) +
*  ALTTIME(21.32.06) +
   TARGET('MQABNY.MQDADP.IMP.BMC.KGS_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RFV1583 CONFIRMS TO ADP') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_LBB_ACKNAK') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQABNY.MQDADP.IMP.BMC.LBBW_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVT1400 GSCX ACK/NAK TO LANDS BANK- ADP / ICI') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_LBB_RECV') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQABNY.MQDADP.IMP.BMC.LBBW_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVT1400 GSCX CONFIRMS TO LANDS BANK- ADP / ICI') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_LEG_ACKNAK') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQABNY.MQDADP.IMP.BMC.LEG_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVT1400 GSCX ACK/NAK TO LEGG MASON - ADP / ICI') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_LEG_RECV') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQABNY.MQDADP.IMP.BMC.LEG_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVT1400 GSCX CONFIRMS TO LEGG MASON - ADP / ICI') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_LIB_RECV1') +
*  ALTDATE(2012-05-07) +
*  ALTTIME(22.26.17) +
   TARGET('MQABNY.MQSLIB.LIB.BMC.LIB_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RLV1675 CONFIRMATIONS TO LIBERTY') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_MFI_MIS_TEST_RCV') +
*  ALTDATE(2012-04-03) +
*  ALTTIME(21.50.59) +
   TARGET('MQABNY.MQWSNG.PH3.BMC.MIS_MFI_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSZ1645 BONYGRAM RESP QUEUE FOR CANTOR') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_MFI_TEST_RCV') +
*  ALTDATE(2012-04-03) +
*  ALTTIME(21.50.59) +
   TARGET('MQABNY.MQWSNG.PH3.BMC.IMX_MFI_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSZ1645 RESP QUEUE FOR CANTOR') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_MSI_TEST_RCV') +
*  ALTDATE(2012-04-03) +
*  ALTTIME(21.50.59) +
   TARGET('MQABNY.MQWSNG.PH3.BMC.IMX_MSI_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSZ1645 RESP QUEUE FOR MF GLOBAL') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_MS_FIDNY_ACKNAK') +
*  ALTDATE(2013-08-07) +
*  ALTTIME(16.00.39) +
   TARGET('MQABNY.MQMMOR.MOR.BMC.MS_DOM_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RUX1741 GSCX ACK/NAK TO MS DOMESTIC') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_NAB_ACKNAK') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQABNY.MQDADP.IMP.BMC.NAB_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVT1400 GSCX ACK/NAK TO NATIONAL AUSTRALIA BANK- ADP / ICI') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_NAB_RECV') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQABNY.MQDADP.IMP.BMC.NAB_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVT1400 GSCX CONFIRMS TO NATIONAL AUSTRALIA BANK- ADP / ICI') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_NOR_TEST_RCV') +
*  ALTDATE(2012-04-03) +
*  ALTTIME(21.53.41) +
   TARGET('MQABNY.MQWSNG.PH3.BMC.IMX_NOR_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RHK1552 RESP QUEUE FOR WELLS FARGO') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_NSB_ACKNAK') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQABNY.MQDADP.IMP.BMC.NSB_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVT1400 GSCX ACK/NAK TO NESBIT BURNS- ADP / ICI') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_NSB_RECV') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQABNY.MQDADP.IMP.BMC.NSB_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVT1400 GSCX CONFIRMS TO NESBIT BURNS- ADP / ICI') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_NSI_ACKNAK') +
*  ALTDATE(2010-04-19) +
*  ALTTIME(16.50.44) +
   TARGET('MQABNY.MQDADP.IMP.BMC.NOMUS_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('REX1412 ACK/NACK TO ADP') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_NSI_RECV') +
*  ALTDATE(2010-04-19) +
*  ALTTIME(16.50.44) +
   TARGET('MQABNY.MQDADP.IMP.BMC.NOMUS_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('REX1412 SETTLEMENT TO ADP') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_NWA_TEST_RCV') +
*  ALTDATE(2012-04-03) +
*  ALTTIME(21.50.59) +
   TARGET('MQABNY.MQWSNG.PH3.BMC.IMX_NWA_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSZ1645 RESP QUEUE FOR NEWMAN') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_OPN_ACKNAK') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQABNY.MQDADP.IMP.BMC.OPNH_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVT1400 GSCX ACK/NAK TO OPPENHIEMER- ADP / ICI') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_OPN_RECV') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQABNY.MQDADP.IMP.BMC.OPNH_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVT1400 GSCX CONFIRMS TO OPPENHIEMER- ADP / ICI') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_PLM_DELIVERY') +
*  ALTDATE(2010-03-12) +
*  ALTTIME(14.49.35) +
   TARGET('MQABNY.MQLMTX.TBL.BMC.PLM_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RCL1437 GSCX CONFIRMS TO PALOMA') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_POP_TEST_RECV') +
*  ALTDATE(2012-04-03) +
*  ALTTIME(21.50.59) +
   TARGET('MQABNY.MQWSNG.PH3.BMC.IMX_POP_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSZ1645 RESP QUEUE FOR POPULAR') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_PPT_ACKNAK') +
*  ALTDATE(2012-04-16) +
*  ALTTIME(21.47.56) +
   TARGET('MQABNY.MQDADP.IMP.BMC.QPE_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RUO1688 GSCX ACK/NAK TO PIERPONT') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_PPT_RECV') +
*  ALTDATE(2012-04-16) +
*  ALTTIME(21.47.56) +
   TARGET('MQABNY.MQDADP.IMP.BMC.QPE_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RUO1688 GSCX CONFIRMS TO PIERPONT.') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_RBC_ACKNAK') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQABNY.MQDADP.IMP.BMC.RBC_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVT1400 GSCX ACK/NAK TO RBC CAPITAL - ADP / ICI') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_RBC_RECV') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQABNY.MQDADP.IMP.BMC.RBC_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVT1400 GSCX CONFIRMS TO RBC CAPITAL - ADP / ICI') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_RCA_TEST_RCV') +
*  ALTDATE(2012-04-03) +
*  ALTTIME(21.50.59) +
   TARGET('MQABNY.MQWSNG.PH3.BMC.IMX_RCA_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSZ1645 RESP QUEUE FOR RCAP') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_RGE_ACKNAK') +
*  ALTDATE(2010-03-08) +
*  ALTTIME(09.43.04) +
   TARGET('MQABNY.MQDADP.IMP.BMC.RGE_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RLX1402 GSCX ACK/NAK TO RIDGE CLEARING - ADP / ICI') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_RGE_RECV') +
*  ALTDATE(2010-03-08) +
*  ALTTIME(09.43.04) +
   TARGET('MQABNY.MQDADP.IMP.BMC.RGE_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RLX1402 GSCX CONFIRMS TO RIDGE CLEARING  - ADP / ICI') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_SAM_ACKNAK') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQABNY.MQDADP.IMP.BMC.SAM_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVT1400 GSCX ACK/NAK TO SWISS AMERICA - ADP / ICI') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_SAM_RECV') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQABNY.MQDADP.IMP.BMC.SAM_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVT1400 GSCX CONFRIMS TO SWISS AMERICA - ADP / ICI') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_SCB_DELIVERY') +
*  ALTDATE(2010-03-12) +
*  ALTTIME(14.49.35) +
   TARGET('MQABNY.MQLMTX.TBL.BMC.SCB_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RCL1437 GSCX CONFIRMS TO STANDARD CHARTERED BANK') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_SCI_ACKNAK') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQABNY.MQDADP.IMP.BMC.SCO_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVT1400 GSCX ACK/NAK TO SCOTIA CAPITAL - ADP / ICI') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_SCI_RECV') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQABNY.MQDADP.IMP.BMC.SCO_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVT1400 GSCX ACK/NAK TO SCOTIA CAPITAL - ADP / ICI') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_SGA_ACKNAK') +
*  ALTDATE(2010-05-11) +
*  ALTTIME(20.11.13) +
   TARGET('MQABNY.MQDADP.IMP.BMC.SG_PD_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RXP1482 ACK/NACK TO ADP FOR SOCIETE GENERALE PD MSGS') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_SGA_RECV') +
*  ALTDATE(2010-05-11) +
*  ALTTIME(20.11.13) +
   TARGET('MQABNY.MQDADP.IMP.BMC.SG_PD_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RXP1482 SETTL.CONF FOR SOCIETE GENERALE PD INSTR') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_SGD_MIS_TEST_RCV') +
*  ALTDATE(2014-07-14) +
*  ALTTIME(07.51.22) +
   TARGET('MQABNY.MQWSNG.PH3.BMC.MIS_SNG_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVG1630 SUNGARD REPLY QUEUE') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_SNW_TEST_RCV') +
*  ALTDATE(2012-04-03) +
*  ALTTIME(21.50.59) +
   TARGET('MQABNY.MQWSNG.PH3.BMC.IMX_SNW_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSZ1645 RESP QUEUE FOR SEATTLE NORTHWEST') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_SSS_DELIVERY') +
*  ALTDATE(2010-03-12) +
*  ALTTIME(14.49.35) +
   TARGET('MQABNY.MQLMTX.TBL.BMC.SSS_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RCL1437 GSCX CONFIRMS TO SOUTH STREET') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_STC_ACKNAK') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQABNY.MQDADP.IMP.BMC.SUNT_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVT1400 GSCX ACK/NAK TO SUNTRUST - ADP / ICI') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_STC_RECV') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQABNY.MQDADP.IMP.BMC.SUNT_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVT1400 GSCX CONFIRMS TO SUNTRUST - ADP / ICI') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_TAS_TEST_RCV') +
*  ALTDATE(2012-04-03) +
*  ALTTIME(21.50.59) +
   TARGET('MQABNY.MQWSNG.PH3.BMC.IMX_TAS_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSZ1645 RESP QUEUE FOR RCAP') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_TEB_ACKNAK') +
*  ALTDATE(2011-07-13) +
*  ALTTIME(01.24.58) +
   TARGET('MQABNY.MQDADP.IMP.BMC.ETRD_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('REH1553 GSCX ACK/NAK TO ETRADE.') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_TEB_RECV') +
*  ALTDATE(2011-07-13) +
*  ALTTIME(01.24.58) +
   TARGET('MQABNY.MQDADP.IMP.BMC.ETRD_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('REH1553 GSCX CONFIRMS TO ETRADE.') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_TMS_ACKNAK') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQABNY.MQDADP.IMP.BMC.TMS_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVT1400 GSCX ACK/NAK TO BANK OF TOKYO - ADP / ICI') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_TMS_RECV') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQABNY.MQDADP.IMP.BMC.TMS_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVT1400 GSCX ACK/NAK TO BANK OF TOKYO - ADP / ICI') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_TOR_ACKNAK') +
*  ALTDATE(2011-03-17) +
*  ALTTIME(10.31.22) +
   TARGET('MQABNY.MQMTDS.IMP.BMC.TDS_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RIO1521 GSCX ACK/NACK TO TDS SECURITIES') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_TOR_RECV') +
*  ALTDATE(2011-03-17) +
*  ALTTIME(10.31.22) +
   TARGET('MQABNY.MQMTDS.IMP.BMC.TDS_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RIO1521 GSCX CONFIRMS TO TD SECURITIES.') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_UBS_ACKNAK') +
*  ALTDATE(2010-06-10) +
*  ALTTIME(18.13.32) +
   TARGET('MQABNY.MQDADP.IMP.BMC.UBS_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RAZ1374 GSCX ACK/NAK TO UBS-ADP/ICI') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_UBS_RECV') +
*  ALTDATE(2010-06-10) +
*  ALTTIME(18.13.32) +
   TARGET('MQABNY.MQDADP.IMP.BMC.UBS_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RAZ1374 GSCX CONFIRMS TO UBS-ADP/ICI') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_VIN_TEST_RCV') +
*  ALTDATE(2012-04-03) +
*  ALTTIME(21.50.59) +
   TARGET('MQABNY.MQWSNG.PH3.BMC.IMX_VIN_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSZ1645 RESP QUEUE FOR VINING') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_WCF_ACKNAK') +
*  ALTDATE(2011-07-27) +
*  ALTTIME(04.04.08) +
   TARGET('MQABNY.MQDADP.IMP.BMC.WCF_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RMU1546 GSCX ACK/NAK TO WELLSFARGO.') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_WCF_RECV') +
*  ALTDATE(2011-07-27) +
*  ALTTIME(04.04.08) +
   TARGET('MQABNY.MQDADP.IMP.BMC.WCF_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RMU1546 GSCX CONFIRMS TO WELLSFARGO') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_WLB_ACKNAK') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQABNY.MQDADP.IMP.BMC.WLB_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVT1400 GSCX ACK/NAK TO WEST LB- ADP / ICI') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_WLB_RECV') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MQABNY.MQDADP.IMP.BMC.WLB_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVT1400 GSCX ACK/NAK TO WEST LB- ADP / ICI') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BNY_TO_WSL_TEST_RCV') +
*  ALTDATE(2012-04-03) +
*  ALTTIME(21.53.41) +
   TARGET('MQABNY.MQWSNG.PH3.BMC.IMX_WSL_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RHK1552 RESP QUEUE FOR WELLS FARGO') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BONY.BMO.DEV.ACKNAK.QL') +
*  ALTDATE(2014-06-19) +
*  ALTTIME(08.07.51) +
   TARGET('MQABNY.MQWBMO.BMO.BMC.BMOCM_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RAL1578 ACKNAK QUEUE FOR BMOCM') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('BONY.BMO.DEV.CONF.QL') +
*  ALTDATE(2014-06-19) +
*  ALTTIME(08.07.51) +
   TARGET('MQABNY.MQWBMO.BMO.BMC.BMOCM_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RAL1578 CONFIRM QUEUE FOR BMOCM') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('CIG.BMC.CIG_FED_INS_I') +
*  ALTDATE(2014-06-24) +
*  ALTTIME(10.37.52) +
   TARGET('MQABNY.MQABNY.BMC.BMC.SWFPP_FED_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('itsp# 480995') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('CIG.BMC.CIG_INS_I') +
*  ALTDATE(2013-02-26) +
*  ALTTIME(21.25.52) +
   TARGET('CIG_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RAT1598 GSCX MESSAGES FROM CITADEL') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QLOCAL('CIGADPQM_DEV1') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-10-21) +
*  ALTTIME(07.57.26) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2012-05-23) +
*  CRTIME(13.06.27) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('TransmitQ to Citadel/CIGADPQM') +
   DISTL(YES) +
   GET(ENABLED) +
   HARDENBO +
   INITQ('SYSTEM.CHANNEL.INITQ') +
*  IPPROCS(0) +
   MAXDEPTH(50000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   TRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA('ABKA.CIGADPQM_D1.C1') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(XMITQ) +
   REPLACE
DEFINE QALIAS('CLASS_INS_I') +
*  ALTDATE(2011-05-16) +
*  ALTTIME(01.01.20) +
   TARGET('MQABNY.MQDBNY.CLS.BMC.CLASS_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RQD1544 RESPONSES FROM ABKA') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('CMS.BMC.GSC_INS_I_A') +
*  ALTDATE(2013-03-14) +
*  ALTTIME(10.05.28) +
   TARGET('MQMMEL.MQABNY.BMC.CMS.GSC_INS_I_A') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RUI1784 INPUT QUEUE FOR CMS UAT TEST') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('CMS.BMC.GSC_INS_I_S') +
*  ALTDATE(2013-03-14) +
*  ALTTIME(10.05.29) +
   TARGET('MQMMEL.MQABNY.BMC.CMS.GSC_INS_I_S') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RUI1784 INPUT QUEUE FOR CMS SIN TEST') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('CMS.BMC.GSC_INS_I_U') +
*  ALTDATE(2013-03-14) +
*  ALTTIME(10.05.29) +
   TARGET('MQMMEL.MQABNY.BMC.CMS.GSC_INS_I_U') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RUI1784 INPUT QUEUE FOR CMS UNIT TEST') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('COSINE.LIVE.RCVRQ') +
*  ALTDATE(2014-07-14) +
*  ALTTIME(07.47.24) +
   TARGET('MQABNY.MQMCTG.CTG.BMC.RPOCNF_LIVE_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RKY1778 CONFIRMATIONS IN LIVE MODE.') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('COSINE.PROJECTED.RCVRQ') +
*  ALTDATE(2014-07-14) +
*  ALTTIME(07.47.24) +
   TARGET('MQABNY.MQMCTG.CTG.BMC.RPOCNF_PROJ_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RKY1778 CONFIRMATIONS IN PROJECTED MODE.') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('CTG.BMC.RPOALLOC_INS_I') +
*  ALTDATE(2014-07-02) +
*  ALTTIME(22.25.12) +
   TARGET('MQABNY.MQVBNY.BMC.BMC.RPOALLOC_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('itsp# 490201') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('FIDEV.TTT.BNY.MSCO.GCFGRAB.RECV1') +
*  ALTDATE(2013-08-07) +
*  ALTTIME(16.00.39) +
   TARGET('MQABNY.MQMMOR.MOR.BMC.MS_GCF_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RUX1741 GSCX CONFIRMS TO MS-GCF') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('FIS.BMC.DWR_INS_I') +
*  ALTDATE(2010-08-20) +
*  ALTTIME(12.52.55) +
   TARGET('PFIS.MQS.BONYLINK.DWR_TO_BNY_DELV') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RGM1488 MSSB INSTRUCTIONS') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('FIS.BMC.DWR_INS_I_D') +
*  ALTDATE(2012-11-12) +
*  ALTTIME(20.25.50) +
   TARGET('DWR_INS_I_D') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('ROC1662 SETTL INSTR FROM MS-DEANWITTER-MQ35') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('FIS.BMC.DWR_INS_I_ND') +
*  ALTDATE(2012-11-12) +
*  ALTTIME(20.25.50) +
   TARGET('DWR_INS_I_ND') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('ROC1662 SETTL INSTR FROM MS-DEANWITTER-MQ72') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('GC.BONY.GOVT.RCVRQ') +
*  ALTDATE(2013-02-26) +
*  ALTTIME(21.23.43) +
   TARGET('MQABNY.MQMSAL.SAL.BMC.SAB_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RCQ1709 GSCX ACK/NACK TO CITI-SALOMON IN SSB FORMAT.') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('GC.BONY.MORTG.RCVRQ') +
*  ALTDATE(2013-02-26) +
*  ALTTIME(21.23.43) +
   TARGET('MQABNY.MQMSAL.SAL.BMC.SAL_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RCQ1709 GSCX ACK/NACK TO CITI-SALOMON IN IMX FORMAT.') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('GC.BONY.SHELL.RCVRQ') +
*  ALTDATE(2013-02-26) +
*  ALTTIME(21.23.43) +
   TARGET('MQABNY.MQMSAL.SAL.BMC.SHELL_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RCQ1709 GSCX ACK/NACK TO CITI-SALOMON IN BGRAM FORMAT.') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('GMS.BMC.GSEC_FED_INS_I') +
*  ALTDATE(2014-10-01) +
*  ALTTIME(15.36.03) +
   TARGET('MQABNY.MQABNY.BMC.BMC.SWFPP_FED_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('ITSP#543630') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('GMS.BMC.GSEC_FED_NS_I') +
*  ALTDATE(2014-09-17) +
*  ALTTIME(02.43.45) +
   TARGET('MQABNY.MQABNY.BMC.BMC.SWFPP_FED_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('ITSP#543630') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('GSC.BDC.BDCNOTIF_O') +
*  ALTDATE(2014-04-17) +
*  ALTTIME(09.02.53) +
   TARGET('MQABNY.MQABNY.GSC.BDC.BDCNOTIF_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVP1727 BDC TO GSC ASSET SERVICE NOTIFICATION QUEUE') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('GSC.BDC.BDCRPT_O') +
*  ALTDATE(2014-04-17) +
*  ALTTIME(09.02.53) +
   TARGET('MQABNY.MQABNY.GSC.BDC.BDCRPT_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVP1727 BDC TO GSC POST REPORT OUTBOUND QUEUE') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('GSC.BDC.GSCRPT_O') +
*  ALTDATE(2014-04-17) +
*  ALTTIME(09.19.28) +
   TARGET('MQABNY.MQABNY.BDC.GSC.GSCRPT_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RAQ1614 GSC TO BDC POST REPORT QUEUE') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('GSC.BDC.GSCSEC_O') +
*  ALTDATE(2014-04-17) +
*  ALTTIME(09.19.28) +
   TARGET('MQABNY.MQABNY.BDC.GSC.GSCSEC_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RAQ1614 GSC TO BDC SECURITY OUTPUT QUEUE') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('GSC.BMC.BDC_FTSIN_I') +
*  ALTDATE(2014-02-13) +
*  ALTTIME(02.13.04) +
   TARGET('MQABNY.MQABNY.GSC.BMC.BDC_FTSIN_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RCQ1747 FTSINTERNAL QUEUE TO GSC') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('GSC.BMC.BDC_FTSIN_R') +
*  ALTDATE(2014-02-13) +
*  ALTTIME(02.13.04) +
   TARGET('MQABNY.MQABNY.GSC.BMC.BDC_FTSIN_R') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RCQ1747 FTSRJT QUEUE TO GSC') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('GSC.BMC.BDC_FTSOUT_O') +
*  ALTDATE(2014-02-13) +
*  ALTTIME(02.13.04) +
   TARGET('MQABNY.MQABNY.GSC.BMC.BDC_FTSOUT_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RCQ1747 FTSOUT QUEUE TO GSC') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('GSC.BMC.BNYM_BE1_RSP_I') +
*  ALTDATE(2014-05-06) +
*  ALTTIME(09.48.05) +
   TARGET('MQABNY.MQABNY.BMC.BMC.BNYM_BE1_RSP_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR(' ') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('GSC.BMC.BNYM_BE2_RSP_I') +
*  ALTDATE(2014-05-06) +
*  ALTTIME(09.47.54) +
   TARGET('MQABNY.MQABNY.BMC.BMC.BNYM_BE2_RSP_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR(' ') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('GSC.BMC.CLM_CMD_REQ_I_A') +
*  ALTDATE(2011-07-15) +
*  ALTTIME(18.59.32) +
   TARGET('MQXBNY.MQABNY.BMC.///.CLM_CMD_REQ_I_A.MULT') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RRJ1548 TO RECEIVE COMMAND REQUESTS.') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('GSC.BMC.CLM_CMD_REQ_I_B') +
*  ALTDATE(2011-07-15) +
*  ALTTIME(18.59.32) +
   TARGET('MQXBNY.MQABNY.BMC.///.CLM_CMD_REQ_I_B.MULT') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RES1541 TO RECEIVE COMMAND REQUESTS.') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('GSC.BMC.CLM_INQ_REQ_I_A') +
*  ALTDATE(2011-07-15) +
*  ALTTIME(18.59.32) +
   TARGET('MQXBNY.MQABNY.BMC.///.CLM_INQ_REQ_I_A.MULT') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RPQ1577 TO RECEIVE CLM INQ REQUESTS.') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('GSC.BMC.CLM_INQ_REQ_I_B') +
*  ALTDATE(2011-07-15) +
*  ALTTIME(18.59.32) +
   TARGET('MQXBNY.MQABNY.BMC.///.CLM_INQ_REQ_I_B.MULT') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RDB1569 TO RECEIVE CLM INQ REQUESTS.') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('GSC.BMC.FTSIN_INS_I') +
*  ALTDATE(2014-02-13) +
*  ALTTIME(02.32.03) +
   TARGET('MQABNY.MQABNY.BMC.GSC.FTSIN_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RJB1668 FTS INCOMING QUEUE FROM GSC') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QREMOTE('GST1ETCPT1') +
*  ALTDATE(2012-05-17) +
*  ALTTIME(03.42.41) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('ITSP# 107666') +
   PUT(ENABLED) +
   RQMNAME('GST1ETCPT1') +
   RNAME(' ') +
   SCOPE(QMGR) +
   XMITQ('GST1ETCPT1.1') +
   REPLACE
DEFINE QLOCAL('GST1ETCPT1.1') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-10-28) +
*  ALTTIME(05.12.31) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2012-05-15) +
*  CRTIME(14.54.17) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('TransmitQ to GDS/GST1ETCPT1') +
   DISTL(YES) +
   GET(ENABLED) +
   HARDENBO +
   INITQ('SYSTEM.CHANNEL.INITQ') +
*  IPPROCS(0) +
   MAXDEPTH(50000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   TRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA('ABKA.GST1ETCPT1.C1') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(XMITQ) +
   REPLACE
DEFINE QLOCAL('GST1ETCPT1.2') +
   ACCTQ(QMGR) +
*  ALTDATE(2012-05-23) +
*  ALTTIME(14.44.22) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2012-05-15) +
*  CRTIME(14.54.17) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('TransmitQ2 to GDS/GST1ETCPT1') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ('SYSTEM.CHANNEL.INITQ') +
*  IPPROCS(0) +
   MAXDEPTH(50000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   TRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA('ABKA.GST1ETCPT1.C2') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(XMITQ) +
   REPLACE
DEFINE QREMOTE('I5ISYS0C') +
*  ALTDATE(2010-11-09) +
*  ALTTIME(13.43.29) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('QMGR Alias') +
   PUT(ENABLED) +
   RQMNAME('I5ISYS0C') +
   RNAME(' ') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS0C_1') +
   REPLACE
DEFINE QALIAS('IMP.BMC.AMH_INS_I') +
*  ALTDATE(2010-09-08) +
*  ALTTIME(04.57.50) +
   TARGET('OPNH_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVQ1408 GSCX INSTRUCTIONS FROM AMHERST') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('IMP.BMC.BAS_INS_I') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('BAS_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RAN1331 GSCX INSTRUCTIONS FROM BANK OF AMERICA') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('IMP.BMC.BMO_SWIFT_PP_INS_I') +
*  ALTDATE(2014-06-06) +
*  ALTTIME(04.26.35) +
   TARGET('MQABNY.MQVBNY.BMC.BMC.SWIFT_PP_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('itsp# 473984') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('IMP.BMC.BMO_SWP_INS_I') +
*  ALTDATE(2014-05-26) +
*  ALTTIME(06.49.05) +
   TARGET('MQABNY.MQVBNY.BMC.BMC.SWP_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('ITSP #46622') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('IMP.BMC.BNK_INS_I') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('BNK_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RAN1331 GSCX INSTRUCTIONS FROM BANK OF AMERICA') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('IMP.BMC.BNP_INS_I') +
*  ALTDATE(2013-07-15) +
*  ALTTIME(03.34.28) +
   TARGET('BNP_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RDO1687 BNP INSTRUCTIONS') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('IMP.BMC.BZW_INS_I') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('BZW_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RAN1331 GSCX INSTRUCTIONS FROM BARCLAYS') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('IMP.BMC.CITI_INS_I') +
*  ALTDATE(2010-06-21) +
*  ALTTIME(11.58.03) +
   TARGET('CIT_TO_BNY_DELV') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RYM1493 ADP INSTRUCTIONS') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('IMP.BMC.CRT_INS_I') +
*  ALTDATE(2010-09-24) +
*  ALTTIME(14.30.48) +
   TARGET('CRT_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RKA1505 SETTL INSTR. FOR CRT-CAPITAL.') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('IMP.BMC.ETRD_INS_I') +
*  ALTDATE(2011-07-13) +
*  ALTTIME(01.24.58) +
   TARGET('ETRD_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RFS1595 SETTL INSTR. FOR ETRADE.') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('IMP.BMC.FOR_INS_I') +
*  ALTDATE(2010-03-08) +
*  ALTTIME(11.27.41) +
   TARGET('FOR_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RPF1430 GSCX INSTRUCTIONS FROM MEES PIERSON') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('IMP.BMC.GRIF_INS_I') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('GRIF_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RND1316 GRIFFEN/ADP GSCX INSTRUCTIONS') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('IMP.BMC.HVB_INS_I') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('HVB_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RAN1331 GSCX INSTRUCTIONS FROM HYPO VERIENS') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('IMP.BMC.ICIQA_INS_I') +
*  ALTDATE(2013-05-02) +
*  ALTTIME(07.06.43) +
   TARGET('ICIQA_TO_BNY_DELV') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RIO1707 BROADRIDGE TEST QUEUE') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('IMP.BMC.ING_INS_I') +
*  ALTDATE(2010-06-14) +
*  ALTTIME(13.01.54) +
   TARGET('ING_TO_BNY_DELV') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RCA1472 ADP INSTRUCTIONS') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('IMP.BMC.JMC_INS_I') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('JMC_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RAN1331 GSCX INSTRUCTIONS FROM JP MPRGAN CHASE') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('IMP.BMC.KGS_INS_I') +
*  ALTDATE(2012-03-21) +
*  ALTTIME(21.33.21) +
   TARGET('KGS_TO_BNY_DELV') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RMV1600 ADP INSTRUCTIONS') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('IMP.BMC.LBBW_INS_I') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('LBBW_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RAN1331 GSCX INSTRUCTIONS FROM LANDS BANK') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('IMP.BMC.LEG_INS_I') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('LEG_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RAN1331 GSCX INSTRUCTIONS FROM LEGG MASON') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('IMP.BMC.MCD_INS_I') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('MCD_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RAN1331 GSCX INSTRUCTIONS FROM KEY BANK') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('IMP.BMC.NAB_CLASS_INS_I') +
*  ALTDATE(2014-03-24) +
*  ALTTIME(03.55.55) +
   TARGET('MQABNY.MQDBNY.CLS.BMC.CLASS_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('ITSP:432872 : IMP BMC alias queue') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('IMP.BMC.NAB_INS_I') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('NAB_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RAN1331 GSCX INSTRUCTIONS FROM NATIONAL AUSTRALIA BANK') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('IMP.BMC.NOMUS_INS_I') +
*  ALTDATE(2010-04-19) +
*  ALTTIME(16.50.44) +
   TARGET('NOMUS_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVO1493 ADP INSTRUCTIONS') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('IMP.BMC.NSB_INS_I') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('NSB_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RAN1331 GSCX INSTRUCTIONS FROM NESBIT BURNS') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('IMP.BMC.OPNH_INS_I') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('OPNH_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RAN1331 GSCX INSTRUCTIONS FROM OPPENHEIMER') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('IMP.BMC.PJC_INS_I') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('PJC_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RAN1331 GSCX INSTRUCTIONS FROM PIPER JEFFERIES') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('IMP.BMC.QPE_INS_I') +
*  ALTDATE(2012-04-16) +
*  ALTTIME(21.44.24) +
   TARGET('QPE_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RRX1663 GSCX MESSAGES FROM PIERPOINT') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('IMP.BMC.RBC_INS_I') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('RBC_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RAN1331 GSCX INSTRUCTIONS FROM RBC CAPITAL') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('IMP.BMC.RGE_INS_I') +
*  ALTDATE(2010-03-08) +
*  ALTTIME(09.20.54) +
   TARGET('RGE_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RDC1383 GSCX INSTRUCTIONS FROM RIDGE CLEARING') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('IMP.BMC.SAM_INS_I') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('SAM_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RAN1331 GSCX INSTRUCTIONS FROM SWISS AMERICAN SECURITIES') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('IMP.BMC.SCO_INS_I') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('SCO_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RAN1331 GSCX INSTRUCTIONS FROM SCOTIA CAPITAL') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('IMP.BMC.SG_PD_INS_I') +
*  ALTDATE(2010-05-11) +
*  ALTTIME(20.18.27) +
   TARGET('SG_PD_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RUC1410 SETTL INSTR. FOR SOCIETE GENERALE - PRIMERY DEALER') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('IMP.BMC.SUNT_INS_I') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('SUNT_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RAN1331 GSCX INSTRUCTIONS FROM SUNTRUST') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('IMP.BMC.SWPQA_INS_I') +
*  ALTDATE(2013-07-18) +
*  ALTTIME(03.07.21) +
   TARGET('MQABNY.MQVBNY.BMC.BMC.SWP_INS_I_1') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('itsp #301938') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('IMP.BMC.TDS_INS_I') +
*  ALTDATE(2011-03-17) +
*  ALTTIME(10.20.21) +
   TARGET('TDS_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RDA1509 SETTL INSTR. FOR TD SECUTRITIES.') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('IMP.BMC.TMS_INS_I') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('TMS_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RAN1331 GSCX INSTRUCTIONS FROM BANK OF TOKYO') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('IMP.BMC.UBS_INS_I') +
*  ALTDATE(2010-06-09) +
*  ALTTIME(18.00.49) +
   TARGET('UBS_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RWX1454 GSCX INSTRUCTIONS FROM UBS') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('IMP.BMC.WCF_INS_I') +
*  ALTDATE(2011-07-28) +
*  ALTTIME(07.25.12) +
   TARGET('WCF_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('ROA1514 SETTL INSTR. FOR WELLSFARGO.') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('IMP.BMC.WLB_INS_I') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.43) +
   TARGET('WLB_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RAN1331 GSCX INSTRUCTIONS FROM WEST LB') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('IN.RPO.BDC.ACP_RESULT.0001') +
*  ALTDATE(2013-12-10) +
*  ALTTIME(02.22.32) +
   TARGET('BNMS.RPO.BNMA.BDC.ACP_RESULT.0001') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('ITSP: 376604 : ReplyQ for ACP_REQUEST') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('KMS.BMC.ALL_CLM_CMS_I') +
*  ALTDATE(2014-07-16) +
*  ALTTIME(01.59.57) +
   TARGET('MQSBNY.MQABNY.BMC.RPO.ALL_CLM_CMS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('ITSP: 497105 : KMS to BMC alias queue') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('KMS.BMC.ALL_KMS_CMS_O') +
*  ALTDATE(2014-07-21) +
*  ALTTIME(06.06.43) +
   TARGET('MQABNY.MQABNY.KMS.BMC.ALL_KMS_CMS_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RPK1735 REPO TO KMS OUTBOUND QUEUE') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('KMS.BMC.CLM_CMS_DEF_O') +
*  ALTDATE(2014-07-21) +
*  ALTTIME(06.06.44) +
   TARGET('MQABNY.MQABNY.KMS.BMC.CLM_CMS_DEF_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RPK1735 DEFAULT QUEUE FOR CLM KMS') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('LIB.BMC.LIB_INS_I') +
*  ALTDATE(2012-05-07) +
*  ALTTIME(22.25.22) +
   TARGET('LIB_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RFO1619 GSCX INSTRUCTIONS FROM BANK OF LIBERTY.') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('LQ.BONY.ACKNAK') +
*  ALTDATE(2013-01-09) +
*  ALTTIME(21.43.13) +
   TARGET('MQABNY.MQLBMO.OCE.BMC.NSB_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RZB1676 GSCX ACK/NAK TO BMO-NESBITT BURNS') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('LQ.BONY.DATA') +
*  ALTDATE(2013-01-09) +
*  ALTTIME(21.43.13) +
   TARGET('MQABNY.MQLBMO.OCE.BMC.NSB_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RZB1676 GSCX CONFIRMS TO BMO-NESBITT BURNS') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QLOCAL('MG5A') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-08-22) +
*  ALTTIME(10.21.05) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2013-02-07) +
*  CRTIME(01.15.45) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('ITSP# 217321') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ('SYSTEM.CHANNEL.INITQ') +
*  IPPROCS(0) +
   MAXDEPTH(5000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   TRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA('ABKA.TO.MG5A') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(XMITQ) +
   REPLACE
DEFINE QALIAS('MIC.BMC.GSP_INS_I') +
*  ALTDATE(2014-06-10) +
*  ALTTIME(23.13.21) +
   TARGET('MQABNY.MQABNY.BMC.BMC.SWFPP_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('itsp# 476688') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('MOR.BMC.MORDOM_INS_I') +
*  ALTDATE(2013-07-24) +
*  ALTTIME(05.30.52) +
   TARGET('MORDOM_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RRL1744 SETTL INSTR FROM MS-DOMESTIC') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('MOR.BMC.MS_DOM_INS_I') +
*  ALTDATE(2013-08-09) +
*  ALTTIME(16.56.39) +
   TARGET('MS_DOM_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RNV1700 SETTL INSTR FROM MS-DOMESTIC') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('MOR.BMC.MS_GCF_INS_I') +
*  ALTDATE(2013-08-09) +
*  ALTTIME(16.56.39) +
   TARGET('MS_GCF_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RNV1700 SETTL INSTR FROM MS-GCF') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('MOR.BMC.MS_REPO_INS_I') +
*  ALTDATE(2013-08-09) +
*  ALTTIME(16.56.39) +
   TARGET('MS_REPO_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RNV1700 SETTL INSTR FROM MS-DOMESTIC') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QLOCAL('MQ20_1') +
   ACCTQ(QMGR) +
*  ALTDATE(2011-12-05) +
*  ALTTIME(14.19.46) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-08-17) +
*  CRTIME(15.05.36) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('TransmitQ to Morgan Dean Witter') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ('SYSTEM.CHANNEL.INITQ') +
*  IPPROCS(0) +
   MAXDEPTH(50000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   TRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA('BNY_ABKA.MOR_MQ20.C1') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(XMITQ) +
   REPLACE
DEFINE QLOCAL('MQ25') +
   ACCTQ(QMGR) +
*  ALTDATE(2012-10-17) +
*  ALTTIME(10.29.08) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2012-10-17) +
*  CRTIME(04.16.15) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('ITSP 168382:TransmitQ to MS Smith Barney MQ25 Queue Manager') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ('SYSTEM.CHANNEL.INITQ') +
*  IPPROCS(0) +
   MAXDEPTH(50000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   TRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA('ABKA.TO.MQ25.BDS.S1') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(XMITQ) +
   REPLACE
DEFINE QLOCAL('MQ35') +
   ACCTQ(QMGR) +
*  ALTDATE(2012-10-17) +
*  ALTTIME(10.27.36) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2012-10-17) +
*  CRTIME(04.05.46) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('ITSP 168349:TransmitQ to MS Smith Barney MQ35 Queue Manager') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ('SYSTEM.CHANNEL.INITQ') +
*  IPPROCS(0) +
   MAXDEPTH(50000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   TRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA('ABKA.TO.MQ35.BDS.S1') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(XMITQ) +
   REPLACE
DEFINE QLOCAL('MQ72') +
   ACCTQ(QMGR) +
*  ALTDATE(2013-10-07) +
*  ALTTIME(17.01.00) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2012-10-17) +
*  CRTIME(05.44.57) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('ITSP 170923:TransmitQ to MS Smith Barney MQ72 Queue Manager') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ('SYSTEM.CHANNEL.INITQ') +
*  IPPROCS(0) +
   MAXDEPTH(50000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   TRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA('ABKA.TO.MQ72.BDS.S1') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(XMITQ) +
   REPLACE
DEFINE QALIAS('MQABNY.APPLDFLT.TEMPLATE.ALIAS') +
*  ALTDATE(2010-03-08) +
*  ALTTIME(08.45.03) +
   TARGET(' ') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('DBA 12/00 APPL TEMPLATE ALIAS QUEUE') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QLOCAL('MQABNY.APPLDFLT.TEMPLATE.LOCAL') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-03-08) +
*  ALTTIME(08.45.03) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(14.12.44) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('APPL DFLT LOCAL QUEUE TEMPLATE SET UP BY DBA 8/2000') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(5000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QREMOTE('MQABNY.APPLDFLT.TEMPLATE.REMOTE') +
*  ALTDATE(2010-03-08) +
*  ALTTIME(08.45.03) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('DBA 01/01 APPL TEMPLATE REMOTE QUEUE') +
   PUT(ENABLED) +
   RQMNAME(' ') +
   RNAME(' ') +
   SCOPE(QMGR) +
   XMITQ(' ') +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BDC.BMC.CMS_FED_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-05-22) +
*  ALTTIME(04.55.33) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-05-22) +
*  CRTIME(04.55.33) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RRB1721 CMS FED QUEUE FOR BDC') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BDC.BMC.FED_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-10-16) +
*  ALTTIME(15.11.10) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-05-22) +
*  CRTIME(06.50.10) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RHI1682 BDC FED INSTRUCTION QUEUE') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(4) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BDC.BMC.IMX2_FED_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-05-22) +
*  ALTTIME(04.55.33) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-05-22) +
*  CRTIME(04.55.33) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RRB1721 IMX FED QUEUE FOR BDC') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BDC.BMC.MX_CASH_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-06-08) +
*  ALTTIME(23.46.14) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-06-08) +
*  CRTIME(23.46.14) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RJC1653 BDC INPUT QUEUE FOR SWIFT MX CASH MSGS') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(12000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BDC.BMC.SWFNET_FED_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-05-22) +
*  ALTTIME(04.55.33) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-05-22) +
*  CRTIME(04.55.33) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RRB1721 SWF NET FED QUEEU FOR BDC') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BDC.BMC.SWFPP_FED_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-05-22) +
*  ALTTIME(04.55.33) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-05-22) +
*  CRTIME(04.55.33) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RRB1721 SWF PP FED QUEUE FOR BDC') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BDC.GSC.GSCRPT_O') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-04-17) +
*  ALTTIME(09.19.28) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-04-17) +
*  CRTIME(09.19.28) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RAQ1614 GSC TO BDC POST REPORT QUEUE') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(2000) +
   MAXMSGL(1024) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BDC.GSC.GSCSEC_O') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-04-17) +
*  ALTTIME(09.19.28) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-04-17) +
*  CRTIME(09.19.28) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RAQ1614 GSC TO BDC SECURITY OUTPUT QUEUE') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BDC.ACK_O') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-06-01) +
*  ALTTIME(22.39.36) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-06-01) +
*  CRTIME(22.39.36) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RLP1638 BDC ACK MESSAGES THAT NEEDS FURTHER ROUTING') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(1000) +
   MAXMSGL(1024) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(1) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BDC.CONFIRM_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-04-21) +
*  ALTTIME(07.40.47) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-04-21) +
*  CRTIME(07.40.47) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('ROZ1794 CONF FROM BDC') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BDC.CONFIRM_O') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-06-01) +
*  ALTTIME(22.39.36) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-06-01) +
*  CRTIME(22.39.36) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RLP1638 BDC CONFIRM QUEUE') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BDC.MX_CASH_ACK_O') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-04-21) +
*  ALTTIME(07.40.47) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-04-21) +
*  CRTIME(07.40.47) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('ROZ1794 MX CASH ACK FROM BDC') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(10000) +
   MAXMSGL(12000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BDC.MX_CASH_CONF_O') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-04-21) +
*  ALTTIME(07.40.47) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-04-21) +
*  CRTIME(07.40.47) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('ROZ1794 MX CASH CONF FROM BDC') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(10000) +
   MAXMSGL(12000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.ADM_BGM_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2013-02-26) +
*  ALTTIME(21.27.33) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2013-02-26) +
*  CRTIME(21.27.33) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RUS1679 TO RECEIVE ADM MESSAGES IN BGRAM FORMAT') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(50000) +
   MAXMSGL(12000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(ENABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.ADM_CITI_RSP_O') +
   ACCTQ(QMGR) +
*  ALTDATE(2013-09-20) +
*  ALTTIME(02.30.11) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2013-09-20) +
*  CRTIME(02.30.11) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RWH1703 HOLDS CITI OUTBOUND ADM FILE RESPONSE') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ('UNIX.INITQ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(12000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   TRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS('BMC.BMC.ADM_CITI_RSP_O.PROCESS') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA('+00:01:00') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.ADM_DEF_RSP_O') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-07-15) +
*  ALTTIME(04.30.44) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-07-15) +
*  CRTIME(04.30.44) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RJX1798 ADM DEFAULT QUEUE') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(50000) +
   MAXMSGL(12000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.ADM_PIMCO_RSP_O') +
   ACCTQ(QMGR) +
*  ALTDATE(2013-09-13) +
*  ALTTIME(12.21.17) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2013-09-13) +
*  CRTIME(12.21.17) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RGD1641 HOLDS PIMCO OUTBOUND ADM FILE RESPONSE') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ('UNIX.INITQ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(12000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   TRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(1) +
   PROCESS('JOB_ADM_PIMCO_RSP') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA('+00:01:00') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.ADM_RSP_BGM_M') +
   ACCTQ(QMGR) +
*  ALTDATE(2013-02-26) +
*  ALTTIME(21.27.33) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2013-02-26) +
*  CRTIME(21.27.33) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RUS1679 ADM RESPONSES TO BGRAM FORMAT.') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(50000) +
   MAXMSGL(12000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(1) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.ADM_RSP_SWF_M') +
   ACCTQ(QMGR) +
*  ALTDATE(2013-02-26) +
*  ALTTIME(21.27.33) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2013-02-26) +
*  CRTIME(21.27.33) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RUS1679 ADM RESPONSES TO SWIFT FORMAT.') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(50000) +
   MAXMSGL(12000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(ENABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.ADM_RSP_X') +
   ACCTQ(QMGR) +
*  ALTDATE(2013-10-30) +
*  ALTTIME(06.20.12) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2013-10-30) +
*  CRTIME(06.20.12) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RYB1679 REJECT QUEUE FOR ADM RESPONSES.') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(12000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(ENABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.ADM_SWF_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2013-02-26) +
*  ALTTIME(21.27.33) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2013-02-26) +
*  CRTIME(21.27.33) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RUS1679 TO RECEIVE ADM MESSAGES IN SWIFT FORMAT') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(50000) +
   MAXMSGL(12000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(ENABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.ALL_CLM_CMS_B') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-07-21) +
*  ALTTIME(06.03.33) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-07-21) +
*  CRTIME(06.03.33) +
*  CURDEPTH(1500) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RJI1794 BACK OUT QUEUE') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(1500) +
   MAXMSGL(120000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(1) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.ALL_GRAM_INS_I_P1') +
   ACCTQ(QMGR) +
*  ALTDATE(2012-09-02) +
*  ALTTIME(22.08.14) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2012-09-02) +
*  CRTIME(22.08.14) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RIY1593 QUEUE TO RECEIVE GRAMS FROM GSCX GRAM LOG') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(50000) +
   MAXMSGL(12000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(1) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.ALL_GRAM_INS_I_P2') +
   ACCTQ(QMGR) +
*  ALTDATE(2012-09-02) +
*  ALTTIME(22.08.14) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2012-09-02) +
*  CRTIME(22.08.14) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RIY1593 QUEUE TO RECEIVE GRAM MESSAGES FROM GRAM LOG') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(50000) +
   MAXMSGL(12000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.BDC_CASH_ACK_M') +
   ACCTQ(QMGR) +
*  ALTDATE(2013-12-02) +
*  ALTTIME(01.14.56) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2013-12-02) +
*  CRTIME(01.14.56) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RRC1692 BDC CASH ACK INT QUEUE') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(12000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.BDC_CASH_CONF_M') +
   ACCTQ(QMGR) +
*  ALTDATE(2013-12-02) +
*  ALTTIME(01.14.56) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2013-12-02) +
*  CRTIME(01.14.56) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RRC1692 BDC CASH CONF INT QUEUE') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(12000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.BDC_CASH_IN_M') +
   ACCTQ(QMGR) +
*  ALTDATE(2013-12-02) +
*  ALTTIME(01.14.56) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2013-12-02) +
*  CRTIME(01.14.56) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RRC1692 BDC CASH IN INT QUEUE') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(12000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.BDC_DEF_CCONF_O') +
   ACCTQ(QMGR) +
*  ALTDATE(2013-12-02) +
*  ALTTIME(01.14.57) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2013-12-02) +
*  CRTIME(01.14.57) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RRC1692 BDC CASH CONF DEF QUEUE') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(12000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.BDC_DEF_RSP_O') +
   ACCTQ(QMGR) +
*  ALTDATE(2012-10-11) +
*  ALTTIME(00.18.26) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2012-10-11) +
*  CRTIME(00.18.26) +
*  CURDEPTH(41927) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RSF1781 DEFAULT QUEUE FOR RESPONSE MESSAGES TO CLIENT') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(50000) +
   MAXMSGL(12000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.BDC_FTSACK_M') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-02-10) +
*  ALTTIME(21.40.54) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-02-10) +
*  CRTIME(21.40.54) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RLH1753 FTSACK INTERMEDIATE QUEUE') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(10000) +
   MAXMSGL(12000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(1) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.BDC_FTSIN_M') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-02-10) +
*  ALTTIME(21.40.54) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-02-10) +
*  CRTIME(21.40.54) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RLH1753 FTS IN INTERMEDIATE QUEUE') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(10000) +
   MAXMSGL(12000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(1) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.BDC_FTSOUT_M') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-02-10) +
*  ALTTIME(21.40.54) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-02-10) +
*  CRTIME(21.40.54) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RLH1753 FTS OUT INTERMEDIATE QUEUE') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(10000) +
   MAXMSGL(12000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(1) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.BGM_CASH_ACK_M') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-05-07) +
*  ALTTIME(03.35.51) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-05-07) +
*  CRTIME(03.35.51) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('ROZ1798 BNYGRAM CASH ACK INTERMEDIATE QUEUE') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(12000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.BGM_CASH_CONF_M') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-05-07) +
*  ALTTIME(03.35.51) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-05-07) +
*  CRTIME(03.35.51) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('ROZ1798 BNYGRAM CASH CONF INTERMEDIATE QUEUE') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(12000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.BGM_CASH_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-05-07) +
*  ALTTIME(03.35.51) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-05-07) +
*  CRTIME(03.35.51) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('ROZ1798 BNYGRAM CASH INSTRUCTIONSINPUT QUEUE') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.BNYM_ATB_RSH_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.44) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(14.12.44) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RYN1413 THIS QUEUE IS TO REFRESH ACCOUNT TABLE.') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(16) +
   MAXMSGL(1000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(ENABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.BNYM_ATB_RSH_O') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.44) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(14.12.44) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RYN1413 THIS QUEUE IS TO REFRESH ACCOUNT TABLE.') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(16) +
   MAXMSGL(1000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(ENABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.BNYM_BDC_ACK_M') +
   ACCTQ(QMGR) +
*  ALTDATE(2012-10-07) +
*  ALTTIME(22.18.21) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2012-08-15) +
*  CRTIME(22.05.58) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RGR1701 INTERMEIDIATE QUEUE FOR ACKNOWLEDGEMENTS') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(50000) +
   MAXMSGL(12000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.BNYM_BDC_ACK_O') +
   ACCTQ(QMGR) +
*  ALTDATE(2012-10-11) +
*  ALTTIME(00.19.35) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2012-10-11) +
*  CRTIME(00.19.35) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RCL1660 DEFAULT ACK QUEUE FOR BDC') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(50000) +
   MAXMSGL(12000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(OK) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.BNYM_BDC_ALL_R') +
   ACCTQ(QMGR) +
*  ALTDATE(2012-10-07) +
*  ALTTIME(22.18.21) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2012-08-15) +
*  CRTIME(22.05.58) +
*  CURDEPTH(1357) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RGR1701 REJECT QUEUE FOR BDC') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(50000) +
   MAXMSGL(12000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(OK) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.BNYM_BDC_ALL_S') +
   ACCTQ(QMGR) +
*  ALTDATE(2012-11-29) +
*  ALTTIME(21.32.58) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2012-11-29) +
*  CRTIME(21.32.58) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RFI1762 SAVE STORE QUEUE FOR BDC') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(50000) +
   MAXMSGL(12000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.BNYM_BDC_ALL_X') +
   ACCTQ(QMGR) +
*  ALTDATE(2012-10-07) +
*  ALTTIME(22.18.21) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2012-08-15) +
*  CRTIME(22.05.58) +
*  CURDEPTH(547) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RGR1701 SCRAP QUEUE FOR BDC') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(4) +
   MAXDEPTH(50000) +
   MAXMSGL(12000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(4) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.BNYM_BDC_BLKFILE_M') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-09-16) +
*  ALTTIME(12.44.32) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2012-08-15) +
*  CRTIME(22.05.58) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RGR1701 INTERMEDIATE QUEUE FOR BULKFILE MESSAGES') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(50000) +
   MAXMSGL(12000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(2) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.BNYM_BDC_BNYCONF_M') +
   ACCTQ(QMGR) +
*  ALTDATE(2012-10-07) +
*  ALTTIME(22.18.21) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2012-08-15) +
*  CRTIME(22.05.58) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RGR1701 INTERMEDIATE QUEUE FOR CONFIRMATIONS') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(50000) +
   MAXMSGL(12000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.BNYM_BDC_BVAL_M') +
   ACCTQ(QMGR) +
*  ALTDATE(2012-10-07) +
*  ALTTIME(22.18.21) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2012-08-15) +
*  CRTIME(22.05.58) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RGR1701 INTERMEIDATE QUEUE FOR BVAL MESSAGES') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(50000) +
   MAXMSGL(12000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.BNYM_BDC_ERR_E') +
   ACCTQ(QMGR) +
*  ALTDATE(2012-10-18) +
*  ALTTIME(20.06.13) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2012-10-18) +
*  CRTIME(20.06.13) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RED1604 ERROR QUEUE FOR BDC FLOWS') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(10000) +
   MAXMSGL(12000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.BNYM_BDC_GRAM_M') +
   ACCTQ(QMGR) +
*  ALTDATE(2012-10-07) +
*  ALTTIME(22.18.21) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2012-08-15) +
*  CRTIME(22.05.58) +
*  CURDEPTH(124) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RGR1701 INTERMEIDATE QUEUE FOR GRAM MESSAGES') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(50000) +
   MAXMSGL(12000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(1) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.BNYM_BDC_STIFIN_M') +
   ACCTQ(QMGR) +
*  ALTDATE(2012-10-07) +
*  ALTTIME(22.18.21) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2012-08-15) +
*  CRTIME(22.05.58) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RGR1701 INTERMEDIATE QUEUE FOR STIFIN MESSAGES') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(50000) +
   MAXMSGL(12000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.BNYM_BDC_STIFOUT_M') +
   ACCTQ(QMGR) +
*  ALTDATE(2012-10-07) +
*  ALTTIME(22.18.21) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2012-08-15) +
*  CRTIME(22.05.58) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RGR1701 INTERMEIDATE QUEUE FOR STIFOUT MESSAGES') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(50000) +
   MAXMSGL(12000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.BNYM_BDS_ALL_B') +
   ACCTQ(QMGR) +
*  ALTDATE(2013-12-19) +
*  ALTTIME(03.05.13) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2011-08-19) +
*  CRTIME(12.22.25) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RJL1599 SCRAP QUEUE FOR SAVE STORE QUEUE.') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(50000) +
   MAXMSGL(25000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(ENABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.BNYM_BDS_ALL_S') +
   ACCTQ(QMGR) +
*  ALTDATE(2013-12-19) +
*  ALTTIME(03.05.13) +
   BOQNAME('MQABNY.MQABNY.BMC.BMC.BNYM_BDS_ALL_X') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(14.12.44) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RYN1413 THIS QUEUE IS TO SAVE THE MESSAGES') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(75000) +
   MAXMSGL(25000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(45) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.BNYM_BDS_ALL_X') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-01-27) +
*  ALTTIME(14.13.08) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-05-19) +
*  CRTIME(11.06.12) +
*  CURDEPTH(218) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RYN1413 THIS QUEUE IS TO SAVE THE MESSAGES') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(75000) +
   MAXMSGL(25000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(6) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(OK) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.BNYM_BDS_ERR_E') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.44) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(14.12.44) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RYN1413 THIS QUEUE IS TO RECEIVE ERROR MESSAGES') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(24) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.BNYM_BDS_SCRAP') +
   ACCTQ(QMGR) +
*  ALTDATE(2012-01-23) +
*  ALTTIME(21.41.43) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2012-01-23) +
*  CRTIME(21.41.43) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RUS1582 THIS QUEUE IS TO RECEIVE SCRAP MESSAGES.') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(ENABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.BNYM_BE1_RSP_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-03-24) +
*  ALTTIME(13.55.55) +
   BOQNAME('MQABNY.MQABNY.BMC.BMC.BNYM_GSC_RSP_X') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-05) +
*  CRTIME(11.13.04) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RYN1413 THIS QUEUE IS TO RECEIVE CONFIRAMTION MESSAGES') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(50000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(4) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.BNYM_BE2_RSP_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-03-24) +
*  ALTTIME(13.55.42) +
   BOQNAME('MQABNY.MQABNY.BMC.BMC.BNYM_GSC_RSP_X') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-05) +
*  CRTIME(11.13.15) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RYN1413 THIS QUEUE IS TO RECEIVE CONFIRAMTION MESSAGES') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(50000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(4) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.BNYM_CMS_ACK_M') +
   ACCTQ(QMGR) +
*  ALTDATE(2013-02-26) +
*  ALTTIME(21.27.11) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2013-02-26) +
*  CRTIME(21.27.11) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RYP1660 ACK IMTERMDIATE QUEUE FOR CMS') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(8000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.BNYM_CMS_CONF_M') +
   ACCTQ(QMGR) +
*  ALTDATE(2013-02-26) +
*  ALTTIME(21.27.11) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2013-02-26) +
*  CRTIME(21.27.11) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RYP1660 CONFIRM INTERMEDIATE QUEUE FOR CMS') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(12000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.BNYM_CTB_RSH_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.44) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(14.12.44) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RYN1413 THIS QUEUE IS TO REFRESH CONFIRM ROUTE TABLE.') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(7) +
   MAXDEPTH(16) +
   MAXMSGL(1000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(ENABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.BNYM_CTB_RSH_O') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.44) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(14.12.44) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RYN1413 THIS QUEUE IS TO REFRESH CONFIRM ROUTE TABLE.') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(16) +
   MAXMSGL(1000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(ENABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.BNYM_GSC_RSP_B') +
   ACCTQ(QMGR) +
*  ALTDATE(2011-08-19) +
*  ALTTIME(12.22.25) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2011-08-19) +
*  CRTIME(12.22.25) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RJL1599 SCRAP QUEUE FOR SAVE STORE QUEUE.') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(50000) +
   MAXMSGL(5000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(ENABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.BNYM_GSC_RSP_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.44) +
   BOQNAME('MQABNY.MQABNY.BMC.BMC.BNYM_GSC_RSP_X') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(14.12.44) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RYN1413 THIS QUEUE IS TO RECEIVE CONFIRAMTION MESSAGES') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.BNYM_GSC_RSP_X') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.44) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(14.12.44) +
*  CURDEPTH(183) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RYN1413 BACK OUT QUEUE FOR CONFIRMS.') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(50000) +
   MAXMSGL(10000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(1) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.BNYM_IMX2_ACK_M') +
   ACCTQ(QMGR) +
*  ALTDATE(2013-02-26) +
*  ALTTIME(21.27.11) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2013-02-26) +
*  CRTIME(21.27.11) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RYP1660 INTERMEDIATE QUEUE FOR IMX2 ACK MESSAGES') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(8000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.BNYM_IMX2_CONF_M') +
   ACCTQ(QMGR) +
*  ALTDATE(2012-05-09) +
*  ALTTIME(21.57.42) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2012-05-09) +
*  CRTIME(21.57.42) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RFJ1590 INTERMEDIATE QUEUE FOR IMX2 CONFIRM MESSAGES') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(25000) +
   MAXMSGL(12288) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.CASH_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-08-11) +
*  ALTTIME(23.50.55) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-08-11) +
*  CRTIME(23.50.55) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RJS1724 BDC CASH INP QUEUE') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(12000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.CMI_ACK_M') +
   ACCTQ(QMGR) +
*  ALTDATE(2013-05-15) +
*  ALTTIME(12.14.42) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2013-05-15) +
*  CRTIME(12.14.42) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RAX1386 THIS IS A SPARE QUEUE') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(12000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.CMS_ACK_M') +
   ACCTQ(QMGR) +
*  ALTDATE(2013-05-14) +
*  ALTTIME(04.11.36) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2013-05-14) +
*  CRTIME(04.11.36) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RQF1640 INTERMEDIATE QUEUE FOR CMS ACK MESSAGES') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(12000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.CMS_CONF_M') +
   ACCTQ(QMGR) +
*  ALTDATE(2013-05-14) +
*  ALTTIME(04.11.36) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2013-05-14) +
*  CRTIME(04.11.36) +
*  CURDEPTH(3593) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RQF1640 INTERMEDIATE QUEUE FOR CMS CONF MESSAGES') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(12000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.DMS_I_SCRAP') +
   ACCTQ(QMGR) +
*  ALTDATE(2013-09-09) +
*  ALTTIME(03.21.54) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2013-09-09) +
*  CRTIME(03.21.54) +
*  CURDEPTH(37) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RWW1788 LOCAL QUE FOR SCRAP ADM DMS REC') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(50000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.FNF_566_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-03-17) +
*  ALTTIME(05.14.34) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-03-17) +
*  CRTIME(05.14.34) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RYE1730 RECEIVING SWIFT PP MESSAGES') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(50000) +
   MAXMSGL(15000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.GSCX_DEF_RSP_O') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-09-05) +
*  ALTTIME(18.03.43) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(14.12.44) +
*  CURDEPTH(815) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RYN1413 THIS QUEUE IS TO HOLD MESSAGES WITHOUT ANY ROUTE') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(20000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(3) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(OK) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.GTM_SWF_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2012-03-29) +
*  ALTTIME(13.31.02) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2012-03-27) +
*  CRTIME(22.07.53) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RPG1649 THIS IS FOR GTM TO SEND MESSAGES TO BMC.') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(50000) +
   MAXMSGL(30000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.ICIQA_ACK_M') +
   ACCTQ(QMGR) +
*  ALTDATE(2013-05-13) +
*  ALTTIME(13.00.35) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2013-05-02) +
*  CRTIME(15.09.35) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RAX1386 THIS IS A SPARE QUEUE') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(12000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.IMX2_ACK_M') +
   ACCTQ(QMGR) +
*  ALTDATE(2013-05-14) +
*  ALTTIME(04.11.36) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2013-05-14) +
*  CRTIME(04.11.36) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RQF1640 INTERMEDIATE QUEUE FOR IMX2 ACK MESSAGES') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(10000) +
   MAXMSGL(8000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(1) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.IMX2_CONF_M') +
   ACCTQ(QMGR) +
*  ALTDATE(2013-05-14) +
*  ALTTIME(04.11.36) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2013-05-14) +
*  CRTIME(04.11.36) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RQF1640 INTERMEDIATE QUEUE FOR IMX2 CONFIRMATIONS') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(10000) +
   MAXMSGL(12000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(1) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.MSGRTR_BDS_M') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-07-10) +
*  ALTTIME(13.47.21) +
   BOQNAME('MQABNY.MQABNY.BMC.BMC.BNYM_BDC_ALL_X') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-04-21) +
*  CRTIME(07.21.48) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RHL1690 RECEIVING MSGRTR MESSAGES') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(50000) +
   MAXMSGL(15000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.MX_CASH_DEFRSP_O') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-10-09) +
*  ALTTIME(01.48.33) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-10-09) +
*  CRTIME(01.48.33) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RXX1803 BDC MX CASH DEFAULT QUEUE') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(5000) +
   MAXMSGL(12000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.QMON_CMD_RSP_M') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.44) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(14.12.44) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RWL1448 THIS QUEUE IS TO COMMAND RESPONSES BY QMON.') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(1000) +
   MAXMSGL(4000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.QMON_RPT_ALM_M') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.44) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(14.12.44) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RWL1448 THIS QUEUE IS TO REPORT ALARM BY QMON.') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(1000) +
   MAXMSGL(4000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(ENABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.QMON_RPT_STS_M') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.44) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(14.12.44) +
*  CURDEPTH(1) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RWL1448 THIS QUEUE TO REPORT STATUS BY QMON.') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(16) +
   MAXMSGL(1000000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.SSB_ACK_M') +
   ACCTQ(QMGR) +
*  ALTDATE(2013-07-15) +
*  ALTTIME(03.41.49) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2013-07-15) +
*  CRTIME(03.41.49) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RMQ1656 INTER.QUEUE FOR SSB ACK/NAK.') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(50000) +
   MAXMSGL(12000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(1) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.SSB_CONF_M') +
   ACCTQ(QMGR) +
*  ALTDATE(2013-07-15) +
*  ALTTIME(03.41.49) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2013-07-15) +
*  CRTIME(03.41.49) +
*  CURDEPTH(6893) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RMQ1656 INTER.QUEUE FOR SSB CONFIRMS') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(50000) +
   MAXMSGL(12000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(ENABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.SWFNET_ACK_M') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-03-25) +
*  ALTTIME(07.40.40) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-03-25) +
*  CRTIME(07.40.40) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RHG1770 SWIFT NET ACK QUEUE') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(10000) +
   MAXMSGL(4000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.SWFNET_CONF_M') +
   ACCTQ(QMGR) +
*  ALTDATE(2013-05-14) +
*  ALTTIME(04.11.36) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2013-05-14) +
*  CRTIME(04.11.36) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RQF1640 INTERMEDIATE QUEUE FOR SWFNET CONF MESSAGES') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(10000) +
   MAXMSGL(12000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.SWFNET_FED_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-03-17) +
*  ALTTIME(05.14.34) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-03-17) +
*  CRTIME(05.14.34) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RYE1730 RECEIVING SWIFT FED MESSAGES') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(50000) +
   MAXMSGL(15000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.SWFPP_ACK_M') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-03-25) +
*  ALTTIME(07.40.40) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-03-25) +
*  CRTIME(07.40.40) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RHG1770 SWIFT PP ACK QUEUE') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(10000) +
   MAXMSGL(4000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(1) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.SWFPP_CONF_M') +
   ACCTQ(QMGR) +
*  ALTDATE(2013-05-14) +
*  ALTTIME(04.11.36) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2013-05-14) +
*  CRTIME(04.11.36) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RQF1640 INTERMEDIATE QUEUE FOR SWFPP CONF MESSAGES') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(10000) +
   MAXMSGL(12000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.SWFPP_FED_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-03-17) +
*  ALTTIME(05.14.34) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-03-17) +
*  CRTIME(05.14.34) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RYE1730 SENDING FED MESSAGES') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(50000) +
   MAXMSGL(15000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.SWFPP_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-07-10) +
*  ALTTIME(13.47.58) +
   BOQNAME('MQABNY.MQABNY.BMC.BMC.BNYM_BDC_ALL_X') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-03-17) +
*  CRTIME(05.14.34) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RYE1730 RECEIVING SWIFT PP MESSAGES') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(50000) +
   MAXMSGL(15000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.SWF_ACK_M') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-03-25) +
*  ALTTIME(07.40.40) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-03-25) +
*  CRTIME(07.40.40) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RHG1770 SWIFT ACK QUEUE') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(4000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.SWF_ADM_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-03-17) +
*  ALTTIME(05.14.34) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-03-17) +
*  CRTIME(05.14.34) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RYE1730 SENDING ADM MESSAGES') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(50000) +
   MAXMSGL(15000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.SWF_CASH_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-03-17) +
*  ALTTIME(05.14.34) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-03-17) +
*  CRTIME(05.14.34) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RYE1730 SWIFT MESSAGES') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(50000) +
   MAXMSGL(15000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.SWF_DTC_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-03-17) +
*  ALTTIME(05.14.34) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-03-17) +
*  CRTIME(05.14.34) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RYE1730 SENDING DTC MESSAGES') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(50000) +
   MAXMSGL(15000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.SWIFTNET_BDS_M') +
   ACCTQ(QMGR) +
*  ALTDATE(2013-09-16) +
*  ALTTIME(01.17.33) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2013-09-16) +
*  CRTIME(01.17.33) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RIE1610 INTERMEDIATE QUEUE FOR SWIFT MESSAGES GOING TO FNI') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(50000) +
   MAXMSGL(12000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.SWIFTNET_BDS_X') +
   ACCTQ(QMGR) +
*  ALTDATE(2013-11-19) +
*  ALTTIME(06.46.28) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2013-11-19) +
*  CRTIME(06.46.28) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RVW1711 THIS IS A SCRAP QUEUE FOR MESSAGES NOT GOING TO FNI') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(50000) +
   MAXMSGL(15000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.SWIFTNET_NAK_M') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-10-28) +
*  ALTTIME(00.33.08) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-10-28) +
*  CRTIME(00.33.08) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RLE1750 SENDING FENAK AND NAK MESSAGES') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(50000) +
   MAXMSGL(15000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.TEMP_APP_SP1_M') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.44) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(14.12.44) +
*  CURDEPTH(2) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RAX1386 THIS IS A SPARE QUEUE') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.TEMP_APP_SP2_M') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-01-17) +
*  ALTTIME(17.14.49) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(14.12.44) +
*  CURDEPTH(1) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RAX1386 THIS IS A SPARE QUEUE') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(50000) +
   MAXMSGL(30000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(DISABLED) +
   QDPLOEV(ENABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.TEMP_APP_SP3_M') +
   ACCTQ(QMGR) +
*  ALTDATE(2011-11-21) +
*  ALTTIME(15.29.18) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(14.12.44) +
*  CURDEPTH(3131) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RAX1386 THIS IS A SPARE QUEUE') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(1000000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.TEMP_APP_SP4_M') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.44) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(14.12.44) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RAX1386 THIS IS A SPARE QUEUE') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(DISABLED) +
   QDPLOEV(ENABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.TEMP_APP_SP5_M') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.44) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(14.12.44) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RAX1386 THIS IS A SPARE QUEUE') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(OK) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.TEMP_APP_SP6_M') +
   ACCTQ(QMGR) +
*  ALTDATE(2011-12-09) +
*  ALTTIME(11.28.58) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2011-12-09) +
*  CRTIME(11.28.58) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RAX1386 THIS IS A SPARE QUEUE') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.BMC.TEMP_APP_SP7_M') +
   ACCTQ(QMGR) +
*  ALTDATE(2013-07-30) +
*  ALTTIME(16.54.13) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2011-12-09) +
*  CRTIME(11.29.08) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RAX1386 THIS IS A SPARE QUEUE') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(5000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(DISABLED) +
   QDPLOEV(ENABLED) +
   QDPMAXEV(DISABLED) +
   QSVCIEV(OK) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.BMC.GSC.FTSIN_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-02-13) +
*  ALTTIME(02.32.03) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-02-13) +
*  CRTIME(02.32.03) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RJB1668 FTS INCOMING QUEUE FROM GSC') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(8000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.GSC.BDC.BDCNOTIF_O') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-04-17) +
*  ALTTIME(09.02.53) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-04-17) +
*  CRTIME(09.02.53) +
*  CURDEPTH(251) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RVP1727 BDC TO GSC ASSET SERVICE NOTIFICATION QUEUE') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(1000) +
   MAXMSGL(1024) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.GSC.BDC.BDCRPT_O') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-04-17) +
*  ALTTIME(09.02.53) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-04-17) +
*  CRTIME(09.02.53) +
*  CURDEPTH(2) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RVP1727 BDC TO GSC POST REPORT OUTBOUND QUEUE') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(1000) +
   MAXMSGL(10240) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.GSC.BMC.BDC_FTSIN_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-02-13) +
*  ALTTIME(02.13.04) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-02-13) +
*  CRTIME(02.13.04) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RCQ1747 FTSINTERNAL QUEUE TO GSC') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(8000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.GSC.BMC.BDC_FTSIN_R') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-02-13) +
*  ALTTIME(02.13.04) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-02-13) +
*  CRTIME(02.13.04) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RCQ1747 FTSRJT QUEUE TO GSC') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(8000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.GSC.BMC.BDC_FTSOUT_O') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-02-13) +
*  ALTTIME(02.13.04) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-02-13) +
*  CRTIME(02.13.04) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RCQ1747 FTSOUT QUEUE TO GSC') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(8000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.KMS.BMC.ALL_KMS_CMS_O') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-07-21) +
*  ALTTIME(06.06.42) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-07-21) +
*  CRTIME(06.06.42) +
*  CURDEPTH(2484) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RPK1735 REPO TO KMS OUTBOUND QUEUE') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(5000) +
   MAXMSGL(120000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.KMS.BMC.CLM_CMS_DEF_O') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-07-21) +
*  ALTTIME(06.06.44) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-07-21) +
*  CRTIME(06.06.44) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RPK1735 DEFAULT QUEUE FOR CLM KMS') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(1000) +
   MAXMSGL(120000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.PRA.BMC.PRA4_INS_O') +
   ACCTQ(QMGR) +
*  ALTDATE(2013-10-08) +
*  ALTTIME(05.41.16) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2013-10-08) +
*  CRTIME(05.41.16) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RNR1638 QNAME=PRA.BMC.PRA4_INS_O') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(12000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.SSE.BMC.BDCT_SEC_O') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-01-29) +
*  ALTTIME(22.45.45) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-01-29) +
*  CRTIME(22.45.45) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RGS1708 SSE BROADCAST OUTBOUND QUEUE') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(50000) +
   MAXMSGL(12000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.SSE.SSE.BDCT_SEC_X') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-01-29) +
*  ALTTIME(01.14.25) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-01-29) +
*  CRTIME(01.14.25) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RKE1694 SSE BROADCAST ERROR QUEUE') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(50000) +
   MAXMSGL(12000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.XLM.BMC.KMS_XLM_CMS_O') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-07-24) +
*  ALTTIME(00.02.13) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-07-24) +
*  CRTIME(00.02.13) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RNG1728 BMC OUTBOUND QUEUE FOR XLM FROM BMC') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(10000) +
   MAXMSGL(1200) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.XLM.BMC.RE1_XLM_O') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-07-24) +
*  ALTTIME(00.02.13) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-07-24) +
*  CRTIME(00.02.13) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RNG1728 BMC OUTBOUND QUEUE FOR XLM FROM RPO') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(1000) +
   MAXMSGL(120000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.XLM.BMC.RE2_XLM_O') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-07-24) +
*  ALTTIME(00.02.13) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-07-24) +
*  CRTIME(00.02.13) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RNG1728 BMC OUTBOUND QUEUE FOR XLM FROM RPO') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(1000) +
   MAXMSGL(120000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.XLM.BMC.RE3_XLM_O') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-07-24) +
*  ALTTIME(00.02.13) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-07-24) +
*  CRTIME(00.02.13) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RNG1728 BMC OUTBOUND QUEUE FOR XLM FROM RPO') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(6) +
   MAXDEPTH(1000) +
   MAXMSGL(120000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(1) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQABNY.MQABNY.XLM.BMC.RE4_XLM_O') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-07-24) +
*  ALTTIME(00.02.13) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-07-24) +
*  CRTIME(00.02.13) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RNG1728 BMC OUTBOUND QUEUE FOR XLM FROM RPO') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(1000) +
   MAXMSGL(120000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(1) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDADP.IMP.BMC.ACC_ACK_O') +
*  ALTDATE(2010-04-21) +
*  ALTTIME(15.10.30) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RVT1400 GSCX ACK/NAK TO US CLEARING - ADP / ICI') +
   PUT(ENABLED) +
   RQMNAME('ADPSYS0AB') +
   RNAME('BNY_TO_ACC_ACKNAK') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS0AB_1') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDADP.IMP.BMC.ACC_RSP_O') +
*  ALTDATE(2010-04-21) +
*  ALTTIME(15.10.53) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RVT1400 GSCX CONFIRMS TO US CLEARING - ADP / ICI') +
   PUT(ENABLED) +
   RQMNAME('ADPSYS0AB') +
   RNAME('BNY_TO_ACC_RECV') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS0AB_1') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDADP.IMP.BMC.AMH_ACK_O') +
*  ALTDATE(2010-09-08) +
*  ALTTIME(05.13.36) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RCL1484 GSCX ACK/NACK TO ADP/AMHERST') +
   PUT(ENABLED) +
   RQMNAME('I5ISYS0C') +
   RNAME('BNY_TO_AMH_ACKNAK') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS0C_1') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDADP.IMP.BMC.AMH_RSP_O') +
*  ALTDATE(2010-09-08) +
*  ALTTIME(05.13.36) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RCL1484 GSCX CONFIRMS TO ADP/AMHERST') +
   PUT(ENABLED) +
   RQMNAME('I5ISYS0C') +
   RNAME('BNY_TO_AMH_RECV') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS0C_1') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDADP.IMP.BMC.BAS_ACK_O') +
*  ALTDATE(2010-04-21) +
*  ALTTIME(11.32.19) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RVT1400 GSCX ACK/NAK TO BOA- ADP / ICI') +
   PUT(ENABLED) +
   RQMNAME('ADPSYS0B') +
   RNAME('BNY_TO_BAS_ACKNAK') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS0B_1') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDADP.IMP.BMC.BAS_RSP_O') +
*  ALTDATE(2010-04-21) +
*  ALTTIME(11.31.58) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RVT1400 GSCX CONFIRMS TO BOA- ADP / ICI') +
   PUT(ENABLED) +
   RQMNAME('ADPSYS0B') +
   RNAME('BNY_TO_BAS_RECV') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS0B_1') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDADP.IMP.BMC.BMO_ACK_O') +
*  ALTDATE(2010-04-21) +
*  ALTTIME(14.28.02) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RVT1400 GSCX ACK/NAK TO BANK OF MONTREAL- ADP / ICI') +
   PUT(ENABLED) +
   RQMNAME('ADPSYS1') +
   RNAME('BNY_TO_BMO_ACKNAK') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS1_2') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDADP.IMP.BMC.BMO_RSP_O') +
*  ALTDATE(2010-04-21) +
*  ALTTIME(14.35.08) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RVT1400 GSCX CONFIRMS TO BANK OH MONTREAL - ADP / ICI') +
   PUT(ENABLED) +
   RQMNAME('ADPSYS1') +
   RNAME('BNY_TO_BMO_RECV') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS1_2') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDADP.IMP.BMC.BNK_ACK_O') +
*  ALTDATE(2010-04-21) +
*  ALTTIME(11.31.44) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RVT1400 GSCX ACK/NAK TO BOA- ADP / ICI') +
   PUT(ENABLED) +
   RQMNAME('ADPSYS0B') +
   RNAME('BNY_TO_BNK_ACKNAK') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS0B_1') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDADP.IMP.BMC.BNK_RSP_O') +
*  ALTDATE(2010-04-21) +
*  ALTTIME(11.31.33) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RVT1400 GSCX CONFIRMS TO BOA- ADP / ICI') +
   PUT(ENABLED) +
   RQMNAME('ADPSYS0B') +
   RNAME('BNY_TO_BNK_RECV') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS0B_1') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDADP.IMP.BMC.BNP_ACK_O') +
*  ALTDATE(2013-07-15) +
*  ALTTIME(03.56.33) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RIM1747 BROADRIDGE BNP ACK') +
   PUT(ENABLED) +
   RQMNAME('I5ISYS0C') +
   RNAME('BNY_TO_BNP_ACKNAK') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS0C_1') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDADP.IMP.BMC.BNP_RSP_O') +
*  ALTDATE(2013-07-15) +
*  ALTTIME(03.56.33) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RIM1747 BROADRIDGE BNP RSP') +
   PUT(ENABLED) +
   RQMNAME('I5ISYS0C') +
   RNAME('BNY_TO_BNP_RECV') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS0C_1') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDADP.IMP.BMC.BZW_ACK_O') +
*  ALTDATE(2010-04-21) +
*  ALTTIME(17.18.06) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RVT1400 GSCX ACK/NAK TO BARCLAYS - ADP / ICI') +
   PUT(ENABLED) +
   RQMNAME('ADPSYS1') +
   RNAME('BNY_TO_BZW_ACKNAK') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS1_2') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDADP.IMP.BMC.BZW_RSP_O') +
*  ALTDATE(2010-04-21) +
*  ALTTIME(17.17.55) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RVT1400 GSCX CONFIRMS TO BARCLAYS - ADP / ICI') +
   PUT(ENABLED) +
   RQMNAME('ADPSYS1') +
   RNAME('BNY_TO_BZW_RECV') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS1_2') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDADP.IMP.BMC.CITI_ACK_O') +
*  ALTDATE(2011-11-11) +
*  ALTTIME(21.26.47) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RDW1397 ACK/NACK TO ADP') +
   PUT(ENABLED) +
   RQMNAME('I5ISYS0C') +
   RNAME('BNY_TO_CIT_ACKNAK') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS0C_1') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDADP.IMP.BMC.CITI_RSP_O') +
*  ALTDATE(2011-11-11) +
*  ALTTIME(21.26.47) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RDW1397 SETTLEMENT TO ADP') +
   PUT(ENABLED) +
   RQMNAME('I5ISYS0C') +
   RNAME('BNY_TO_CIT_RECV') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS0C_1') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDADP.IMP.BMC.CRT_ACK_O') +
*  ALTDATE(2010-09-24) +
*  ALTTIME(14.31.44) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RSC1435 GSCX ACK/NACK TO CRT CAPITAL') +
   PUT(ENABLED) +
   RQMNAME('I5ISYS0C') +
   RNAME('BNY_TO_CRT_ACKNAK') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS0C_1') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDADP.IMP.BMC.CRT_RSP_O') +
*  ALTDATE(2010-09-24) +
*  ALTTIME(14.31.44) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RSC1435 GSCX CONFIRMS TO CRT CAPITAL') +
   PUT(ENABLED) +
   RQMNAME('I5ISYS0C') +
   RNAME('BNY_TO_CRT_RECV') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS0C_1') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDADP.IMP.BMC.ETRD_ACK_O') +
*  ALTDATE(2011-07-15) +
*  ALTTIME(11.19.15) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('REH1553 GSCX ACK/NAK TO ETRADE.') +
   PUT(ENABLED) +
   RQMNAME('I5ISYS0C') +
   RNAME('BNY_TO_ETF_ACKNAK') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS0C_1') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDADP.IMP.BMC.ETRD_RSP_O') +
*  ALTDATE(2011-07-15) +
*  ALTTIME(11.18.58) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('REH1553 GSCX CONFIRMS TO ETRADE.') +
   PUT(ENABLED) +
   RQMNAME('I5ISYS0C') +
   RNAME('BNY_TO_ETF_RECV') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS0C_1') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDADP.IMP.BMC.FOR_ACK_O') +
*  ALTDATE(2010-03-09) +
*  ALTTIME(10.22.02) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RRU1438 GSCX ACK/NAK TO MEES PIERSON - ADP / ICI') +
   PUT(ENABLED) +
   RQMNAME('ADPSYS1') +
   RNAME('BNY_TO_FOR_ACKNAK') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS1_1') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDADP.IMP.BMC.FOR_RSP_O') +
*  ALTDATE(2010-03-09) +
*  ALTTIME(10.22.02) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RRU1438 GSCX CONFIRMS TO MEES PIERSON - ADP / ICI') +
   PUT(ENABLED) +
   RQMNAME('ADPSYS1') +
   RNAME('BNY_TO_FOR_RECV') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS1_1') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDADP.IMP.BMC.GRIF_ACK_O') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.44) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RSC1351 ACK/NAK TO ADP/BROADRIDGE') +
   PUT(ENABLED) +
   RQMNAME('ADPSYS1') +
   RNAME('BNY_TO_GKS_ACKNAK') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS1_1') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDADP.IMP.BMC.GRIF_RSP_O') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.44) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RSC1351 RESPONSES TO ADP/BROADRIDGE') +
   PUT(ENABLED) +
   RQMNAME('ADPSYS1') +
   RNAME('BNY_TO_GKS_RECV') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS1_1') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDADP.IMP.BMC.HVB_ACK_O') +
*  ALTDATE(2010-04-21) +
*  ALTTIME(10.50.11) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RVT1400 GSCX ACK/NAK  TO HYPO VERIENS- ADP / ICI') +
   PUT(ENABLED) +
   RQMNAME('ADPSYS1') +
   RNAME('BNY_TO_HVB_ACKNAK') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS1_2') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDADP.IMP.BMC.HVB_RSP_O') +
*  ALTDATE(2010-04-21) +
*  ALTTIME(10.50.19) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RVT1400 GSCX CONFIRMS TO HYPO VERIENS- ADP / ICI') +
   PUT(ENABLED) +
   RQMNAME('ADPSYS1') +
   RNAME('BNY_TO_HVB_RECV') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS1_2') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDADP.IMP.BMC.ICIQA_ACK_O') +
*  ALTDATE(2013-05-02) +
*  ALTTIME(05.35.07) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RMT1470 BROADRIDGE TEST QUEUE') +
   PUT(ENABLED) +
   RQMNAME('TEST_QM') +
   RNAME('BNY_TO_ICIQA_ACKNAK') +
   SCOPE(QMGR) +
   XMITQ('TEST_QM') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDADP.IMP.BMC.ICIQA_RSP_O') +
*  ALTDATE(2013-05-02) +
*  ALTTIME(05.35.07) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RMT1470 BROARDRIDGE TEST QUEUE') +
   PUT(ENABLED) +
   RQMNAME('TEST_QM') +
   RNAME('BNY_TO_ICIQA_RECV') +
   SCOPE(QMGR) +
   XMITQ('TEST_QM') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDADP.IMP.BMC.ING_ACK_O') +
*  ALTDATE(2010-06-14) +
*  ALTTIME(11.25.24) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RFX1436 ACK/NACK TO ADP') +
   PUT(ENABLED) +
   RQMNAME('ADPSYS0AB') +
   RNAME('BNY_TO_ING_ACKNAK') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS0AB_1') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDADP.IMP.BMC.ING_RSP_O') +
*  ALTDATE(2010-06-14) +
*  ALTTIME(11.25.24) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RFX1436 SETTLEMENT TO ADP') +
   PUT(ENABLED) +
   RQMNAME('ADPSYS0AB') +
   RNAME('BNY_TO_ING_RECV') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS0AB_1') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDADP.IMP.BMC.JEF_ACK_O') +
*  ALTDATE(2010-04-21) +
*  ALTTIME(14.34.14) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RVT1400 GSCX ACK/NAK TO JEFFERIES- ADP / ICI') +
   PUT(ENABLED) +
   RQMNAME('ADPSYS1') +
   RNAME('BNY_TO_JEF_ACKNAK') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS1_2') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDADP.IMP.BMC.JEF_RSP_O') +
*  ALTDATE(2010-04-21) +
*  ALTTIME(14.34.47) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RVT1400 GSCX CONFIRMS TO JEFFERIES - ADP / ICI') +
   PUT(ENABLED) +
   RQMNAME('ADPSYS1') +
   RNAME('BNY_TO_JEF_RECV') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS1_2') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDADP.IMP.BMC.JMC_ACK_O') +
*  ALTDATE(2010-04-21) +
*  ALTTIME(15.22.50) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RVT1400 GSCX ACK/NAK TO JP MORGAN CHASE - ADP / ICI') +
   PUT(ENABLED) +
   RQMNAME('ADPSYS0AB') +
   RNAME('BNY_TO_JMC_ACKNAK') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS0AB_1') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDADP.IMP.BMC.JMC_RSP_O') +
*  ALTDATE(2010-04-21) +
*  ALTTIME(15.23.37) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RVT1400 GSCX CONFIRMS TO JP MORGAN CHASE - ADP / ICI') +
   PUT(ENABLED) +
   RQMNAME('ADPSYS0AB') +
   RNAME('BNY_TO_JMC_RECV') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS0AB_1') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDADP.IMP.BMC.KGS_ACK_O') +
*  ALTDATE(2012-03-21) +
*  ALTTIME(21.32.06) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RFV1583 ACK/NACK TO ADP') +
   PUT(ENABLED) +
   RQMNAME('I5ISYS0C') +
   RNAME('BNY_TO_KGS_ACKNAK') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS0C_1') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDADP.IMP.BMC.KGS_RSP_O') +
*  ALTDATE(2012-03-21) +
*  ALTTIME(21.32.06) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RFV1583 CONFIRMS TO ADP') +
   PUT(ENABLED) +
   RQMNAME('I5ISYS0C') +
   RNAME('BNY_TO_KGS_RECV') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS0C_1') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDADP.IMP.BMC.LBBW_ACK_O') +
*  ALTDATE(2010-04-21) +
*  ALTTIME(16.11.20) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RVT1400 GSCX ACK/NAK TO LANDS BANK- ADP / ICI') +
   PUT(ENABLED) +
   RQMNAME('ADPSYS1') +
   RNAME('BNY_TO_LBB_ACKNAK') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS1_2') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDADP.IMP.BMC.LBBW_RSP_O') +
*  ALTDATE(2010-04-21) +
*  ALTTIME(16.11.30) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RVT1400 GSCX CONFIRMS TO LANDS BANK- ADP / ICI') +
   PUT(ENABLED) +
   RQMNAME('ADPSYS1') +
   RNAME('BNY_TO_LBB_RECV') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS1_2') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDADP.IMP.BMC.LEG_ACK_O') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.44) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RVT1400 GSCX ACK/NAK TO LEGG MASON - ADP / ICI') +
   PUT(ENABLED) +
   RQMNAME('ADPSYS0B') +
   RNAME('BNY_TO_LEG_ACKNAK') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS0B_ADP3') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDADP.IMP.BMC.LEG_RSP_O') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.44) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RVT1400 GSCX CONFIRMS TO LEGG MASON - ADP / ICI') +
   PUT(ENABLED) +
   RQMNAME('ADPSYS0B') +
   RNAME('BNY_TO_LEG_RECV') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS0B_ADP3') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDADP.IMP.BMC.MCD_ACK_O') +
*  ALTDATE(2010-04-20) +
*  ALTTIME(12.27.48) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RVT1400 GSCX ACK/NAK TO KEYBANK- ADP / ICI') +
   PUT(ENABLED) +
   RQMNAME('ADPSYS0B') +
   RNAME('BNY_TO_KEY_ACKNAK') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS0B_1') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDADP.IMP.BMC.MCD_RSP_O') +
*  ALTDATE(2010-04-20) +
*  ALTTIME(12.28.18) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RVT1400 GSCX CONFIRMS TO KEYBANK- ADP / ICI') +
   PUT(ENABLED) +
   RQMNAME('ADPSYS0B') +
   RNAME('BNY_TO_KEY_RECV') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS0B_1') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDADP.IMP.BMC.MZS_ACK_O') +
*  ALTDATE(2010-04-21) +
*  ALTTIME(15.03.32) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RVT1400 GSCX ACK/NAK TO MIZUHO - ADP / ICI') +
   PUT(ENABLED) +
   RQMNAME('ADPSYS0AB') +
   RNAME('BNY_TO_MZS_ACKNAK') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS0AB_1') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDADP.IMP.BMC.MZS_RSP_O') +
*  ALTDATE(2010-04-21) +
*  ALTTIME(15.03.59) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RVT1400 GSCX CONFIRMS TO MIZUHO - ADP / ICI') +
   PUT(ENABLED) +
   RQMNAME('ADPSYS0AB') +
   RNAME('BNY_TO_MZS_RECV') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS0AB_1') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDADP.IMP.BMC.NAB_ACK_O') +
*  ALTDATE(2010-04-20) +
*  ALTTIME(16.59.18) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RVT1400 GSCX ACK/NAK TO NATIONAL AUSTRALIA BANK- ADP / ICI') +
   PUT(ENABLED) +
   RQMNAME('ADPSYS1') +
   RNAME('BNY_TO_NAB_ACKNAK') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS1_1') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDADP.IMP.BMC.NAB_RSP_O') +
*  ALTDATE(2010-04-20) +
*  ALTTIME(16.59.08) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RVT1400 GSCX CONFIRMS TO NATIONAL AUSTRALIA BANK- ADP / ICI') +
   PUT(ENABLED) +
   RQMNAME('ADPSYS1') +
   RNAME('BNY_TO_NAB_RECV') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS1_1') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDADP.IMP.BMC.NOMUS_ACK_O') +
*  ALTDATE(2010-08-27) +
*  ALTTIME(14.50.52) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('REX1412 ACK/NACK TO ADP') +
   PUT(ENABLED) +
   RQMNAME('I5ISYS0C') +
   RNAME('BNY_TO_NSI_ACKNAK') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS0C_1') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDADP.IMP.BMC.NOMUS_RSP_O') +
*  ALTDATE(2010-08-27) +
*  ALTTIME(14.50.15) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('REX1412 SETTLEMENT TO ADP') +
   PUT(ENABLED) +
   RQMNAME('I5ISYS0C') +
   RNAME('BNY_TO_NSI_RECV') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS0C_1') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDADP.IMP.BMC.NSB_ACK_O') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.44) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RVT1400 GSCX ACK/NAK TO NESBIT BURNS- ADP / ICI') +
   PUT(ENABLED) +
   RQMNAME('ADPSYS1') +
   RNAME('BNY_TO_NSB_ACKNAK') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS1_ADP2') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDADP.IMP.BMC.NSB_RSP_O') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.44) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RVT1400 GSCX CONFIRMS TO NESBIT BURNS- ADP / ICI') +
   PUT(ENABLED) +
   RQMNAME('ADPSYS1') +
   RNAME('BNY_TO_NSB_RECV') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS1_ADP2') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDADP.IMP.BMC.OPNH_ACK_O') +
*  ALTDATE(2010-04-28) +
*  ALTTIME(09.39.34) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RVT1400 GSCX ACK/NAK TO OPPENHIEMER- ADP / ICI') +
   PUT(ENABLED) +
   RQMNAME('ADPSYS0B') +
   RNAME('BNY_TO_OPN_ACKNAK') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS0B_1') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDADP.IMP.BMC.OPNH_RSP_O') +
*  ALTDATE(2010-04-28) +
*  ALTTIME(09.39.22) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RVT1400 GSCX CONFIRMS TO OPPENHIEMER- ADP / ICI') +
   PUT(ENABLED) +
   RQMNAME('ADPSYS0B') +
   RNAME('BNY_TO_OPN_RECV') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS0B_1') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDADP.IMP.BMC.PJC_ACK_O') +
*  ALTDATE(2010-04-20) +
*  ALTTIME(11.00.21) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RVT1400 GSCX ACK/NAK TO OPPENHIEMER- ADP / ICI') +
   PUT(ENABLED) +
   RQMNAME('ADPSYS0B') +
   RNAME('BNY_TO_PJC_ACKNAK') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS0B_1') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDADP.IMP.BMC.PJC_RSP_O') +
*  ALTDATE(2010-04-20) +
*  ALTTIME(11.00.44) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RVT1400 GSCX CONFIRMS TO OPPENHIEMER- ADP / ICI') +
   PUT(ENABLED) +
   RQMNAME('ADPSYS0B') +
   RNAME('BNY_TO_PJC_RECV') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS0B_1') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDADP.IMP.BMC.QPE_ACK_O') +
*  ALTDATE(2012-04-16) +
*  ALTTIME(21.47.56) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RUO1688 GSCX ACK/NAK TO PIERPONT') +
   PUT(ENABLED) +
   RQMNAME('I5ISYS0C') +
   RNAME('BNY_TO_PPT_ACKNAK') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS0C_1') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDADP.IMP.BMC.QPE_RSP_O') +
*  ALTDATE(2012-04-16) +
*  ALTTIME(21.47.56) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RUO1688 GSCX CONFIRMS TO PIERPONT.') +
   PUT(ENABLED) +
   RQMNAME('I5ISYS0C') +
   RNAME('BNY_TO_PPT_RECV') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS0C_1') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDADP.IMP.BMC.RBCD_ACK_O') +
*  ALTDATE(2011-02-11) +
*  ALTTIME(17.12.17) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RVT1400 GSCX ACK/NAK TO RBCDAIN - ADP / ICI') +
   PUT(ENABLED) +
   RQMNAME('I5ISYS0C') +
   RNAME('BNY_TO_RBCD_ACKNAK') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS0C_1') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDADP.IMP.BMC.RBCD_RSP_O') +
*  ALTDATE(2011-02-11) +
*  ALTTIME(17.13.25) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RVT1400 GSCX CONFIRMS TO RBCDAIN - ADP / ICI') +
   PUT(ENABLED) +
   RQMNAME('I5ISYS0C') +
   RNAME('BNY_TO_RBCD_RECV') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS0C_1') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDADP.IMP.BMC.RBC_ACK_O') +
*  ALTDATE(2010-04-21) +
*  ALTTIME(15.00.47) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RVT1400 GSCX ACK/NAK TO RBC CAPITAL - ADP / ICI') +
   PUT(ENABLED) +
   RQMNAME('ADPSYS0AB') +
   RNAME('BNY_TO_RBC_ACKNAK') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS0AB_1') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDADP.IMP.BMC.RBC_RSP_O') +
*  ALTDATE(2010-04-21) +
*  ALTTIME(15.00.57) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RVT1400 GSCX CONFIRMS TO RBC CAPITAL - ADP / ICI') +
   PUT(ENABLED) +
   RQMNAME('ADPSYS0AB') +
   RNAME('BNY_TO_RBC_RECV') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS0AB_1') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDADP.IMP.BMC.RGE_ACK_O') +
*  ALTDATE(2010-03-08) +
*  ALTTIME(09.43.04) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RLX1402 GSCX ACK/NAK TO RIDGE CLEARING - ADP / ICI') +
   PUT(ENABLED) +
   RQMNAME('ADPSYS0AB') +
   RNAME('BNY_TO_RGE_ACKNAK') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS0AB_1') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDADP.IMP.BMC.RGE_RSP_O') +
*  ALTDATE(2010-03-08) +
*  ALTTIME(09.43.04) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RLX1402 GSCX CONFIRMS TO RIDGE CLEARING  - ADP / ICI') +
   PUT(ENABLED) +
   RQMNAME('ADPSYS0AB') +
   RNAME('BNY_TO_RGE_RECV') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS0AB_1') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDADP.IMP.BMC.SAM_ACK_O') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.44) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RVT1400 GSCX ACK/NAK TO SWISS AMERICA - ADP / ICI') +
   PUT(ENABLED) +
   RQMNAME('ADPSYS1') +
   RNAME('BNY_TO_SAM_ACKNAK') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS1_ADP2') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDADP.IMP.BMC.SAM_RSP_O') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.44) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RVT1400 GSCX CONFRIMS TO SWISS AMERICA - ADP / ICI') +
   PUT(ENABLED) +
   RQMNAME('ADPSYS1') +
   RNAME('BNY_TO_SAM_RECV') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS1_ADP2') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDADP.IMP.BMC.SCO_ACK_O') +
*  ALTDATE(2010-04-23) +
*  ALTTIME(15.13.49) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RVT1400 GSCX ACK/NAK TO SCOTIA CAPITAL - ADP / ICI') +
   PUT(ENABLED) +
   RQMNAME('ADPSYS1') +
   RNAME('BNY_TO_SCI_ACKNAK') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS1_2') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDADP.IMP.BMC.SCO_RSP_O') +
*  ALTDATE(2010-04-23) +
*  ALTTIME(15.14.02) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RVT1400 GSCX ACK/NAK TO SCOTIA CAPITAL - ADP / ICI') +
   PUT(ENABLED) +
   RQMNAME('ADPSYS1') +
   RNAME('BNY_TO_SCI_RECV') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS1_2') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDADP.IMP.BMC.SG_PD_ACK_O') +
*  ALTDATE(2010-05-11) +
*  ALTTIME(20.11.13) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RXP1482 ACK/NACK TO ADP FOR SOCIETE GENERALE PD MSGS') +
   PUT(ENABLED) +
   RQMNAME('ADPSYS0AB') +
   RNAME('BNY_TO_SGA_ACKNAK') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS0AB_1') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDADP.IMP.BMC.SG_PD_RSP_O') +
*  ALTDATE(2010-05-11) +
*  ALTTIME(20.11.13) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RXP1482 SETTL.CONF FOR SOCIETE GENERALE PD INSTR') +
   PUT(ENABLED) +
   RQMNAME('ADPSYS0AB') +
   RNAME('BNY_TO_SGA_RECV') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS0AB_1') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDADP.IMP.BMC.SUNT_ACK_O') +
*  ALTDATE(2010-04-20) +
*  ALTTIME(11.09.41) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RVT1400 GSCX ACK/NAK TO SUNTRUST - ADP / ICI') +
   PUT(ENABLED) +
   RQMNAME('ADPSYS1') +
   RNAME('BNY_TO_STC_ACKNAK') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS1_2') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDADP.IMP.BMC.SUNT_RSP_O') +
*  ALTDATE(2010-04-20) +
*  ALTTIME(11.06.55) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RVT1400 GSCX CONFIRMS TO SUNTRUST - ADP / ICI') +
   PUT(ENABLED) +
   RQMNAME('ADPSYS1') +
   RNAME('BNY_TO_STC_RECV') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS1_2') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDADP.IMP.BMC.TMS_ACK_O') +
*  ALTDATE(2010-04-28) +
*  ALTTIME(12.16.16) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RVT1400 GSCX ACK/NAK TO BANK OF TOKYO - ADP / ICI') +
   PUT(ENABLED) +
   RQMNAME('ADPSYS1') +
   RNAME('BNY_TO_TMS_ACKNAK') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS1_1') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDADP.IMP.BMC.TMS_RSP_O') +
*  ALTDATE(2010-04-28) +
*  ALTTIME(12.16.26) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RVT1400 GSCX ACK/NAK TO BANK OF TOKYO - ADP / ICI') +
   PUT(ENABLED) +
   RQMNAME('ADPSYS1') +
   RNAME('BNY_TO_TMS_RECV') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS1_1') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDADP.IMP.BMC.UBS_ACK_O') +
*  ALTDATE(2010-06-10) +
*  ALTTIME(18.13.32) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RAZ1374 GSCX ACK/NAK TO UBS-ADP/ICI') +
   PUT(ENABLED) +
   RQMNAME('ADPSYS0AB') +
   RNAME('BNY_TO_UBS_ACKNAK') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS0AB_1') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDADP.IMP.BMC.UBS_RSP_O') +
*  ALTDATE(2010-06-10) +
*  ALTTIME(18.13.32) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RAZ1374 GSCX CONFIRMS TO UBS-ADP/ICI') +
   PUT(ENABLED) +
   RQMNAME('ADPSYS0AB') +
   RNAME('BNY_TO_UBS_RECV') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS0AB_1') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDADP.IMP.BMC.WCF_ACK_O') +
*  ALTDATE(2011-08-08) +
*  ALTTIME(16.10.44) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RMU1546 GSCX ACK/NAK TO WELLSFARGO.') +
   PUT(ENABLED) +
   RQMNAME('I5ISYS0C') +
   RNAME('BNY_TO_WFS_ACKNAK') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS0C_1') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDADP.IMP.BMC.WCF_RSP_O') +
*  ALTDATE(2011-08-08) +
*  ALTTIME(16.10.25) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RMU1546 GSCX CONFIRMS TO WELLSFARGO') +
   PUT(ENABLED) +
   RQMNAME('I5ISYS0C') +
   RNAME('BNY_TO_WFS_RECV') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS0C_1') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDADP.IMP.BMC.WLB_ACK_O') +
*  ALTDATE(2010-04-22) +
*  ALTTIME(15.31.46) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RVT1400 GSCX ACK/NAK TO WEST LB- ADP / ICI') +
   PUT(ENABLED) +
   RQMNAME('ADPSYS1') +
   RNAME('BNY_TO_WLB_ACKNAK') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS1_2') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDADP.IMP.BMC.WLB_RSP_O') +
*  ALTDATE(2010-04-22) +
*  ALTTIME(15.32.06) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RVT1400 GSCX ACK/NAK TO WEST LB- ADP / ICI') +
   PUT(ENABLED) +
   RQMNAME('ADPSYS1') +
   RNAME('BNY_TO_WLB_RECV') +
   SCOPE(QMGR) +
   XMITQ('ADPSYS1_2') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQDBNY.CLS.BMC.CLASS_INS_I') +
*  ALTDATE(2011-05-16) +
*  ALTTIME(01.01.20) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RQD1544 RESPONSES FROM ABKA') +
   PUT(ENABLED) +
   RQMNAME('ASMPMQI') +
   RNAME('CLASS_INS_I') +
   SCOPE(QMGR) +
   XMITQ('ASMPMQI') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQLBMO.OCE.BMC.NSB_ACK_O') +
*  ALTDATE(2013-01-09) +
*  ALTTIME(21.43.13) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RZB1676 GSCX ACK/NAK TO BMO-NESBITT BURNS') +
   PUT(ENABLED) +
   RQMNAME('SMSSCCQM') +
   RNAME('LQ.BONY.ACKNAK') +
   SCOPE(QMGR) +
   XMITQ('SMSSCCQM') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQLBMO.OCE.BMC.NSB_RSP_O') +
*  ALTDATE(2013-01-09) +
*  ALTTIME(21.43.13) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RZB1676 GSCX CONFIRMS TO BMO-NESBITT BURNS') +
   PUT(ENABLED) +
   RQMNAME('SMSSCCQM') +
   RNAME('LQ.BONY.DATA') +
   SCOPE(QMGR) +
   XMITQ('SMSSCCQM') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQLMTX.TBL.BMC.CMI_ACK_O') +
*  ALTDATE(2010-03-18) +
*  ALTTIME(14.04.09) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RCL1437 GSCX ACK/NAK TO BNY CAPITAL MARKET') +
   PUT(ENABLED) +
   RQMNAME('TEST.MQ_MATRIX') +
   RNAME('BNY_TO_CMI_DELIVERY') +
   SCOPE(QMGR) +
   XMITQ('MTX_TEST.MQ_MATRIX') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQLMTX.TBL.BMC.CMI_RSP_O') +
*  ALTDATE(2010-03-18) +
*  ALTTIME(14.04.02) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RCL1437 GSCX CONFIRMS TO BNY CAPITAL MARKET') +
   PUT(ENABLED) +
   RQMNAME('TEST.MQ_MATRIX') +
   RNAME('BNY_TO_CMI_DELIVERY') +
   SCOPE(QMGR) +
   XMITQ('MTX_TEST.MQ_MATRIX') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQLMTX.TBL.BMC.GLE_ACK_O') +
*  ALTDATE(2010-10-05) +
*  ALTTIME(09.31.50) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RXP1513 GSCX ACK/NAK TO GLEACHER') +
   PUT(ENABLED) +
   RQMNAME('TEST.MQ_MATRIX') +
   RNAME('BNY_TO_GLE_DELIVERY') +
   SCOPE(QMGR) +
   XMITQ('MTX_TEST.MQ_MATRIX') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQLMTX.TBL.BMC.GLE_RSP_O') +
*  ALTDATE(2010-10-05) +
*  ALTTIME(09.31.50) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RXP1513 GSCX CONFIRMS TO GLEACHER') +
   PUT(ENABLED) +
   RQMNAME('TEST.MQ_MATRIX') +
   RNAME('BNY_TO_GLE_DELIVERY') +
   SCOPE(QMGR) +
   XMITQ('MTX_TEST.MQ_MATRIX') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQLMTX.TBL.BMC.PLM_ACK_O') +
*  ALTDATE(2010-03-18) +
*  ALTTIME(14.03.54) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RCL1437 GSCX ACK/NAK TO PALOMA') +
   PUT(ENABLED) +
   RQMNAME('TEST.MQ_MATRIX') +
   RNAME('BNY_TO_PLM_DELIVERY') +
   SCOPE(QMGR) +
   XMITQ('MTX_TEST.MQ_MATRIX') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQLMTX.TBL.BMC.PLM_RSP_O') +
*  ALTDATE(2010-03-18) +
*  ALTTIME(14.03.47) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RCL1437 GSCX CONFIRMS TO PALOMA') +
   PUT(ENABLED) +
   RQMNAME('TEST.MQ_MATRIX') +
   RNAME('BNY_TO_PLM_DELIVERY') +
   SCOPE(QMGR) +
   XMITQ('MTX_TEST.MQ_MATRIX') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQLMTX.TBL.BMC.SCB_ACK_O') +
*  ALTDATE(2010-03-18) +
*  ALTTIME(14.03.41) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RCL1437 GSCX ACK/NAK TO STANDARD CHARTERED BANK') +
   PUT(ENABLED) +
   RQMNAME('TEST.MQ_MATRIX') +
   RNAME('BNY_TO_SCB_DELIVERY') +
   SCOPE(QMGR) +
   XMITQ('MTX_TEST.MQ_MATRIX') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQLMTX.TBL.BMC.SCB_RSP_O') +
*  ALTDATE(2010-03-18) +
*  ALTTIME(14.03.35) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RCL1437 GSCX CONFIRMS TO STANDARD CHARTERED BANK') +
   PUT(ENABLED) +
   RQMNAME('TEST.MQ_MATRIX') +
   RNAME('BNY_TO_SCB_DELIVERY') +
   SCOPE(QMGR) +
   XMITQ('MTX_TEST.MQ_MATRIX') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQLMTX.TBL.BMC.SSS_ACK_O') +
*  ALTDATE(2010-03-17) +
*  ALTTIME(16.23.03) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RCL1437 GSCX ACK/NAK TO SOUTH STREET') +
   PUT(ENABLED) +
   RQMNAME('TEST.MQ_MATRIX') +
   RNAME('BNY_TO_SSS_DELIVERY') +
   SCOPE(QMGR) +
   XMITQ('MTX_TEST.MQ_MATRIX') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQLMTX.TBL.BMC.SSS_RSP_O') +
*  ALTDATE(2010-03-17) +
*  ALTTIME(16.22.56) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RCL1437 GSCX CONFIRMS TO SOUTH STREET') +
   PUT(ENABLED) +
   RQMNAME('TEST.MQ_MATRIX') +
   RNAME('BNY_TO_SSS_DELIVERY') +
   SCOPE(QMGR) +
   XMITQ('MTX_TEST.MQ_MATRIX') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQMBBH.BBP.BMC.BBP_ACK_O') +
*  ALTDATE(2011-04-14) +
*  ALTTIME(10.19.41) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RHV1503 GSCX ACK/NACK TO BROWN BROTHERS') +
   PUT(ENABLED) +
   RQMNAME('BBHTST') +
   RNAME('BNY.ELI.BBH.SONIC.ACKNAK.BBP') +
   SCOPE(QMGR) +
   XMITQ('BBHTST') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQMBBH.BBP.BMC.BBP_RSP_O') +
*  ALTDATE(2011-04-14) +
*  ALTTIME(10.19.51) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RHV1503 GSCX CONFIRMS TO BROWN BROTHERS.') +
   PUT(ENABLED) +
   RQMNAME('BBHTST') +
   RNAME('BNY.ELI.BBH.SONIC.CONFIRM.BBP') +
   SCOPE(QMGR) +
   XMITQ('BBHTST') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQMBBH.BBP.BMC.HAR_ACK_O') +
*  ALTDATE(2011-04-14) +
*  ALTTIME(10.21.39) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RHV1503 GSCX ACK/NACK TO HARRIMAN.') +
   PUT(ENABLED) +
   RQMNAME('BBHTST') +
   RNAME('BNY.ELI.BBH.SONIC.ACKNAK.HAR') +
   SCOPE(QMGR) +
   XMITQ('BBHTST') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQMBBH.BBP.BMC.HAR_RSP_O') +
*  ALTDATE(2011-04-14) +
*  ALTTIME(10.21.27) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RHV1503 GSCX CONFIRMS TO HARRIMAN.') +
   PUT(ENABLED) +
   RQMNAME('BBHTST') +
   RNAME('BNY.ELI.BBH.SONIC.CONFIRM.HAR') +
   SCOPE(QMGR) +
   XMITQ('BBHTST') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQMCTG.CTG.BMC.RPOCNF_LIVE_RSP_O') +
*  ALTDATE(2014-07-24) +
*  ALTTIME(18.58.44) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RKY1778 CONFIRMATIONS IN LIVE MODE.') +
   PUT(ENABLED) +
   RQMNAME('ZMQX') +
   RNAME('COSINE.LIVE.RCVRQ') +
   SCOPE(QMGR) +
   XMITQ('ZMQX_S1') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQMCTG.CTG.BMC.RPOCNF_PROJ_RSP_O') +
*  ALTDATE(2014-07-24) +
*  ALTTIME(18.58.32) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RKY1778 CONFIRMATIONS IN PROJECTED MODE.') +
   PUT(ENABLED) +
   RQMNAME('ZMQX') +
   RNAME('COSINE.PROJECTED.RCVRQ') +
   SCOPE(QMGR) +
   XMITQ('ZMQX_S1') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQMGSEC.GMS.BMC.GSEC_ACK_O') +
*  ALTDATE(2014-09-17) +
*  ALTTIME(05.33.22) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('REL1725 ACK/NAK TO GOLDMAN-GSEC.') +
   PUT(ENABLED) +
   RQMNAME('TSLK') +
   RNAME('BNY.TO.GSEC.ACKNAK') +
   SCOPE(QMGR) +
   XMITQ('TSLK') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQMGSEC.GMS.BMC.GSEC_RSP_O') +
*  ALTDATE(2014-09-17) +
*  ALTTIME(05.33.22) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('REL1725 CONFIRMATIONS TO GOLDMAN-GSEC.') +
   PUT(ENABLED) +
   RQMNAME('TSLK') +
   RNAME('BNY.TO.GSEC.CONFIRM') +
   SCOPE(QMGR) +
   XMITQ('TSLK') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQMHMEL.CMS.BMC.GSC_RSP_O_A') +
*  ALTDATE(2013-02-13) +
*  ALTTIME(06.46.41) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RYD1666 RESPONSE QUEUE FOR UAT TEST') +
   PUT(ENABLED) +
   RQMNAME('MG5A') +
   RNAME('AMC.GSCX.TO.CMSFED.ACCP') +
   SCOPE(QMGR) +
   XMITQ('MG5A') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQMHMEL.CMS.BMC.GSC_RSP_O_S') +
*  ALTDATE(2013-02-13) +
*  ALTTIME(06.46.41) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RYD1666 RESPONSE QUEUE FOR SIN TEST') +
   PUT(ENABLED) +
   RQMNAME('MG5A') +
   RNAME('AMC.GSCX.TO.CMSFED.SYST') +
   SCOPE(QMGR) +
   XMITQ('MG5A') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQMHMEL.CMS.BMC.GSC_RSP_O_U') +
*  ALTDATE(2013-02-13) +
*  ALTTIME(06.46.41) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RYD1666 RESPONSE QUEUE FOR UNIT TEST') +
   PUT(ENABLED) +
   RQMNAME('MG5A') +
   RNAME('AMC.GSCX.TO.CMSFED.UNIT') +
   SCOPE(QMGR) +
   XMITQ('MG5A') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQMMOR.FIS.BMC.DWR_ACK_O') +
*  ALTDATE(2010-08-20) +
*  ALTTIME(12.53.43) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RIR1463 ACK/NACK TO MORGAN') +
   PUT(ENABLED) +
   RQMNAME('MQ20') +
   RNAME('PFIS.MQR.BONYLINK.BNY_TO_DWR_ACKNAK') +
   SCOPE(QMGR) +
   XMITQ('MQ20_1') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQMMOR.FIS.BMC.DWR_ACK_O_D') +
*  ALTDATE(2012-11-19) +
*  ALTTIME(22.45.59) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RCM1661 GSCX ACK/NAK TO MS-DEANWITTER-MQ35') +
   PUT(ENABLED) +
   RQMNAME('MQ35') +
   RNAME('PFIS.MQR.BONYLINK.BNY_TO_DWR_ACKNAK') +
   SCOPE(QMGR) +
   XMITQ('MQ35') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQMMOR.FIS.BMC.DWR_ACK_O_ND') +
*  ALTDATE(2013-10-08) +
*  ALTTIME(09.33.34) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RCM1661 GSCX ACK/NAK TO MS-DEANWITTER-MQ72') +
   PUT(ENABLED) +
   RQMNAME('NYT8') +
   RNAME('MQABNY.MQMMOR.FIS.BMC.DWR_ACK_O_ND') +
   SCOPE(QMGR) +
   XMITQ('NYT8.3') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQMMOR.FIS.BMC.DWR_RSP_O') +
*  ALTDATE(2010-08-20) +
*  ALTTIME(12.53.43) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RIR1463 SETTLEMENT TO MORGAN') +
   PUT(ENABLED) +
   RQMNAME('MQ20') +
   RNAME('PFIS.MQR.BONYLINK.BNY_TO_DWR_CONFIRMS') +
   SCOPE(QMGR) +
   XMITQ('MQ20_1') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQMMOR.FIS.BMC.DWR_RSP_O_D') +
*  ALTDATE(2012-11-19) +
*  ALTTIME(22.45.59) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RCM1661 GSCX CONFIRMS TO MS-DEANWITTER-MQ35') +
   PUT(ENABLED) +
   RQMNAME('MQ35') +
   RNAME('PFIS.MQR.BONYLINK.BNY_TO_DWR_CONFIRMS') +
   SCOPE(QMGR) +
   XMITQ('MQ35') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQMMOR.FIS.BMC.DWR_RSP_O_ND') +
*  ALTDATE(2013-10-08) +
*  ALTTIME(09.33.04) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RCM1661 GSCX CONFIRMS TO MS-DEANWITTER-MQ72') +
   PUT(ENABLED) +
   RQMNAME('NYT8') +
   RNAME('MQABNY.MQMMOR.FIS.BMC.DWR_RSP_O_ND') +
   SCOPE(QMGR) +
   XMITQ('NYT8.3') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQMMOR.MOR.BMC.MSI_EQ_A38_RSP_O') +
*  ALTDATE(2013-09-18) +
*  ALTTIME(09.58.12) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RUX1741 GSCX CONFIRMS TO MSI-EQUITY') +
   PUT(ENABLED) +
   RQMNAME('NYT8') +
   RNAME('MQABNY.MQMMOR.MOR.BMC.MSI_EQ_A38_RSP_O') +
   SCOPE(QMGR) +
   XMITQ('NYT8.1') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQMMOR.MOR.BMC.MSI_EQ_RSP_O') +
*  ALTDATE(2013-09-18) +
*  ALTTIME(09.58.12) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RUX1741 GSCX CONFIRMS TO MSI-EQUITY') +
   PUT(ENABLED) +
   RQMNAME('NYT8') +
   RNAME('MQABNY.MQMMOR.MOR.BMC.MSI_EQ_RSP_O') +
   SCOPE(QMGR) +
   XMITQ('NYT8.1') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQMMOR.MOR.BMC.MSI_FX_RSP_O') +
*  ALTDATE(2013-09-18) +
*  ALTTIME(09.58.12) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RUX1741 GSCX CONFIRMS TO MSI-FIXEDINCOME') +
   PUT(ENABLED) +
   RQMNAME('NYT8') +
   RNAME('MQABNY.MQMMOR.MOR.BMC.MSI_FX_RSP_O') +
   SCOPE(QMGR) +
   XMITQ('NYT8.1') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQMMOR.MOR.BMC.MS_DOM_ACK_O') +
*  ALTDATE(2013-09-26) +
*  ALTTIME(10.13.42) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RUX1741 GSCX ACK/NAK TO MS DOMESTIC') +
   PUT(ENABLED) +
   RQMNAME('NYT8') +
   RNAME('BNY_TO_MS_FIDNY_ACKNAK') +
   SCOPE(QMGR) +
   XMITQ('NYT8.1') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQMMOR.MOR.BMC.MS_DOM_RSP_O') +
*  ALTDATE(2013-09-18) +
*  ALTTIME(09.58.12) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RUX1741 GSCX CONFIRMS TO MS-DOMESTIC') +
   PUT(ENABLED) +
   RQMNAME('NYT8') +
   RNAME('MQABNY.MQMMOR.MOR.BMC.MS_DOM_RSP_O') +
   SCOPE(QMGR) +
   XMITQ('NYT8.2') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQMMOR.MOR.BMC.MS_GCF_ACK_O') +
*  ALTDATE(2013-09-18) +
*  ALTTIME(09.58.12) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RUX1741 GSCX ACK/NAK TO MS-GCF') +
   PUT(ENABLED) +
   RQMNAME('NYT8') +
   RNAME('MQABNY.MQMMOR.MOR.BMC.MS_GCF_ACK_O') +
   SCOPE(QMGR) +
   XMITQ('NYT8.2') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQMMOR.MOR.BMC.MS_GCF_RSP_O') +
*  ALTDATE(2013-10-31) +
*  ALTTIME(17.39.42) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RUX1741 GSCX CONFIRMS TO MS-GCF') +
   PUT(ENABLED) +
   RQMNAME('NYT8') +
   RNAME('MQABNY.MQMMOR.MOR.BMC.MS_GCF_RSP_O') +
   SCOPE(QMGR) +
   XMITQ('NYT8.2') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQMMOR.MOR.BMC.MS_REPO_ACK_O') +
*  ALTDATE(2013-09-18) +
*  ALTTIME(09.58.12) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RUX1741 GSCX ACK/NAK TO MS DOMESTIC') +
   PUT(ENABLED) +
   RQMNAME('NYT8') +
   RNAME('MQABNY.MQMMOR.MOR.BMC.MS_REPO_ACK_O') +
   SCOPE(QMGR) +
   XMITQ('NYT8.1') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQMMOR.MOR.BMC.MS_REPO_RSP_O') +
*  ALTDATE(2013-09-18) +
*  ALTTIME(09.58.12) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RUX1741 GSCX CONFIRMS TO MS-DOMESTIC') +
   PUT(ENABLED) +
   RQMNAME('NYT8') +
   RNAME('MQABNY.MQMMOR.MOR.BMC.MS_REPO_RSP_O') +
   SCOPE(QMGR) +
   XMITQ('NYT8.1') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQMSAL.SAL.BMC.SAB_RSP_O') +
*  ALTDATE(2013-02-26) +
*  ALTTIME(21.23.43) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RCQ1709 GSCX ACK/NACK TO CITI-SALOMON IN SSB FORMAT.') +
   PUT(ENABLED) +
   RQMNAME('ZMQX') +
   RNAME('GC.BONY.GOVT.RCVRQ') +
   SCOPE(QMGR) +
   XMITQ('ZMQX') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQMSAL.SAL.BMC.SAL_RSP_O') +
*  ALTDATE(2013-02-26) +
*  ALTTIME(21.23.43) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RCQ1709 GSCX ACK/NACK TO CITI-SALOMON IN IMX FORMAT.') +
   PUT(ENABLED) +
   RQMNAME('ZMQX') +
   RNAME('GC.BONY.MORTG.RCVRQ') +
   SCOPE(QMGR) +
   XMITQ('ZMQX') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQMSAL.SAL.BMC.SHELL_RSP_O') +
*  ALTDATE(2013-02-26) +
*  ALTTIME(21.23.43) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RCQ1709 GSCX ACK/NACK TO CITI-SALOMON IN BGRAM FORMAT.') +
   PUT(ENABLED) +
   RQMNAME('ZMQX') +
   RNAME('GC.BONY.SHELL.RCVRQ') +
   SCOPE(QMGR) +
   XMITQ('ZMQX') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQMSMB.SMB.BMC.MBSDLV_RSP_O') +
*  ALTDATE(2014-08-05) +
*  ALTTIME(14.15.07) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RFM1638 GSCX ACK/NACK TO CITI-SMB') +
   PUT(ENABLED) +
   RQMNAME('ZMQT') +
   RNAME('NKG.MBSDLV.BONY.RCVRQ') +
   SCOPE(QMGR) +
   XMITQ('ZMQT_S1') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQMSMB.SMB.BMC.MBSFUT_RSP_O') +
*  ALTDATE(2014-08-05) +
*  ALTTIME(14.14.57) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RFM1638 GSCX ACK/NACK TO CITI-SMB') +
   PUT(ENABLED) +
   RQMNAME('ZMQT') +
   RNAME('NKG.MBSFUT.BONY.RCVRQ') +
   SCOPE(QMGR) +
   XMITQ('ZMQT_S1') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQMSMB.SMB.BMC.MBSREC_RSP_O') +
*  ALTDATE(2014-08-05) +
*  ALTTIME(14.14.49) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RFM1638 GSCX ACK/NACK TO CITI-SMB') +
   PUT(ENABLED) +
   RQMNAME('ZMQT') +
   RNAME('NKG.MBSREC.BONY.RCVRQ') +
   SCOPE(QMGR) +
   XMITQ('ZMQT_S1') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQMSMB.SMB.BMC.NKG_RSP_O') +
*  ALTDATE(2014-08-05) +
*  ALTTIME(14.14.04) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RFM1638 GSCX ACK/NACK TO CITI-SMB') +
   PUT(ENABLED) +
   RQMNAME('ZMQT') +
   RNAME('NKG.BONY.COMMDTY.RCVRQ') +
   SCOPE(QMGR) +
   XMITQ('ZMQT_S1') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQMSMB.SMB.BMC.RETAIL_RSP_O') +
*  ALTDATE(2014-08-05) +
*  ALTTIME(14.15.17) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RFM1638 GSCX ACK/NACK TO CITI-SMB') +
   PUT(ENABLED) +
   RQMNAME('ZMQT') +
   RNAME('NKG.RETAIL.BONY.RCVRQ') +
   SCOPE(QMGR) +
   XMITQ('ZMQT_S1') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQMSMB.SMB.BMC.TRSRY_RSP_O') +
*  ALTDATE(2014-08-05) +
*  ALTTIME(14.13.47) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RFM1638 GSCX ACK/NACK TO CITI-SMB') +
   PUT(ENABLED) +
   RQMNAME('ZMQT') +
   RNAME('NKG.TREASURY.BONY.RCVRQ') +
   SCOPE(QMGR) +
   XMITQ('ZMQT_S1') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQMTDS.IMP.BMC.TDS_ACK_O') +
*  ALTDATE(2011-03-17) +
*  ALTTIME(10.31.22) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RIO1521 GSCX ACK/NACK TO TDS SECURITIES') +
   PUT(ENABLED) +
   RQMNAME('TDDEV400') +
   RNAME('BNY_TO_TOR_ACKNAK') +
   SCOPE(QMGR) +
   XMITQ('TDS_TDDEV400_1') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQMTDS.IMP.BMC.TDS_RSP_O') +
*  ALTDATE(2011-03-17) +
*  ALTTIME(10.31.22) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RIO1521 GSCX CONFIRMS TO TD SECURITIES.') +
   PUT(ENABLED) +
   RQMNAME('TDDEV400') +
   RNAME('BNY_TO_TOR_RECV') +
   SCOPE(QMGR) +
   XMITQ('TDS_TDDEV400_1') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQSBNY.GUI.BMC.CLMC_AE11_RSP_O') +
*  ALTDATE(2011-08-18) +
*  ALTTIME(19.35.09) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RXB1618 THIS IS TO SEND CLM CMD. RESPONSES TO AE-SQLB.') +
   PUT(ENABLED) +
   RQMNAME('SQLB') +
   RNAME('MQABNY.MQSBNY.GUI.BMC.CLMC_AE11_RSP_O') +
   SCOPE(QMGR) +
   XMITQ('SQLB') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQSBNY.GUI.BMC.CLMC_AE21_RSP_O') +
*  ALTDATE(2011-08-18) +
*  ALTTIME(19.36.42) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RCI1584 THIS IS TO SEND CLM CMD. RESPONSES TO AE-SQLO.') +
   PUT(ENABLED) +
   RQMNAME('SQLO') +
   RNAME('MQABNY.MQSBNY.GUI.BMC.CLMC_AE21_RSP_O') +
   SCOPE(QMGR) +
   XMITQ('SQLO') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQSBNY.GUI.BMC.CLMI_AE11_RSP_O') +
*  ALTDATE(2011-08-18) +
*  ALTTIME(19.35.09) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RXB1618 THIS IS TO SEND CLM INQ. RESPONSES TO AE-SQLB.') +
   PUT(ENABLED) +
   RQMNAME('SQLB') +
   RNAME('MQABNY.MQSBNY.GUI.BMC.CLMI_AE11_RSP_O') +
   SCOPE(QMGR) +
   XMITQ('SQLB') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQSBNY.GUI.BMC.CLMI_AE21_RSP_O') +
*  ALTDATE(2011-08-18) +
*  ALTTIME(19.36.42) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RCI1584 THIS IS TO SEND CLM INQ. RESPONSES TO AE-SQLO.') +
   PUT(ENABLED) +
   RQMNAME('SQLO') +
   RNAME('MQABNY.MQSBNY.GUI.BMC.CLMI_AE21_RSP_O') +
   SCOPE(QMGR) +
   XMITQ('SQLO') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQSBNY.RPO.BMC.CLMC_RE11_RSP_O_A') +
*  ALTDATE(2011-07-19) +
*  ALTTIME(21.28.43) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RXI1606 THIS IS TO SEND CLM CMD. RESPONSES TO RE1.') +
   PUT(ENABLED) +
   RQMNAME('SQLD') +
   RNAME('MQABNY.MQSBNY.RPO.BMC.CLMC_RE11_RSP_O_A') +
   SCOPE(QMGR) +
   XMITQ('SQLD') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQSBNY.RPO.BMC.CLMC_RE11_RSP_O_B') +
*  ALTDATE(2011-07-19) +
*  ALTTIME(21.27.22) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RSV1550 THIS IS TO SEND CLM CMD. RESPONSES TO RE1.') +
   PUT(ENABLED) +
   RQMNAME('SQND') +
   RNAME('MQABNY.MQSBNY.RPO.BMC.CLMC_RE11_RSP_O_B') +
   SCOPE(QMGR) +
   XMITQ('SQND') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQSBNY.RPO.BMC.CLMC_RE21_RSP_O_A') +
*  ALTDATE(2011-07-19) +
*  ALTTIME(21.28.43) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RXI1606 THIS IS TO SEND CLM CMD. RESPONSES TO RE2.') +
   PUT(ENABLED) +
   RQMNAME('SQLD') +
   RNAME('MQABNY.MQSBNY.RPO.BMC.CLMC_RE21_RSP_O_A') +
   SCOPE(QMGR) +
   XMITQ('SQLD') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQSBNY.RPO.BMC.CLMC_RE21_RSP_O_B') +
*  ALTDATE(2011-07-19) +
*  ALTTIME(21.27.22) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RSV1550 THIS IS TO SEND CLM CMD. RESPONSES TO RE2.') +
   PUT(ENABLED) +
   RQMNAME('SQND') +
   RNAME('MQABNY.MQSBNY.RPO.BMC.CLMC_RE21_RSP_O_B') +
   SCOPE(QMGR) +
   XMITQ('SQND') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQSBNY.RPO.BMC.CLMC_RE31_RSP_O_A') +
*  ALTDATE(2011-07-19) +
*  ALTTIME(21.28.43) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RXI1606 THIS IS TO SEND CLM CMD. RESPONSES TO RE3.') +
   PUT(ENABLED) +
   RQMNAME('SQLD') +
   RNAME('MQABNY.MQSBNY.RPO.BMC.CLMC_RE31_RSP_O_A') +
   SCOPE(QMGR) +
   XMITQ('SQLD') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQSBNY.RPO.BMC.CLMC_RE31_RSP_O_B') +
*  ALTDATE(2011-07-19) +
*  ALTTIME(21.27.23) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RSV1550 THIS IS TO SEND CLM CMD. RESPONSES TO RE3.') +
   PUT(ENABLED) +
   RQMNAME('SQND') +
   RNAME('MQABNY.MQSBNY.RPO.BMC.CLMC_RE31_RSP_O_B') +
   SCOPE(QMGR) +
   XMITQ('SQND') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQSBNY.RPO.BMC.CLMC_RE41_RSP_O_A') +
*  ALTDATE(2011-07-19) +
*  ALTTIME(21.28.43) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RXI1606 THIS IS TO SEND CLM CMD. RESPONSES TO RE4.') +
   PUT(ENABLED) +
   RQMNAME('SQLD') +
   RNAME('MQABNY.MQSBNY.RPO.BMC.CLMC_RE41_RSP_O_A') +
   SCOPE(QMGR) +
   XMITQ('SQLD') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQSBNY.RPO.BMC.CLMC_RE41_RSP_O_B') +
*  ALTDATE(2011-07-19) +
*  ALTTIME(21.27.23) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RSV1550 THIS IS TO SEND CLM CMD. RESPONSES TO RE4.') +
   PUT(ENABLED) +
   RQMNAME('SQND') +
   RNAME('MQABNY.MQSBNY.RPO.BMC.CLMC_RE41_RSP_O_B') +
   SCOPE(QMGR) +
   XMITQ('SQND') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQSBNY.RPO.BMC.CLMC_REQ_O_A') +
*  ALTDATE(2011-07-19) +
*  ALTTIME(21.26.53) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RQW1565 TO SEND COMMAND REQUESTS TO CLM.') +
   PUT(ENABLED) +
   RQMNAME('SQLA') +
   RNAME('MQABNY.MQSBNY.RPO.BMC.CLMC_REQ_O_A') +
   SCOPE(QMGR) +
   XMITQ('SQLA') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQSBNY.RPO.BMC.CLMC_REQ_O_B') +
*  ALTDATE(2011-10-25) +
*  ALTTIME(12.22.44) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('ROV1576 TO SEND COMMAND REQUESTS TO CLM.') +
   PUT(ENABLED) +
   RQMNAME('SQAL') +
   RNAME('MQABNY.MQSBNY.RPO.BMC.CLMC_REQ_O_B') +
   SCOPE(QMGR) +
   XMITQ('SQAL') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQSBNY.RPO.BMC.CLMI_RE11_RSP_O_A') +
*  ALTDATE(2011-07-19) +
*  ALTTIME(21.28.43) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RXI1606 THIS IS TO SEND CLM INQ. RESPONSES TO RE1.') +
   PUT(ENABLED) +
   RQMNAME('SQLD') +
   RNAME('MQABNY.MQSBNY.RPO.BMC.CLMI_RE11_RSP_O_A') +
   SCOPE(QMGR) +
   XMITQ('SQLD') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQSBNY.RPO.BMC.CLMI_RE11_RSP_O_B') +
*  ALTDATE(2011-07-19) +
*  ALTTIME(21.27.23) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RSV1550 THIS IS TO SEND CLM INQ. RESPONSES TO RE1.') +
   PUT(ENABLED) +
   RQMNAME('SQND') +
   RNAME('MQABNY.MQSBNY.RPO.BMC.CLMI_RE11_RSP_O_B') +
   SCOPE(QMGR) +
   XMITQ('SQND') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQSBNY.RPO.BMC.CLMI_RE21_RSP_O_A') +
*  ALTDATE(2011-07-19) +
*  ALTTIME(21.28.43) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RXI1606 THIS IS TO SEND CLM INQ. RESPONSES TO RE2.') +
   PUT(ENABLED) +
   RQMNAME('SQLD') +
   RNAME('MQABNY.MQSBNY.RPO.BMC.CLMI_RE21_RSP_O_A') +
   SCOPE(QMGR) +
   XMITQ('SQLD') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQSBNY.RPO.BMC.CLMI_RE21_RSP_O_B') +
*  ALTDATE(2011-07-19) +
*  ALTTIME(21.27.23) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RSV1550 THIS IS TO SEND CLM INQ. RESPONSES TO RE2.') +
   PUT(ENABLED) +
   RQMNAME('SQND') +
   RNAME('MQABNY.MQSBNY.RPO.BMC.CLMI_RE21_RSP_O_B') +
   SCOPE(QMGR) +
   XMITQ('SQND') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQSBNY.RPO.BMC.CLMI_RE31_RSP_O_A') +
*  ALTDATE(2011-07-19) +
*  ALTTIME(21.28.43) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RXI1606 THIS IS TO SEND CLM INQ. RESPONSES TO RE3.') +
   PUT(ENABLED) +
   RQMNAME('SQLD') +
   RNAME('MQABNY.MQSBNY.RPO.BMC.CLMI_RE31_RSP_O_A') +
   SCOPE(QMGR) +
   XMITQ('SQLD') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQSBNY.RPO.BMC.CLMI_RE31_RSP_O_B') +
*  ALTDATE(2011-07-19) +
*  ALTTIME(21.27.23) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RSV1550 THIS IS TO SEND CLM INQ. RESPONSES TO RE3.') +
   PUT(ENABLED) +
   RQMNAME('SQND') +
   RNAME('MQABNY.MQSBNY.RPO.BMC.CLMI_RE31_RSP_O_B') +
   SCOPE(QMGR) +
   XMITQ('SQND') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQSBNY.RPO.BMC.CLMI_RE41_RSP_O_A') +
*  ALTDATE(2011-07-19) +
*  ALTTIME(21.28.43) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RXI1606 THIS IS TO SEND CLM INQ. RESPONSES TO RE4.') +
   PUT(ENABLED) +
   RQMNAME('SQLD') +
   RNAME('MQABNY.MQSBNY.RPO.BMC.CLMI_RE41_RSP_O_A') +
   SCOPE(QMGR) +
   XMITQ('SQLD') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQSBNY.RPO.BMC.CLMI_RE41_RSP_O_B') +
*  ALTDATE(2011-07-19) +
*  ALTTIME(21.27.23) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RSV1550 THIS IS TO SEND CLM INQ. RESPONSES TO RE4.') +
   PUT(ENABLED) +
   RQMNAME('SQND') +
   RNAME('MQABNY.MQSBNY.RPO.BMC.CLMI_RE41_RSP_O_B') +
   SCOPE(QMGR) +
   XMITQ('SQND') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQSBNY.RPO.BMC.CLMI_REQ_O_A') +
*  ALTDATE(2011-07-19) +
*  ALTTIME(21.26.53) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RQW1565 TO SEND INQ REQUESTS TO CLM.') +
   PUT(ENABLED) +
   RQMNAME('SQLA') +
   RNAME('MQABNY.MQSBNY.RPO.BMC.CLMI_REQ_O_A') +
   SCOPE(QMGR) +
   XMITQ('SQLA') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQSBNY.RPO.BMC.CLMI_REQ_O_B') +
*  ALTDATE(2011-10-25) +
*  ALTTIME(12.22.15) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('ROV1576 TO SEND INQ REQUESTS TO CLM.') +
   PUT(ENABLED) +
   RQMNAME('SQAL') +
   RNAME('MQABNY.MQSBNY.RPO.BMC.CLMI_REQ_O_B') +
   SCOPE(QMGR) +
   XMITQ('SQAL') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQSBNY.RPO.BMC.RE1_CMS_O') +
*  ALTDATE(2014-07-21) +
*  ALTTIME(06.14.57) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RUC1710 KMS TO REPO - BMC OUTBOUND QUEUE') +
   PUT(ENABLED) +
   RQMNAME('SQND') +
   RNAME('MQABNY.MQSBNY.RPO.BMC.RE1_CMS_O') +
   SCOPE(QMGR) +
   XMITQ('SQND') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQSBNY.RPO.BMC.RE2_CMS_O') +
*  ALTDATE(2014-07-21) +
*  ALTTIME(06.14.58) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RUC1710 KMS TO REPO - BMC OUTBOUND QUEUE') +
   PUT(ENABLED) +
   RQMNAME('SQND') +
   RNAME('MQABNY.MQSBNY.RPO.BMC.RE2_CMS_O') +
   SCOPE(QMGR) +
   XMITQ('SQND') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQSBNY.RPO.BMC.RE3_CMS_O') +
*  ALTDATE(2014-07-21) +
*  ALTTIME(06.14.58) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RUC1710 KMS TO REPO - BMC OUTBOUND QUEUE') +
   PUT(ENABLED) +
   RQMNAME('SQND') +
   RNAME('MQABNY.MQSBNY.RPO.BMC.RE3_CMS_O') +
   SCOPE(QMGR) +
   XMITQ('SQND') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQSBNY.RPO.BMC.RE3_SWIFT_REV_Q') +
*  ALTDATE(2014-05-22) +
*  ALTTIME(09.22.21) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RHO1714 MORGAN STANLEY INTERNATIONAL INBOUND TO REPO') +
   PUT(ENABLED) +
   RQMNAME('SQLD') +
   RNAME('MQVBNY.MQSBNY.RPO.BMC.RE3_SWIFT_REV_Q') +
   SCOPE(QMGR) +
   XMITQ('SQLD') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQSBNY.RPO.BMC.RE4_CMS_O') +
*  ALTDATE(2014-07-21) +
*  ALTTIME(06.14.59) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RUC1710 KMS TO REPO - BMC OUTBOUND QUEUE') +
   PUT(ENABLED) +
   RQMNAME('SQND') +
   RNAME('MQABNY.MQSBNY.RPO.BMC.RE4_CMS_O') +
   SCOPE(QMGR) +
   XMITQ('SQND') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQSBNY.RPO.BMC.RE4_SWIFT_REV_Q') +
*  ALTDATE(2014-05-16) +
*  ALTTIME(09.31.54) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RYC1720 SWIFT REV INPUT QUEUE') +
   PUT(ENABLED) +
   RQMNAME('SQLD') +
   RNAME('MQABNY.MQSBNY.RPO.BMC.RE4_SWIFT_REV_Q') +
   SCOPE(QMGR) +
   XMITQ(' ') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQSCIG.CIG.BMC.CIG_RPO_RSP_O') +
*  ALTDATE(2013-02-26) +
*  ALTTIME(21.26.40) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RIN1597 GSCX ACK/NACK TO CITADEL') +
   PUT(ENABLED) +
   RQMNAME('CIGADPQM_DEV1') +
   RNAME('BNY.TO.CIT.RPO.RESPONSE') +
   SCOPE(QMGR) +
   XMITQ('CIGADPQM_DEV1') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQSCIG.CIG.BMC.CIG_RSP_O') +
*  ALTDATE(2013-02-26) +
*  ALTTIME(21.26.40) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RIN1597 GSCX ACK/NACK TO CITADEL') +
   PUT(ENABLED) +
   RQMNAME('CIGADPQM_DEV1') +
   RNAME('BNY.TO.CIT.RESPONSE') +
   SCOPE(QMGR) +
   XMITQ('CIGADPQM_DEV1') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQSCIG.CIG.BMC.CWT_RSP_O') +
*  ALTDATE(2013-02-26) +
*  ALTTIME(21.26.40) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RIN1597 GSCX ACK/NACK TO CITADEL') +
   PUT(ENABLED) +
   RQMNAME('CIGADPQM_DEV1') +
   RNAME('BNY.TO.CIGCWT.RESPONSE') +
   SCOPE(QMGR) +
   XMITQ('CIGADPQM_DEV1') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQSCIG.CIG.BMC.FEP_RSP_O') +
*  ALTDATE(2013-02-26) +
*  ALTTIME(21.26.40) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RIN1597 GSCX ACK/NACK TO CITADEL') +
   PUT(ENABLED) +
   RQMNAME('CIGADPQM_DEV1') +
   RNAME('BNY.TO.CIGFFP.RESPONSE') +
   SCOPE(QMGR) +
   XMITQ('CIGADPQM_DEV1') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQSLIB.LIB.BMC.LIB_ACK_O') +
*  ALTDATE(2012-05-07) +
*  ALTTIME(22.26.17) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RLV1675 ACK/NACK TO LIBERTY') +
   PUT(ENABLED) +
   RQMNAME('MQSERV1') +
   RNAME('BNY_TO_LIB_RECV1') +
   SCOPE(QMGR) +
   XMITQ('MQSERV1') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQSLIB.LIB.BMC.LIB_RSP_O') +
*  ALTDATE(2012-05-07) +
*  ALTTIME(22.26.17) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RLV1675 CONFIRMATIONS TO LIBERTY') +
   PUT(ENABLED) +
   RQMNAME('MQSERV1') +
   RNAME('BNY_TO_LIB_RECV1') +
   SCOPE(QMGR) +
   XMITQ('MQSERV1') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQSRDQ.QPE.BMC.READQ_RSP_O') +
*  ALTDATE(2010-03-09) +
*  ALTTIME(10.33.08) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RKL1427 RESPONSES TO PIERPOINT/READQ') +
   PUT(ENABLED) +
   RQMNAME('T.READQ.BNY') +
   RNAME('BNY.TO.PIERPONT.Q') +
   SCOPE(QMGR) +
   XMITQ('RDQ_TREADQ') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQVBDS.BMC.BMC.ICIQA_ACK_O') +
*  ALTDATE(2013-05-02) +
*  ALTTIME(05.36.02) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RHW1696 BROADRIDGE TEST QUEUE') +
   PUT(ENABLED) +
   RQMNAME('BDSVD2') +
   RNAME('MQVBNY.MQDADP.IMP.BMC.BNY_TO_ICI_ACKS') +
   SCOPE(QMGR) +
   XMITQ('BDSVD2') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQVBDS.BMC.BMC.ICIQA_RSP_O') +
*  ALTDATE(2013-05-02) +
*  ALTTIME(05.36.02) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RHW1696 BROARDRIDGE TEST QUEUE') +
   PUT(ENABLED) +
   RQMNAME('BDSVD2') +
   RNAME('MQVBNY.MQDADP.IMP.BMC.BNY_TO_ICI_RECV') +
   SCOPE(QMGR) +
   XMITQ('BDSVD2') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQVBNY.BMC.BMC.MICS_APP_SP1_M') +
*  ALTDATE(2014-06-11) +
*  ALTTIME(18.25.42) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR(' ') +
   PUT(ENABLED) +
   RQMNAME('ABJA') +
   RNAME('MQABNY.MQSMRL.MIC.BMC.MICS_CLASS_ACK_O') +
   SCOPE(QMGR) +
   XMITQ('ABJA') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQVBNY.BMC.BMC.RPOALLOC_INS_I') +
*  ALTDATE(2014-07-02) +
*  ALTTIME(22.23.21) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RPT1809 INBOUND MESSAGES FOR REPO ALLOCATIONS.') +
   PUT(ENABLED) +
   RQMNAME('VQDF') +
   RNAME('MQVBNY.MQVBNY.BMC.BMC.RPO_ALLOC_INS_I') +
   SCOPE(QMGR) +
   XMITQ('VQDF') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQVBNY.BMC.BMC.SWIFT_PP_INS_I') +
*  ALTDATE(2012-11-19) +
*  ALTTIME(22.45.36) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RNQ1732 INBOUND FOR ADM') +
   PUT(ENABLED) +
   RQMNAME('BDSVD2') +
   RNAME('MQVBNY.MQVBNY.BMC.BMC.SWIFT_PP_INS_I') +
   SCOPE(QMGR) +
   XMITQ('BDSVD2') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQVBNY.BMC.BMC.SWP_GSCX1_INST') +
*  ALTDATE(2013-07-29) +
*  ALTTIME(03.16.31) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RUJ1775 INBOUND FOR GSCX 1') +
   PUT(ENABLED) +
   RQMNAME('BDSVD2') +
   RNAME('MQVBNY.MQVBNY.BMC.BMC.SWP_GSCX1_INST') +
   SCOPE(QMGR) +
   XMITQ(' ') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQVBNY.BMC.BMC.SWP_GSCX2_INST') +
*  ALTDATE(2013-07-29) +
*  ALTTIME(03.18.58) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RUJ1775 QUEUE FOR SWP INBOUND GSCX 2') +
   PUT(ENABLED) +
   RQMNAME('BDSVD2') +
   RNAME('MQVBNY.MQVBNY.BMC.BMC.SWP_GSCX2_INST') +
   SCOPE(QMGR) +
   XMITQ(' ') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQVBNY.BMC.BMC.SWP_INS_I') +
*  ALTDATE(2012-09-28) +
*  ALTTIME(02.30.29) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RKS1682 QUEUE FOR ADM SWP INBOUND') +
   PUT(ENABLED) +
   RQMNAME('BDSVD2') +
   RNAME('MQVBNY.MQVBNY.BMC.BMC.SWIFT_PP_INS_I') +
   SCOPE(QMGR) +
   XMITQ(' ') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQVBNY.BMC.BMC.SWP_INS_I_1') +
*  ALTDATE(2012-09-28) +
*  ALTTIME(02.30.30) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RKS1682 INBOUND FOR GSCX 1') +
   PUT(ENABLED) +
   RQMNAME('BDSVD2') +
   RNAME('MQVBNY.MQVBNY.BMC.BMC.SWP_GSCX1_INST') +
   SCOPE(QMGR) +
   XMITQ(' ') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQVBNY.BMC.BMC.SWP_INS_I_2') +
*  ALTDATE(2012-09-28) +
*  ALTTIME(02.30.30) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RKS1682 QUEUE FOR SWP INBOUND GSCX 2') +
   PUT(ENABLED) +
   RQMNAME('BDSVD2') +
   RNAME('MQVBNY.MQVBNY.BMC.BMC.SWP_GSCX2_INST') +
   SCOPE(QMGR) +
   XMITQ(' ') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQVBNY.WUI.BMC.BNYM_FRB_INS_H_CU') +
*  ALTDATE(2014-04-22) +
*  ALTTIME(08.13.55) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('REV1697 HI PRIORITY QUEUE FOR BNYM CI') +
   PUT(ENABLED) +
   RQMNAME('VQUN') +
   RNAME('MQABNY.MQVBNY.WUI.BMC.BNYM_FRB_INS_H_CU') +
   SCOPE(QMGR) +
   XMITQ(' ') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQVBNY.WUI.BMC.BNYM_FRB_INS_L_CU') +
*  ALTDATE(2014-04-22) +
*  ALTTIME(08.13.55) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('REV1697 LOWPRIORITY QUEUE FOR BNYM CI') +
   PUT(ENABLED) +
   RQMNAME('VQUN') +
   RNAME('MQABNY.MQVBNY.WUI.BMC.BNYM_FRB_INS_L_CU') +
   SCOPE(QMGR) +
   XMITQ(' ') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQVBNY.WUI.BMC.BNYM_FRB_INS_O_C1') +
*  ALTDATE(2012-08-20) +
*  ALTTIME(21.53.00) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RAK1464 INSTR QUEUE TO FRB FOR BNYM CI') +
   PUT(ENABLED) +
   RQMNAME('VQUN') +
   RNAME('MQABNY.MQVBNY.WUI.BMC.BNYM_FRB_INS_O_C1') +
   SCOPE(QMGR) +
   XMITQ(' ') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQVBNY.WUI.BMC.BNYM_FRB_INS_O_CD') +
*  ALTDATE(2012-10-09) +
*  ALTTIME(23.45.04) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RNC1642 BNYM SURROGATE QUEUE TO FE DEV') +
   PUT(ENABLED) +
   RQMNAME('VQDN') +
   RNAME('MQABNY.MQVBNY.WUI.BMC.BNYM_FRB_INS_O_CD') +
   SCOPE(QMGR) +
   XMITQ(' ') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQVBNY.WUI.BMC.BNYM_FRB_INS_O_CU') +
*  ALTDATE(2012-10-04) +
*  ALTTIME(09.38.30) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RPW1677 BNYM SURROGATE QUEUE TO FE QA') +
   PUT(ENABLED) +
   RQMNAME('VQUN') +
   RNAME('MQABNY.MQVBNY.WUI.BMC.BNYM_FRB_INS_O_CU') +
   SCOPE(QMGR) +
   XMITQ(' ') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQVBNY.WUI.BMC.GNMA_FRB_INS_O_C1') +
*  ALTDATE(2012-08-20) +
*  ALTTIME(21.53.00) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RAK1464 INSTR QUEUE TO FRB FOR GNMA CI') +
   PUT(ENABLED) +
   RQMNAME('VQUN') +
   RNAME('MQABNY.MQVBNY.WUI.BMC.GNMA_FRB_INS_O_C1') +
   SCOPE(QMGR) +
   XMITQ(' ') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQVBNY.WUI.BMC.GNMA_FRB_INS_O_CD') +
*  ALTDATE(2012-10-09) +
*  ALTTIME(23.45.04) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RNC1642 GNMA SURROGATE QUEUE TO FE DEV') +
   PUT(ENABLED) +
   RQMNAME('VQDN') +
   RNAME('MQABNY.MQVBNY.WUI.BMC.GNMA_FRB_INS_O_CD') +
   SCOPE(QMGR) +
   XMITQ(' ') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQVBNY.WUI.BMC.GNMA_FRB_INS_O_CU') +
*  ALTDATE(2012-10-04) +
*  ALTTIME(09.38.30) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RPW1677 GNMA SURROGATE QUEUE TO FE QA') +
   PUT(ENABLED) +
   RQMNAME('VQUN') +
   RNAME('MQABNY.MQVBNY.WUI.BMC.GNMA_FRB_INS_O_CU') +
   SCOPE(QMGR) +
   XMITQ(' ') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQVBNYM.TLX.BMC.SWIFTNET_BDS_O') +
*  ALTDATE(2014-06-11) +
*  ALTTIME(11.31.38) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RPB1641 BMC SWIFTNET INTERMEDIATE QUEUE') +
   PUT(ENABLED) +
   RQMNAME('VQDF') +
   RNAME('MQVBNY.MQVBNY.TLX.BMC.OUTPUT2') +
   SCOPE(QMGR) +
   XMITQ('VQDF') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQWBMO.BMO.BMC.BMOCM_ACK_O') +
*  ALTDATE(2014-07-23) +
*  ALTTIME(14.43.27) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RAL1578 ACKNAK QUEUE FOR BMOCM') +
   PUT(ENABLED) +
   RQMNAME('CMEF3XS.DEV.QM02') +
   RNAME('BONY.BMO.DEV.ACKNAK.QL') +
   SCOPE(QMGR) +
   XMITQ('BMOCMDEV') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQWBMO.BMO.BMC.BMOCM_RSP_O') +
*  ALTDATE(2014-07-23) +
*  ALTTIME(14.43.18) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RAL1578 CONFIRM QUEUE FOR BMOCM') +
   PUT(ENABLED) +
   RQMNAME('CMEF3XS.DEV.QM02') +
   RNAME('BONY.BMO.DEV.CONF.QL') +
   SCOPE(QMGR) +
   XMITQ('BMOCMDEV') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQWBNY.FHF.BMC.FHF_INS_O') +
*  ALTDATE(2010-09-23) +
*  ALTTIME(05.16.43) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RDV1444 TO SEND MESSAGES TO FHF.') +
   PUT(ENABLED) +
   RQMNAME('WQYB') +
   RNAME('MQABNY.MQWBNY.FHF.BMC.FHF_INS_O') +
   SCOPE(QMGR) +
   XMITQ('WQYB') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQWBNY.LMS.BMC.BMC2LMS_INPUT1') +
*  ALTDATE(2014-04-05) +
*  ALTTIME(10.26.33) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('REQ# 520') +
   PUT(ENABLED) +
   RQMNAME('WQDQ') +
   RNAME('MQABNY.MQWBNY.LMS.BMC.BMC2LMS_INPUT1') +
   SCOPE(QMGR) +
   XMITQ('WQDQ') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQWBNY.LMS.BMC.BMC2LMS_INPUT2') +
*  ALTDATE(2014-04-05) +
*  ALTTIME(10.26.37) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('REQ# 520') +
   PUT(ENABLED) +
   RQMNAME('WQDQ') +
   RNAME('MQABNY.MQWBNY.LMS.BMC.BMC2LMS_INPUT2') +
   SCOPE(QMGR) +
   XMITQ('WQDQ') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQWBNY.LMS.BMC.BMC2LMS_INPUT3') +
*  ALTDATE(2014-04-05) +
*  ALTTIME(10.26.40) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('REQ# 520') +
   PUT(ENABLED) +
   RQMNAME('WQDQ') +
   RNAME('MQABNY.MQWBNY.LMS.BMC.BMC2LMS_INPUT3') +
   SCOPE(QMGR) +
   XMITQ('WQDQ') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQWBNY.LMS.BMC.BMC2LMS_INPUT5') +
*  ALTDATE(2014-04-05) +
*  ALTTIME(10.26.44) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('REQ# 520') +
   PUT(ENABLED) +
   RQMNAME('WQDQ') +
   RNAME('MQABNY.MQWBNY.LMS.BMC.BMC2LMS_INPUT5') +
   SCOPE(QMGR) +
   XMITQ('WQDQ') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQWBNY.PRA.BMC.PRA3_INS_O') +
*  ALTDATE(2010-09-22) +
*  ALTTIME(08.25.07) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RJA1491 TO SEND MESSAGES TO PRA.') +
   PUT(ENABLED) +
   RQMNAME('WQYD') +
   RNAME('MQABNY.MQWBNY.PRA.BMC.PRA3_INS_O') +
   SCOPE(QMGR) +
   XMITQ('WQYD') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQWBNY.VPM.BMC.VPM_RSP_O') +
*  ALTDATE(2010-09-24) +
*  ALTTIME(07.23.56) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RWZ1440 TO SEND RESPONSES TO VPM.') +
   PUT(ENABLED) +
   RQMNAME('WQYC') +
   RNAME('MQABNY.MQWBNY.VPM.BMC.VPM_RSP_O') +
   SCOPE(QMGR) +
   XMITQ('WQYC') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQWBNY.XAW.BMC.SWF_INS_O_C') +
*  ALTDATE(2012-03-07) +
*  ALTTIME(21.35.53) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RSK1648 THIS IS TO RECEIVE MESSAGES FROM GTM.') +
   PUT(ENABLED) +
   RQMNAME('WQAH') +
   RNAME('MQABNY.MQWBNY.XAW.BMC.SWF_INS_O_C') +
   SCOPE(QMGR) +
   XMITQ('WQAH') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQWSNG.PH3.BMC.ADM_CFI_RSP_O') +
*  ALTDATE(2012-04-24) +
*  ALTTIME(11.26.39) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RSZ1645 ADM RESP QUEUE FOR CANTOR') +
   PUT(ENABLED) +
   RQMNAME('P3TEST') +
   RNAME('BNY_TO_CFI_TRI_TEST_RCV') +
   SCOPE(QMGR) +
   XMITQ('P3TEST') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQWSNG.PH3.BMC.ADM_DSA_RSP_O') +
*  ALTDATE(2012-04-24) +
*  ALTTIME(11.26.24) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RSZ1645 ADM RESP QUEUE FOR DAIWA') +
   PUT(ENABLED) +
   RQMNAME('P3TEST') +
   RNAME('BNY_TO_DAS_TRI_TEST_RCV') +
   SCOPE(QMGR) +
   XMITQ('P3TEST') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQWSNG.PH3.BMC.ADM_YPD_RSP_O') +
*  ALTDATE(2012-04-24) +
*  ALTTIME(11.26.12) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RSZ1645 ADM RESP QUEUE FOR CREDIT AGRICOLE') +
   PUT(ENABLED) +
   RQMNAME('P3TEST') +
   RNAME('BNY_TO_CLA_TRI_TEST_RCV') +
   SCOPE(QMGR) +
   XMITQ('P3TEST') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQWSNG.PH3.BMC.ADM_YZU_RSP_O') +
*  ALTDATE(2012-04-24) +
*  ALTTIME(11.26.01) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RSZ1645 ADM RESP QUEUE FOR CREDIT AGRICOLE') +
   PUT(ENABLED) +
   RQMNAME('P3TEST') +
   RNAME('BNY_TO_CLS_TRI_TEST_RCV') +
   SCOPE(QMGR) +
   XMITQ('P3TEST') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQWSNG.PH3.BMC.IMX_BAK_RSP_O') +
*  ALTDATE(2012-04-24) +
*  ALTTIME(11.25.52) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RSZ1645 RESP QUEUE FOR BAKER') +
   PUT(ENABLED) +
   RQMNAME('P3TEST') +
   RNAME('BNY_TO_BAK_TEST_RCV') +
   SCOPE(QMGR) +
   XMITQ('P3TEST') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQWSNG.PH3.BMC.IMX_BBV_RSP_O') +
*  ALTDATE(2012-04-24) +
*  ALTTIME(11.25.45) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RSZ1645 RESP QUEUE FOR BBVP') +
   PUT(ENABLED) +
   RQMNAME('P3TEST') +
   RNAME('BNY_TO_BBV_TEST_RCV') +
   SCOPE(QMGR) +
   XMITQ('P3TEST') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQWSNG.PH3.BMC.IMX_BGC_RSP_O') +
*  ALTDATE(2012-04-24) +
*  ALTTIME(11.25.37) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RSZ1645 RESP QUEUE FOR CANTOR') +
   PUT(ENABLED) +
   RQMNAME('P3TEST') +
   RNAME('BNY_TO_BGC_TEST_RCV') +
   SCOPE(QMGR) +
   XMITQ('P3TEST') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQWSNG.PH3.BMC.IMX_BLS_RSP_O') +
*  ALTDATE(2012-04-24) +
*  ALTTIME(11.25.28) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RSZ1645 RESP QUEUE FOR BBVA') +
   PUT(ENABLED) +
   RQMNAME('P3TEST') +
   RNAME('BNY_TO_BLS_TEST_RCV') +
   SCOPE(QMGR) +
   XMITQ('P3TEST') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQWSNG.PH3.BMC.IMX_CCI_RSP_O') +
*  ALTDATE(2012-04-24) +
*  ALTTIME(11.24.53) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RSZ1645 RESP QUEUE FOR CARTY') +
   PUT(ENABLED) +
   RQMNAME('P3TEST') +
   RNAME('BNY_TO_CCI_TEST_RCV') +
   SCOPE(QMGR) +
   XMITQ('P3TEST') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQWSNG.PH3.BMC.IMX_CFC_RSP_O') +
*  ALTDATE(2012-04-24) +
*  ALTTIME(11.24.38) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RSZ1645 RESP QUEUE FOR CANTOR') +
   PUT(ENABLED) +
   RQMNAME('P3TEST') +
   RNAME('BNY_TO_CFC_TEST_RCV') +
   SCOPE(QMGR) +
   XMITQ('P3TEST') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQWSNG.PH3.BMC.IMX_CFD_RSP_O') +
*  ALTDATE(2012-04-24) +
*  ALTTIME(11.24.29) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RSZ1645 RESP QUEUE FOR CANTOR') +
   PUT(ENABLED) +
   RQMNAME('P3TEST') +
   RNAME('BNY_TO_CFD_TEST_RCV') +
   SCOPE(QMGR) +
   XMITQ('P3TEST') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQWSNG.PH3.BMC.IMX_CFI_RSP_O') +
*  ALTDATE(2012-04-24) +
*  ALTTIME(11.24.20) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RSZ1645 RESP QUEUE FOR CANTOR') +
   PUT(ENABLED) +
   RQMNAME('P3TEST') +
   RNAME('BNY_TO_CFI_TEST_RCV') +
   SCOPE(QMGR) +
   XMITQ('P3TEST') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQWSNG.PH3.BMC.IMX_CFM_RSP_O') +
*  ALTDATE(2012-04-24) +
*  ALTTIME(11.24.11) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RSZ1645 RESP QUEUE FOR CANTOR') +
   PUT(ENABLED) +
   RQMNAME('P3TEST') +
   RNAME('BNY_TO_CFM_TEST_RCV') +
   SCOPE(QMGR) +
   XMITQ('P3TEST') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQWSNG.PH3.BMC.IMX_CLA_RSP_O') +
*  ALTDATE(2012-04-24) +
*  ALTTIME(11.24.03) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RSZ1645 RESP QUEUE FOR CREDIT AGRICOLE') +
   PUT(ENABLED) +
   RQMNAME('P3TEST') +
   RNAME('BNY_TO_CLA_TEST_RCV') +
   SCOPE(QMGR) +
   XMITQ('P3TEST') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQWSNG.PH3.BMC.IMX_CLS_RSP_O') +
*  ALTDATE(2012-04-24) +
*  ALTTIME(11.23.55) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RSZ1645 RESP QUEUE FOR CREDIT AGRICOLE') +
   PUT(ENABLED) +
   RQMNAME('P3TEST') +
   RNAME('BNY_TO_CLS_TEST_RCV') +
   SCOPE(QMGR) +
   XMITQ('P3TEST') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQWSNG.PH3.BMC.IMX_DAS_RSP_O') +
*  ALTDATE(2012-04-24) +
*  ALTTIME(11.23.47) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RSZ1645 RESP QUEUE FOR DAIWA') +
   PUT(ENABLED) +
   RQMNAME('P3TEST') +
   RNAME('BNY_TO_DAS_TEST_RCV') +
   SCOPE(QMGR) +
   XMITQ('P3TEST') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQWSNG.PH3.BMC.IMX_DSA_RSP_O') +
*  ALTDATE(2012-04-24) +
*  ALTTIME(11.23.35) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RSZ1645 RESP QUEUE FOR DAIWA') +
   PUT(ENABLED) +
   RQMNAME('P3TEST') +
   RNAME('BNY_TO_DSA_TEST_RCV') +
   SCOPE(QMGR) +
   XMITQ('P3TEST') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQWSNG.PH3.BMC.IMX_FBS_RSP_O') +
*  ALTDATE(2012-04-24) +
*  ALTTIME(11.23.24) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RSZ1645 RESP QUEUE FOR US BANK') +
   PUT(ENABLED) +
   RQMNAME('P3TEST') +
   RNAME('BNY_TO_FBS_TEST_RCV') +
   SCOPE(QMGR) +
   XMITQ('P3TEST') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQWSNG.PH3.BMC.IMX_FNB_RSP_O') +
*  ALTDATE(2012-04-24) +
*  ALTTIME(11.23.13) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RHK1552 RESP QUEUE FOR WELLS FARGO') +
   PUT(ENABLED) +
   RQMNAME('P3TEST') +
   RNAME('BNY_TO_FNB_TEST_RCV') +
   SCOPE(QMGR) +
   XMITQ('P3TEST') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQWSNG.PH3.BMC.IMX_FUI_RSP_O') +
*  ALTDATE(2012-04-24) +
*  ALTTIME(11.23.05) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RHK1552 RESP QUEUE FOR WELLS FARGO') +
   PUT(ENABLED) +
   RQMNAME('P3TEST') +
   RNAME('BNY_TO_FUI_TEST_RCV') +
   SCOPE(QMGR) +
   XMITQ('P3TEST') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQWSNG.PH3.BMC.IMX_FUR_RSP_O') +
*  ALTDATE(2012-04-24) +
*  ALTTIME(11.22.56) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RHK1552 RESP QUEUE FOR WELLS FARGO') +
   PUT(ENABLED) +
   RQMNAME('P3TEST') +
   RNAME('BNY_TO_FUR_TEST_RCV') +
   SCOPE(QMGR) +
   XMITQ('P3TEST') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQWSNG.PH3.BMC.IMX_FUT_RSP_O') +
*  ALTDATE(2012-04-24) +
*  ALTTIME(11.22.47) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RHK1552 RESP QUEUE FOR WELLS FARGO') +
   PUT(ENABLED) +
   RQMNAME('P3TEST') +
   RNAME('BNY_TO_FUT_TEST_RCV') +
   SCOPE(QMGR) +
   XMITQ('P3TEST') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQWSNG.PH3.BMC.IMX_MFI_RSP_O') +
*  ALTDATE(2012-04-24) +
*  ALTTIME(11.22.38) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RSZ1645 RESP QUEUE FOR CANTOR') +
   PUT(ENABLED) +
   RQMNAME('P3TEST') +
   RNAME('BNY_TO_MFI_TEST_RCV') +
   SCOPE(QMGR) +
   XMITQ('P3TEST') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQWSNG.PH3.BMC.IMX_MSI_RSP_O') +
*  ALTDATE(2012-04-24) +
*  ALTTIME(11.22.31) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RSZ1645 RESP QUEUE FOR MF GLOBAL') +
   PUT(ENABLED) +
   RQMNAME('P3TEST') +
   RNAME('BNY_TO_MSI_TEST_RCV') +
   SCOPE(QMGR) +
   XMITQ('P3TEST') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQWSNG.PH3.BMC.IMX_NOR_RSP_O') +
*  ALTDATE(2012-04-24) +
*  ALTTIME(11.22.21) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RHK1552 RESP QUEUE FOR WELLS FARGO') +
   PUT(ENABLED) +
   RQMNAME('P3TEST') +
   RNAME('BNY_TO_NOR_TEST_RCV') +
   SCOPE(QMGR) +
   XMITQ('P3TEST') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQWSNG.PH3.BMC.IMX_NWA_RSP_O') +
*  ALTDATE(2012-04-24) +
*  ALTTIME(11.22.12) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RSZ1645 RESP QUEUE FOR NEWMAN') +
   PUT(ENABLED) +
   RQMNAME('P3TEST') +
   RNAME('BNY_TO_NWA_TEST_RCV') +
   SCOPE(QMGR) +
   XMITQ('P3TEST') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQWSNG.PH3.BMC.IMX_POP_RSP_O') +
*  ALTDATE(2012-04-24) +
*  ALTTIME(11.22.04) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RSZ1645 RESP QUEUE FOR POPULAR') +
   PUT(ENABLED) +
   RQMNAME('P3TEST') +
   RNAME('BNY_TO_POP_TEST_RECV') +
   SCOPE(QMGR) +
   XMITQ('P3TEST') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQWSNG.PH3.BMC.IMX_RCA_RSP_O') +
*  ALTDATE(2012-04-24) +
*  ALTTIME(11.21.56) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RSZ1645 RESP QUEUE FOR RCAP') +
   PUT(ENABLED) +
   RQMNAME('P3TEST') +
   RNAME('BNY_TO_RCA_TEST_RCV') +
   SCOPE(QMGR) +
   XMITQ('P3TEST') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQWSNG.PH3.BMC.IMX_SNW_RSP_O') +
*  ALTDATE(2012-04-24) +
*  ALTTIME(11.21.48) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RSZ1645 RESP QUEUE FOR SEATTLE NORTHWEST') +
   PUT(ENABLED) +
   RQMNAME('P3TEST') +
   RNAME('BNY_TO_SNW_TEST_RCV') +
   SCOPE(QMGR) +
   XMITQ('P3TEST') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQWSNG.PH3.BMC.IMX_TAS_RSP_O') +
*  ALTDATE(2012-04-24) +
*  ALTTIME(11.21.40) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RSZ1645 RESP QUEUE FOR RCAP') +
   PUT(ENABLED) +
   RQMNAME('P3TEST') +
   RNAME('BNY_TO_TAS_TEST_RCV') +
   SCOPE(QMGR) +
   XMITQ('P3TEST') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQWSNG.PH3.BMC.IMX_VIN_RSP_O') +
*  ALTDATE(2012-04-24) +
*  ALTTIME(11.21.32) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RSZ1645 RESP QUEUE FOR VINING') +
   PUT(ENABLED) +
   RQMNAME('P3TEST') +
   RNAME('BNY_TO_VIN_TEST_RCV') +
   SCOPE(QMGR) +
   XMITQ('P3TEST') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQWSNG.PH3.BMC.IMX_WSL_RSP_O') +
*  ALTDATE(2012-04-24) +
*  ALTTIME(11.21.24) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RHK1552 RESP QUEUE FOR WELLS FARGO') +
   PUT(ENABLED) +
   RQMNAME('P3TEST') +
   RNAME('BNY_TO_WSL_TEST_RCV') +
   SCOPE(QMGR) +
   XMITQ('P3TEST') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQWSNG.PH3.BMC.MIS_CFM_RSP_O') +
*  ALTDATE(2012-04-24) +
*  ALTTIME(11.21.16) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RSZ1645 BONYGRAM RESP QUEUE FOR CANTOR') +
   PUT(ENABLED) +
   RQMNAME('P3TEST') +
   RNAME('BNY_TO_CFM_MIS_TEST_RCV') +
   SCOPE(QMGR) +
   XMITQ('P3TEST') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQWSNG.PH3.BMC.MIS_MFI_RSP_O') +
*  ALTDATE(2012-04-24) +
*  ALTTIME(11.21.06) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RSZ1645 BONYGRAM RESP QUEUE FOR CANTOR') +
   PUT(ENABLED) +
   RQMNAME('P3TEST') +
   RNAME('BNY_TO_MFI_MIS_TEST_RCV') +
   SCOPE(QMGR) +
   XMITQ('P3TEST') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQWSNG.PH3.BMC.MIS_SNG_RSP_O') +
*  ALTDATE(2014-07-14) +
*  ALTTIME(07.51.22) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RVG1630 SUNGARD REPLY QUEUE') +
   PUT(ENABLED) +
   RQMNAME('P3TEST') +
   RNAME('BNY_TO_SGD_MIS_TEST_RCV') +
   SCOPE(QMGR) +
   XMITQ('P3TEST') +
   REPLACE
DEFINE QREMOTE('MQABNY.MQWSNG.PH3.BMC.SNG_TEST_RSP_O') +
*  ALTDATE(2013-10-11) +
*  ALTTIME(09.46.35) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('REY1677 SNG TEST RESPONSE QUEUE') +
   PUT(ENABLED) +
   RQMNAME('P3TEST') +
   RNAME('BNY_TO_SGD_TEST_RCV') +
   SCOPE(QMGR) +
   XMITQ('P3TEST') +
   REPLACE
DEFINE QALIAS('MQBBNY.MQVBNY.SWF.BDS.OUTPUT') +
*  ALTDATE(2014-04-23) +
*  ALTTIME(04.06.18) +
   TARGET('MQABNY.MQVBNYM.TLX.BMC.SWIFTNET_BDS_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RPB1641 BMC SWIFTNET INTERMEDIATE QUEUE') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QLOCAL('MQD4') +
   ACCTQ(QMGR) +
*  ALTDATE(2012-02-22) +
*  ALTTIME(15.26.54) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2012-02-22) +
*  CRTIME(15.26.29) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('TransmitQ to MQD4') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ('SYSTEM.CHANNEL.INITQ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   TRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(40) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(120000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA('ABKA.TO.MQD4') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(XMITQ) +
   REPLACE
DEFINE QREMOTE('MQD4.REMOTE.QUEUE') +
*  ALTDATE(2012-02-22) +
*  ALTTIME(15.26.29) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(9) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('Queue for accessing TARGET.QUEUE on MQD4') +
   PUT(ENABLED) +
   RQMNAME('MQD4') +
   RNAME('MQD4.TARGET.QUEUE') +
   SCOPE(QMGR) +
   XMITQ('MQD4') +
   REPLACE
DEFINE QLOCAL('MQDADP.MQABNY.BMC.IMP.ACC_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-04-22) +
*  ALTTIME(14.58.43) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-04-22) +
*  CRTIME(14.55.12) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RAN1331 GSCX INSTRUCTIONS FROM US CLEARING') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQDADP.MQABNY.BMC.IMP.AMH_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-09-08) +
*  ALTTIME(04.57.50) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-09-08) +
*  CRTIME(04.57.50) +
*  CURDEPTH(1) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RVQ1408 GSCX INSTRUCTIONS FROM AMHERST') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(OK) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQDADP.MQABNY.BMC.IMP.BAS_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.44) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(14.12.44) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RAN1331 GSCX INSTRUCTIONS FROM BANK OF AMERICA') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQDADP.MQABNY.BMC.IMP.BMO_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-04-22) +
*  ALTTIME(14.58.23) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-04-22) +
*  CRTIME(14.55.33) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RAN1331 GSCX INSTRUCTIONS FROM BANK OF MONTREAL') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQDADP.MQABNY.BMC.IMP.BNK_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.44) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(14.12.44) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RAN1331 GSCX INSTRUCTIONS FROM BANK OF AMERICA') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQDADP.MQABNY.BMC.IMP.BNP_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2013-07-15) +
*  ALTTIME(03.34.28) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2013-07-15) +
*  CRTIME(03.34.28) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RDO1687 BNP INSTRUCTIONS') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(10000) +
   MAXMSGL(11000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQDADP.MQABNY.BMC.IMP.BZW_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.44) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(14.12.44) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RAN1331 GSCX INSTRUCTIONS FROM BARCLAYS') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQDADP.MQABNY.BMC.IMP.CITI_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-06-21) +
*  ALTTIME(11.58.03) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-06-21) +
*  CRTIME(11.58.03) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RYM1493 ADP INSTRUCTIONS') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(10000) +
   MAXMSGL(5000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQDADP.MQABNY.BMC.IMP.CRT_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-09-24) +
*  ALTTIME(14.30.48) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-09-24) +
*  CRTIME(14.30.48) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RKA1505 SETTL INSTR. FOR CRT-CAPITAL.') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQDADP.MQABNY.BMC.IMP.ETRD_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2011-07-13) +
*  ALTTIME(01.24.58) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2011-07-13) +
*  CRTIME(01.24.58) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RFS1595 SETTL INSTR. FOR ETRADE.') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQDADP.MQABNY.BMC.IMP.FOR_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-03-08) +
*  ALTTIME(11.27.41) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-08) +
*  CRTIME(11.27.41) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RPF1430 GSCX INSTRUCTIONS FROM MEES PIERSON') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQDADP.MQABNY.BMC.IMP.GRIF_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.44) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(14.12.44) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RND1316 GRIFFEN/ADP GSCX INSTRUCTIONS') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQDADP.MQABNY.BMC.IMP.HVB_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.44) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(14.12.44) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RAN1331 GSCX INSTRUCTIONS FROM HYPO VERIENS') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQDADP.MQABNY.BMC.IMP.ICIQA_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2013-05-02) +
*  ALTTIME(07.06.43) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2013-05-02) +
*  CRTIME(07.06.43) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RIO1707 BROADRIDGE TEST QUEUE') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(50000) +
   MAXMSGL(9000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQDADP.MQABNY.BMC.IMP.ING_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-06-14) +
*  ALTTIME(13.01.54) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-06-14) +
*  CRTIME(13.01.54) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RCA1472 ADP INSTRUCTIONS') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(10000) +
   MAXMSGL(5000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQDADP.MQABNY.BMC.IMP.JEF_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-04-22) +
*  ALTTIME(14.58.05) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-04-22) +
*  CRTIME(14.56.02) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RAN1331 GSCX INSTRUCTIONS FROM JEFFERIES') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQDADP.MQABNY.BMC.IMP.JMC_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.44) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(14.12.44) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RAN1331 GSCX INSTRUCTIONS FROM JP MPRGAN CHASE') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQDADP.MQABNY.BMC.IMP.KGS_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2012-03-21) +
*  ALTTIME(21.33.21) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2012-03-21) +
*  CRTIME(21.33.21) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RMV1600 ADP INSTRUCTIONS') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQDADP.MQABNY.BMC.IMP.LBBW_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.44) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(14.12.44) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RAN1331 GSCX INSTRUCTIONS FROM LANDS BANK') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQDADP.MQABNY.BMC.IMP.LEG_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.44) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(14.12.44) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RAN1331 GSCX INSTRUCTIONS FROM LEGG MASON') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQDADP.MQABNY.BMC.IMP.MCD_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.44) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(14.12.44) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RAN1331 GSCX INSTRUCTIONS FROM KEY BANK') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQDADP.MQABNY.BMC.IMP.MZS_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2012-06-13) +
*  ALTTIME(16.55.39) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-04-22) +
*  CRTIME(14.56.24) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RAN1331 GSCX INSTRUCTIONS FROM MIZUHO') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQDADP.MQABNY.BMC.IMP.NAB_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.44) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(14.12.44) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RAN1331 GSCX INSTRUCTIONS FROM NATIONAL AUSTRALIA BANK') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(OK) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQDADP.MQABNY.BMC.IMP.NOMUS_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-04-19) +
*  ALTTIME(16.50.44) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-04-19) +
*  CRTIME(16.50.44) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RVO1493 ADP INSTRUCTIONS') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQDADP.MQABNY.BMC.IMP.NSB_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.44) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(14.12.44) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RAN1331 GSCX INSTRUCTIONS FROM NESBIT BURNS') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQDADP.MQABNY.BMC.IMP.OPNH_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.44) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(14.12.44) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RAN1331 GSCX INSTRUCTIONS FROM OPPENHEIMER') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQDADP.MQABNY.BMC.IMP.PJC_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.44) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(14.12.44) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RAN1331 GSCX INSTRUCTIONS FROM PIPER JEFFERIES') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQDADP.MQABNY.BMC.IMP.QPE_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2012-04-17) +
*  ALTTIME(13.58.45) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2012-04-16) +
*  CRTIME(21.44.24) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RRX1663 GSCX MESSAGES FROM PIERPOINT') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQDADP.MQABNY.BMC.IMP.RBCD_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-05-28) +
*  ALTTIME(14.44.29) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-05-28) +
*  CRTIME(14.37.33) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RAN1331 GSCX INSTRUCTIONS FROM RBCDAIN') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQDADP.MQABNY.BMC.IMP.RBC_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.44) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(14.12.44) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RAN1331 GSCX INSTRUCTIONS FROM RBC CAPITAL') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQDADP.MQABNY.BMC.IMP.RGE_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-03-15) +
*  ALTTIME(14.24.28) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-08) +
*  CRTIME(09.20.54) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RDC1383 GSCX INSTRUCTIONS FROM RIDGE CLEARING') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(50000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQDADP.MQABNY.BMC.IMP.SAM_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.44) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(14.12.44) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RAN1331 GSCX INSTRUCTIONS FROM SWISS AMERICAN SECURITIES') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQDADP.MQABNY.BMC.IMP.SCO_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.44) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(14.12.44) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RAN1331 GSCX INSTRUCTIONS FROM SCOTIA CAPITAL') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQDADP.MQABNY.BMC.IMP.SG_PD_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-05-11) +
*  ALTTIME(20.18.27) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-05-11) +
*  CRTIME(20.18.27) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RUC1410 SETTL INSTR. FOR SOCIETE GENERALE - PRIMERY DEALER') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQDADP.MQABNY.BMC.IMP.SUNT_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.44) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(14.12.44) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RAN1331 GSCX INSTRUCTIONS FROM SUNTRUST') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQDADP.MQABNY.BMC.IMP.TMS_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.44) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(14.12.44) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RAN1331 GSCX INSTRUCTIONS FROM BANK OF TOKYO') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQDADP.MQABNY.BMC.IMP.UBS_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2012-08-20) +
*  ALTTIME(15.37.29) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2012-08-20) +
*  CRTIME(15.36.47) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RWX1454 GSCX INSTRUCTIONS FROM UBS') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQDADP.MQABNY.BMC.IMP.WCF_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2011-07-28) +
*  ALTTIME(07.25.12) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2011-07-28) +
*  CRTIME(07.25.12) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('ROA1514 SETTL INSTR. FOR WELLSFARGO.') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQDADP.MQABNY.BMC.IMP.WLB_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.44) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(14.12.44) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RAN1331 GSCX INSTRUCTIONS FROM WEST LB') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQLBMO.MQABNY.BMC.OCE.NSB_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2013-01-09) +
*  ALTTIME(21.42.48) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2013-01-09) +
*  CRTIME(21.42.48) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RIH1684 GSCX MESSAGES FROM BMO-NESBITT BURNS') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQLMTX.MQABNY.BMC.TBL.CMI_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-03-12) +
*  ALTTIME(14.43.45) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-12) +
*  CRTIME(14.43.45) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('ROC1407 GSCX INSTRUCTIONS FROM BNY CAPITAL MARKETS') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQLMTX.MQABNY.BMC.TBL.GLE_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-10-05) +
*  ALTTIME(07.54.34) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-10-05) +
*  CRTIME(07.54.34) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RRK1452 GSCX INSTRUCTIONS FROM GLEACHER') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQLMTX.MQABNY.BMC.TBL.PLM_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-03-12) +
*  ALTTIME(14.43.45) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-12) +
*  CRTIME(14.43.45) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('ROC1407 GSCX INSTRUCTIONS FROM PALOMA') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQLMTX.MQABNY.BMC.TBL.SCB_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-03-12) +
*  ALTTIME(14.43.45) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-12) +
*  CRTIME(14.43.45) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('ROC1407 GSCX INSTRUCTIONS FROM STANDARD CHARTERED BANK') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQLMTX.MQABNY.BMC.TBL.SSS_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-03-12) +
*  ALTTIME(14.43.45) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-12) +
*  CRTIME(14.43.45) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('ROC1407 GSCX INSTRUCTIONS FROM SOUTH STREET') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQMBBH.MQABNY.BMC.BBP.BBP_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2011-04-04) +
*  ALTTIME(10.21.37) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2011-04-04) +
*  CRTIME(10.21.37) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RRB1522 SETTL INSTR. FOR BROWN BROTHERS.') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQMBBH.MQABNY.BMC.BBP.HAR_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2011-04-04) +
*  ALTTIME(10.21.37) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2011-04-04) +
*  CRTIME(10.21.37) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RRB1522 SETTL INSTR. FOR HARRIMAN.') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQMBNY.MQABNY.BMC.GTM.GTM_SWF_INS_I_C') +
   ACCTQ(QMGR) +
*  ALTDATE(2012-03-02) +
*  ALTTIME(12.02.47) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2012-03-02) +
*  CRTIME(12.02.47) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RQK1557 TO SEND THE SWIFT MESSAGES TO BMC FOR XAW.') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(50000) +
   MAXMSGL(12000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(ENABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQMMEL.MQABNY.BMC.CMS.GSC_INS_I_A') +
   ACCTQ(QMGR) +
*  ALTDATE(2013-03-14) +
*  ALTTIME(10.05.28) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2013-03-14) +
*  CRTIME(10.05.28) +
*  CURDEPTH(8) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RUI1784 INPUT QUEUE FOR CMS UAT TEST') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(12000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(OK) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQMMEL.MQABNY.BMC.CMS.GSC_INS_I_S') +
   ACCTQ(QMGR) +
*  ALTDATE(2013-03-14) +
*  ALTTIME(10.05.28) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2013-03-14) +
*  CRTIME(10.05.28) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RUI1784 INPUT QUEUE FOR CMS SIN TEST') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(12000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQMMEL.MQABNY.BMC.CMS.GSC_INS_I_U') +
   ACCTQ(QMGR) +
*  ALTDATE(2013-03-14) +
*  ALTTIME(10.05.29) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2013-03-14) +
*  CRTIME(10.05.29) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RUI1784 INPUT QUEUE FOR CMS UNIT TEST') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(12000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(OK) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQMMOR.MQABNY.BMC.FIS.DWR_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-08-20) +
*  ALTTIME(12.52.55) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-08-20) +
*  CRTIME(12.52.55) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RGM1488 MSSB INSTRUCTIONS') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(12000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQMMOR.MQABNY.BMC.FIS.DWR_INS_I_D') +
   ACCTQ(QMGR) +
*  ALTDATE(2012-11-12) +
*  ALTTIME(20.25.50) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2012-11-12) +
*  CRTIME(20.25.50) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('ROC1662 SETTL INSTR FROM MS-DEANWITTER-MQ35') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQMMOR.MQABNY.BMC.FIS.DWR_INS_I_ND') +
   ACCTQ(QMGR) +
*  ALTDATE(2012-11-12) +
*  ALTTIME(20.25.50) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2012-11-12) +
*  CRTIME(20.25.50) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('ROC1662 SETTL INSTR FROM MS-DEANWITTER-MQ72') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQMMOR.MQABNY.BMC.MOR.MORDOM_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2013-07-24) +
*  ALTTIME(05.30.52) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2013-07-24) +
*  CRTIME(05.30.52) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RRL1744 SETTL INSTR FROM MS-DOMESTIC') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQMMOR.MQABNY.BMC.MOR.MS_DOM_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2013-08-09) +
*  ALTTIME(16.56.39) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2013-08-09) +
*  CRTIME(16.56.39) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RNV1700 SETTL INSTR FROM MS-DOMESTIC') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQMMOR.MQABNY.BMC.MOR.MS_GCF_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-01-27) +
*  ALTTIME(14.13.22) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2013-08-09) +
*  CRTIME(16.56.39) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RNV1700 SETTL INSTR FROM MS-GCF') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQMMOR.MQABNY.BMC.MOR.MS_REPO_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2013-08-09) +
*  ALTTIME(16.56.39) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2013-08-09) +
*  CRTIME(16.56.39) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RNV1700 SETTL INSTR FROM MS-DOMESTIC') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQMSAL.MQABNY.BMC.SAL.SAB_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2013-02-26) +
*  ALTTIME(21.23.07) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2013-02-26) +
*  CRTIME(21.23.07) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RWH1678 INSTRUCTIONS IN SSB FORMAT.') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQMSAL.MQABNY.BMC.SAL.SAL_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2013-02-26) +
*  ALTTIME(21.23.28) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2013-02-26) +
*  CRTIME(21.23.28) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RXL1671 INSTRUCTIONS IN IMX FORMAT.') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQMSMB.MQABNY.BMC.SMB.MBSFUT_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2013-01-09) +
*  ALTTIME(21.43.38) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2013-01-09) +
*  CRTIME(21.43.38) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RGD1617 SETTL INSTR. FROM CITI-SMITHBARNEY.') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQMSMB.MQABNY.BMC.SMB.SMB_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2012-10-07) +
*  ALTTIME(22.18.47) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2012-10-07) +
*  CRTIME(22.18.47) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RSD1597 SETTL INSTR. FROM CITI-SMITHBARNEY.') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQMTDS.MQABNY.BMC.IMP.TDS_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2011-03-17) +
*  ALTTIME(10.20.21) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2011-03-17) +
*  CRTIME(10.20.21) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RDA1509 SETTL INSTR. FOR TD SECUTRITIES.') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQSBNY.MQABNY.BMC.RPO.ADM_ESB1_RSP_O_C') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-12-31) +
*  ALTTIME(12.56.28) +
   BOQNAME('MQABNY.MQABNY.BMC.BMC.BNYM_GSC_RSP_X') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-11-23) +
*  CRTIME(13.06.24) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('REP1505 ADM RESPONSES TO AIX.') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(50000) +
   MAXMSGL(15000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQSBNY.MQABNY.BMC.RPO.ADM_ESB1_RSP_O_C2') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-12-31) +
*  ALTTIME(12.56.17) +
   BOQNAME('MQABNY.MQABNY.BMC.BMC.BNYM_GSC_RSP_X') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-12-23) +
*  CRTIME(10.28.05) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RYY1465 ADM RESPONSES TO AIX.') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(50000) +
   MAXMSGL(15000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQSBNY.MQABNY.BMC.RPO.ALL_CLM_CMS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-07-21) +
*  ALTTIME(05.58.08) +
   BOQNAME('MQABNY.MQABNY.BMC.BMC.ALL_CLM_CMS_B') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-07-21) +
*  CRTIME(05.58.08) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RSK1773 REPO TO BMC INBOUND QUEUE') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   MAXMSGL(120000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQSBNY.MQABNY.BMC.RPO.CLMC_RSP_I_A') +
   ACCTQ(QMGR) +
*  ALTDATE(2011-07-19) +
*  ALTTIME(21.29.16) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2011-07-19) +
*  CRTIME(21.29.16) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RSX1485 TO RECIEVE COMMAND RESPONSES FROM CLM.') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(ENABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQSBNY.MQABNY.BMC.RPO.CLMC_RSP_I_B') +
   ACCTQ(QMGR) +
*  ALTDATE(2011-07-19) +
*  ALTTIME(21.26.53) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2011-07-19) +
*  CRTIME(21.26.53) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RPP1589 TO RECIEVE COMMAND RESPONSES FROM CLM.') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(ENABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQSBNY.MQABNY.BMC.RPO.CLMI_RSP_I_A') +
   ACCTQ(QMGR) +
*  ALTDATE(2011-07-19) +
*  ALTTIME(21.29.16) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2011-07-19) +
*  CRTIME(21.29.16) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RSX1485 TO RECEIVE INQ RESPONSES FROM CLM.') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(ENABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQSBNY.MQABNY.BMC.RPO.CLMI_RSP_I_B') +
   ACCTQ(QMGR) +
*  ALTDATE(2011-07-19) +
*  ALTTIME(21.26.53) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2011-07-19) +
*  CRTIME(21.26.53) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RPP1589 TO RECEIVE INQ RESPONSES FROM CLM.') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQSBNY.MQABNY.BMC.RPO.DEAL_ESB1_RSP_I_A') +
   ACCTQ(QMGR) +
*  ALTDATE(2011-06-23) +
*  ALTTIME(20.41.08) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2011-06-23) +
*  CRTIME(20.41.08) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RAD1512 DEAL CONFIRMS TO ESB1-AIX.') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(50000) +
   MAXMSGL(15000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(ENABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQSBNY.MQABNY.BMC.RPO.DEAL_ESB1_RSP_I_B') +
   ACCTQ(QMGR) +
*  ALTDATE(2011-06-23) +
*  ALTTIME(20.28.35) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2011-06-23) +
*  CRTIME(20.28.35) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('REK1550 DEAL CONFIRMS TO ESB1-AIX.') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(50000) +
   MAXMSGL(15000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(ENABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQSBNY.MQABNY.BMC.RPO.RE_NET_POSCONF_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-08-04) +
*  ALTTIME(07.02.49) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-08-04) +
*  CRTIME(07.02.49) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RWF1619 REPO NET POSINTION CONFIRMATION INBOUND') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(12000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQSBNY.MQABNY.BMC.RPO.RPO2BMC_INQUIRE.XYZ') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-04-07) +
*  ALTTIME(08.10.46) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-04-07) +
*  CRTIME(08.10.46) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('REQ# 522') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ('UNIX.INITQ') +
*  IPPROCS(0) +
   MAXDEPTH(12300) +
   MAXMSGL(25600) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   TRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS('BMC.RPO.RPO2BMC_INQUIRE.PROCESS') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(EVERY) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQSBNY.MQABNY.BMC.RPO.RPO2BMC_INQUIRE1.XYZ') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-04-07) +
*  ALTTIME(08.10.52) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-04-07) +
*  CRTIME(08.10.52) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('REQ# 522') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(1200) +
   MAXMSGL(2300) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(25) +
   QDEPTHLO(20) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQSCIG.MQABNY.BMC.CIG.CIG_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2013-02-26) +
*  ALTTIME(21.25.52) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2013-02-26) +
*  CRTIME(21.25.52) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RAT1598 GSCX MESSAGES FROM CITADEL') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQSERV1') +
   ACCTQ(QMGR) +
*  ALTDATE(2012-08-07) +
*  ALTTIME(15.32.23) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2012-04-03) +
*  CRTIME(19.14.29) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('TransmitQ to LIB/MQSERV1') +
   DISTL(YES) +
   GET(ENABLED) +
   HARDENBO +
   INITQ('SYSTEM.CHANNEL.INITQ') +
*  IPPROCS(0) +
   MAXDEPTH(50000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA('ABKA.MQSERV1.C1') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(XMITQ) +
   REPLACE
DEFINE QLOCAL('MQSLIB.MQABNY.BMC.LIB.LIB_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2012-05-07) +
*  ALTTIME(22.25.22) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2012-05-07) +
*  CRTIME(22.25.22) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RFO1619 GSCX INSTRUCTIONS FROM BANK OF LIBERTY.') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQSRDQ.MQABNY.BMC.QPE.READQ_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-03-09) +
*  ALTTIME(10.55.49) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-09) +
*  CRTIME(10.55.49) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('ROZ1457 RCV INSTRUCTION FROM READQ/PIERPOINT') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQVBNY.MQABNY.BMC.BMC.BDS_XLI_ALL_S') +
   ACCTQ(QMGR) +
*  ALTDATE(2012-11-12) +
*  ALTTIME(20.15.57) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2012-11-12) +
*  CRTIME(20.15.57) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RRI1721 REMOTE QUEUE FROM ROBIN TO Y16(ABKA)') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(50000) +
   MAXMSGL(25000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQVBNY.MQABNY.BMC.WUI.ALL_FRB_RSP_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2012-10-08) +
*  ALTTIME(02.16.09) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2012-10-08) +
*  CRTIME(02.16.09) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RYO1706 QUEUE FOR FED TRAFFIC TO BDC') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(50000) +
   MAXMSGL(12000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQVBNY.MQABNY.BMC.WUI.ALL_FRB_RSP_I_C1') +
   ACCTQ(QMGR) +
*  ALTDATE(2012-08-17) +
*  ALTTIME(00.18.46) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2012-08-17) +
*  CRTIME(00.18.46) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RUA1753 INSTR QUEUE FROM FRB') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(4096) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQVBNY.MQABNY.BMC.WUI.ALL_FRB_RSP_I_CP') +
   ACCTQ(QMGR) +
*  ALTDATE(2012-08-15) +
*  ALTTIME(22.09.06) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2012-08-15) +
*  CRTIME(22.09.06) +
*  CURDEPTH(3630) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('REB1653 INSTR QUEUE FROM FRB') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(4096) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQVBNY.MQABNY.BMC.WUI.ALL_FRB_RSP_I_P') +
   ACCTQ(QMGR) +
*  ALTDATE(2012-10-08) +
*  ALTTIME(02.16.09) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2012-10-08) +
*  CRTIME(02.16.09) +
*  CURDEPTH(1117) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RYO1706 QUEUE FOR FED TRAFFIC FOR BDC PARALLEL') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(50000) +
   MAXMSGL(12000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQVBNY.MQABNY.BMC.WUI.FRB_BDCT_SEC_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-04-22) +
*  ALTTIME(01.37.14) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-04-22) +
*  CRTIME(01.37.14) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RID1590 QUEUE FOR SSE BDCT MSGS TO SSE') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   MAXMSGL(12000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QALIAS('MQVBNY.MQDADP.IMP.BMC.BNY_TO_ICI_ACKS') +
*  ALTDATE(2013-05-02) +
*  ALTTIME(05.36.02) +
   TARGET('MQABNY.MQVBDS.BMC.BMC.ICIQA_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RHW1696 BROADRIDGE TEST QUEUE') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('MQVBNY.MQDADP.IMP.BMC.BNY_TO_ICI_RECV') +
*  ALTDATE(2013-05-02) +
*  ALTTIME(05.36.02) +
   TARGET('MQABNY.MQVBDS.BMC.BMC.ICIQA_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RHW1696 BROARDRIDGE TEST QUEUE') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('MQVBNY.MQSBNY.RPO.BMC.RE3_SWIFT_REV_Q') +
*  ALTDATE(2014-05-22) +
*  ALTTIME(09.22.21) +
   TARGET('MQABNY.MQSBNY.RPO.BMC.RE3_SWIFT_REV_Q') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RHO1714 MORGAN STANLEY INTERNATIONAL INBOUND TO REPO') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('MQVBNY.MQVBNY.BMC.BMC.SWIFT_PP_INS_I') +
*  ALTDATE(2012-11-19) +
*  ALTTIME(22.45.36) +
   TARGET('MQABNY.MQVBNY.BMC.BMC.SWIFT_PP_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RNQ1732 INBOUND FOR ADM') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QLOCAL('MQVBNYM.MQABNY.BMC.TLX.SWIFTNET_BDS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-06-10) +
*  ALTTIME(03.42.44) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-06-10) +
*  CRTIME(03.42.44) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RVR1724 RECEIVING MESSAGES FROM MSGRTR') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(50000) +
   MAXMSGL(15000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQWBNY.MQABNY.BMC.AIS.AIS_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-09-10) +
*  ALTTIME(18.57.40) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-09-10) +
*  CRTIME(18.57.40) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RGW1501 TO RECEIVE MESSAGES FROM AIS.') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(10000) +
   MAXMSGL(30000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQWBNY.MQABNY.BMC.AIS.AIS_RSP_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-09-10) +
*  ALTTIME(18.57.40) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-09-10) +
*  CRTIME(18.57.40) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RGW1501 TO SEND RESPONSES TO AIS.') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(10000) +
   MAXMSGL(30000) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQWSNG.MQABNY.BMC.PH3.BGM_ALL_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2012-04-03) +
*  ALTTIME(21.49.09) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2012-04-03) +
*  CRTIME(21.49.09) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RFX1609 INPUT QUEUE FOR BNYGRAM MESSAGES FOR IMX CUSTOMER') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(25000) +
   MAXMSGL(12288) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQWSNG.MQABNY.BMC.PH3.IMX_ALL_INS_I') +
   ACCTQ(QMGR) +
*  ALTDATE(2012-04-03) +
*  ALTTIME(21.49.09) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2012-04-03) +
*  CRTIME(21.49.09) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RFX1609 INPUT QUEUE FOR IMX INCOMING INSTRUCTIONS') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(25000) +
   MAXMSGL(12288) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QREMOTE('MQWSNG.MQVBNY.BMC.PH3.DSA_BNY_INST') +
*  ALTDATE(2011-04-26) +
*  ALTTIME(17.20.23) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DESCR(' ') +
   PUT(ENABLED) +
   RQMNAME('ABDA') +
   RNAME('SPARE2') +
   SCOPE(QMGR) +
   XMITQ('ABDA') +
   REPLACE
DEFINE QLOCAL('MQXBNY.MQABNY.BMC.///.CLM_CMD_REQ_I_A.MULT') +
   ACCTQ(QMGR) +
*  ALTDATE(2013-12-26) +
*  ALTTIME(09.45.52) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2011-07-15) +
*  CRTIME(18.59.32) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RRJ1548 TO RECEIVE COMMAND REQUESTS.') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(30000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(OK) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQXBNY.MQABNY.BMC.///.CLM_CMD_REQ_I_B.MULT') +
   ACCTQ(QMGR) +
*  ALTDATE(2012-12-24) +
*  ALTTIME(11.16.22) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2011-07-15) +
*  CRTIME(18.59.32) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RES1541 TO RECEIVE COMMAND REQUESTS.') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(OK) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQXBNY.MQABNY.BMC.///.CLM_INQ_REQ_I_A.MULT') +
   ACCTQ(QMGR) +
*  ALTDATE(2011-07-15) +
*  ALTTIME(18.59.32) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2011-07-15) +
*  CRTIME(18.59.32) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RPQ1577 TO RECEIVE CLM INQ REQUESTS.') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('MQXBNY.MQABNY.BMC.///.CLM_INQ_REQ_I_B.MULT') +
   ACCTQ(QMGR) +
*  ALTDATE(2012-12-24) +
*  ALTTIME(11.16.38) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2011-07-15) +
*  CRTIME(18.59.32) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RDB1569 TO RECEIVE CLM INQ REQUESTS.') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QREMOTE('MQXBNY.MQABNY.FNI.///.SWIFTNET_ALL_O.MULT') +
*  ALTDATE(2013-04-04) +
*  ALTTIME(23.13.11) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RQU1529 BMC TO FNI FROM TWO MQM') +
   PUT(ENABLED) +
   RQMNAME('AQT3') +
   RNAME('MQXBNY.MQABNY.FNI.///.SWIFTNET_ALL_O.MULT') +
   SCOPE(QMGR) +
   XMITQ(' ') +
   REPLACE
DEFINE QREMOTE('MQXBNY.MQABNY.FNI.///.SWIFTNET_BDS_O.MULT') +
*  ALTDATE(2013-08-28) +
*  ALTTIME(01.10.41) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RAC1573 BMC TO FNI FOR BDS') +
   PUT(ENABLED) +
   RQMNAME('AQT3') +
   RNAME('MQXBNY.MQABNY.FNI.///.SWIFTNET_BDS_O.MULT') +
   SCOPE(QMGR) +
   XMITQ(' ') +
   REPLACE
DEFINE QREMOTE('MQXBNY.MQABNY.FNI.///.SWIFTNET_DMM_O.MULT') +
*  ALTDATE(2013-08-28) +
*  ALTTIME(01.10.41) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RAC1573 BMC TO FNI FOR DMM') +
   PUT(ENABLED) +
   RQMNAME('AQT3') +
   RNAME('MQXBNY.MQABNY.FNI.///.SWIFTNET_DMM_O.MULT') +
   SCOPE(QMGR) +
   XMITQ(' ') +
   REPLACE
DEFINE QREMOTE('MQXBNY.MQSBNY.RPO.///.ADM_INS_I_C1.MULT') +
*  ALTDATE(2010-12-23) +
*  ALTTIME(12.48.18) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RWP1396 INSTRUCTIONS TO ADM.') +
   PUT(ENABLED) +
   RQMNAME('SQLA') +
   RNAME('MQXBNY.MQSBNY.RPO.///.ADM_INS_I_C1.MULT') +
   SCOPE(QMGR) +
   XMITQ(' ') +
   REPLACE
DEFINE QREMOTE('MQXBNY.MQSBNY.RPO.///.ADM_INS_I_C2.MULT') +
*  ALTDATE(2010-12-23) +
*  ALTTIME(14.19.29) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('RUH1521 INSTRUCTIONS TO ADM.') +
   PUT(ENABLED) +
   RQMNAME('SQNA') +
   RNAME('MQXBNY.MQSBNY.RPO.///.ADM_INS_I_C2.MULT') +
   SCOPE(QMGR) +
   XMITQ(' ') +
   REPLACE
DEFINE QLOCAL('MSDOM_BONY_TEMP') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-06-12) +
*  ALTTIME(12.40.11) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-06-12) +
*  CRTIME(12.40.11) +
*  CURDEPTH(5000) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR(' ') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QALIAS('MSIL.BNY.SWIFT_REV_Q') +
*  ALTDATE(2014-06-25) +
*  ALTTIME(07.46.37) +
   TARGET('MSIL_TO_BONY_RPO.TOPIC') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('ITSP: 461848 : MSIL TO BMC ALIAS QUEUE') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(TOPIC) +
   REPLACE
DEFINE QLOCAL('MTX_TEST.MQ_MATRIX') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-10-28) +
*  ALTTIME(09.56.54) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-16) +
*  CRTIME(08.11.55) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('TransmitQ to MATRIX') +
   DISTL(YES) +
   GET(ENABLED) +
   HARDENBO +
   INITQ('SYSTEM.CHANNEL.INITQ') +
*  IPPROCS(1) +
   MAXDEPTH(10000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   TRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(2) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA('BNY_ABKA.MTX_TEST.C1') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(XMITQ) +
   REPLACE
DEFINE QALIAS('NKG.BONY.COMMDTY.RCVRQ') +
*  ALTDATE(2012-10-07) +
*  ALTTIME(22.19.15) +
   TARGET('MQABNY.MQMSMB.SMB.BMC.NKG_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RFM1638 GSCX ACK/NACK TO CITI-SMB') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('NKG.MBSDLV.BONY.RCVRQ') +
*  ALTDATE(2012-10-07) +
*  ALTTIME(22.19.15) +
   TARGET('MQABNY.MQMSMB.SMB.BMC.MBSDLV_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RFM1638 GSCX ACK/NACK TO CITI-SMB') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('NKG.MBSFUT.BONY.RCVRQ') +
*  ALTDATE(2012-10-07) +
*  ALTTIME(22.19.15) +
   TARGET('MQABNY.MQMSMB.SMB.BMC.MBSFUT_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RFM1638 GSCX ACK/NACK TO CITI-SMB') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('NKG.MBSREC.BONY.RCVRQ') +
*  ALTDATE(2012-10-07) +
*  ALTTIME(22.19.15) +
   TARGET('MQABNY.MQMSMB.SMB.BMC.MBSREC_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RFM1638 GSCX ACK/NACK TO CITI-SMB') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('NKG.RETAIL.BONY.RCVRQ') +
*  ALTDATE(2012-10-07) +
*  ALTTIME(22.19.15) +
   TARGET('MQABNY.MQMSMB.SMB.BMC.RETAIL_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RFM1638 GSCX ACK/NACK TO CITI-SMB') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('NKG.TREASURY.BONY.RCVRQ') +
*  ALTDATE(2012-10-07) +
*  ALTTIME(22.19.15) +
   TARGET('MQABNY.MQMSMB.SMB.BMC.TRSRY_RSP_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RFM1638 GSCX ACK/NACK TO CITI-SMB') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QREMOTE('NYT8') +
*  ALTDATE(2013-07-19) +
*  ALTTIME(16.05.18) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('ITSP297115:QMAlias for MorganStanley/NYT8') +
   PUT(ENABLED) +
   RQMNAME(' ') +
   RNAME(' ') +
   SCOPE(QMGR) +
   XMITQ('NYT8.1') +
   REPLACE
DEFINE QLOCAL('NYT8.1') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-10-28) +
*  ALTTIME(06.03.48) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2013-07-19) +
*  CRTIME(16.05.18) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('ITSP297115:TransmitQ to MorganStanley/NYT8') +
   DISTL(YES) +
   GET(ENABLED) +
   HARDENBO +
   INITQ('SYSTEM.CHANNEL.INITQ') +
*  IPPROCS(0) +
   MAXDEPTH(100000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   TRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA('ABKA.NYT8.S1') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(XMITQ) +
   REPLACE
DEFINE QLOCAL('NYT8.2') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-10-28) +
*  ALTTIME(09.39.26) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2013-07-19) +
*  CRTIME(16.05.18) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('ITSP297115:TransmitQ to MorganStanley/NYT8') +
   DISTL(YES) +
   GET(ENABLED) +
   HARDENBO +
   INITQ('SYSTEM.CHANNEL.INITQ') +
*  IPPROCS(0) +
   MAXDEPTH(100000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   TRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(2) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA('ABKA.NYT8.S2') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(XMITQ) +
   REPLACE
DEFINE QLOCAL('NYT8.3') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-10-15) +
*  ALTTIME(07.23.47) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2013-08-12) +
*  CRTIME(10.08.30) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('ITSP316373:From MorganStanley/NYT8') +
   DISTL(YES) +
   GET(ENABLED) +
   HARDENBO +
   INITQ('SYSTEM.CHANNEL.INITQ') +
*  IPPROCS(0) +
   MAXDEPTH(5000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   TRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(1) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA('ABKA.NYT8.S3') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(XMITQ) +
   REPLACE
DEFINE QALIAS('OCE.BMC.NSB_INS_I') +
*  ALTDATE(2013-01-09) +
*  ALTTIME(21.42.48) +
   TARGET('NSB_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RIH1684 GSCX MESSAGES FROM BMO-NESBITT BURNS') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QLOCAL('P3TEST') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-10-28) +
*  ALTTIME(11.04.34) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2012-03-27) +
*  CRTIME(18.50.51) +
*  CURDEPTH(4) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('TransmitQ to Sungard P3TEST') +
   DISTL(YES) +
   GET(DISABLED) +
   HARDENBO +
   INITQ('SYSTEM.CHANNEL.INITQ') +
*  IPPROCS(0) +
   MAXDEPTH(50000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(2) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA('ABKA.P3TEST.C1') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(XMITQ) +
   REPLACE
DEFINE QALIAS('PFIS.MQR.BONYLINK.BNY_TO_DWR_ACKNAK') +
*  ALTDATE(2012-11-19) +
*  ALTTIME(22.45.59) +
   TARGET('MQABNY.MQMMOR.FIS.BMC.DWR_ACK_O_ND') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RCM1661.RIR1463 GSCX ACK/NAK TO MS-DEANWITTER-MQ35') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('PFIS.MQR.BONYLINK.BNY_TO_DWR_CONFIRMS') +
*  ALTDATE(2012-11-19) +
*  ALTTIME(22.46.00) +
   TARGET('MQABNY.MQMMOR.FIS.BMC.DWR_RSP_O_ND') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RCM1661.RIR1463 GSCX ACK/NAK TO MS-DEANWITTER-MQ35') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('PH3.BMC.BGM_ALL_INS_I') +
*  ALTDATE(2012-04-03) +
*  ALTTIME(21.49.09) +
   TARGET('MQWSNG.MQABNY.BMC.PH3.BGM_ALL_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RFX1609 INPUT QUEUE FOR BNYGRAM MESSAGES FOR IMX CUSTOMER') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('PH3.BMC.IMX_ALL_INS_I') +
*  ALTDATE(2012-07-16) +
*  ALTTIME(09.52.21) +
   TARGET('MQWSNG.MQABNY.BMC.PH3.IMX_ALL_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RFX1609 INPUT QUEUE FOR IMX INCOMING INSTRUCTIONS') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('PH3.BMC.SWIFT_PP_INS_I') +
*  ALTDATE(2013-04-12) +
*  ALTTIME(00.14.20) +
   TARGET('MQABNY.MQVBNY.BMC.BMC.SWIFT_PP_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('itsp# 246578') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('PRA.BMC.PRA4_INS_O') +
*  ALTDATE(2013-10-08) +
*  ALTTIME(05.41.16) +
   TARGET('MQABNY.MQABNY.PRA.BMC.PRA4_INS_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RNR1638 QNAME=PRA.BMC.PRA4_INS_O') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('QPE.BMC.READQ_INS_I') +
*  ALTDATE(2010-03-09) +
*  ALTTIME(10.55.49) +
   TARGET('READQ_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('ROZ1457 RCV INSTRUCTION FROM READQ/PIERPOINT') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QLOCAL('RDQ_TREADQ') +
   ACCTQ(QMGR) +
*  ALTDATE(2012-04-17) +
*  ALTTIME(09.00.04) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(14.12.44) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('TransmitQ to READQ') +
   DISTL(YES) +
   GET(ENABLED) +
   HARDENBO +
   INITQ('SYSTEM.CHANNEL.INITQ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   TRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA('BNY_ABKA.RDQ_TREADQ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(XMITQ) +
   REPLACE
DEFINE QALIAS('SAFE.BONY.ACKNAK') +
*  ALTDATE(2013-08-07) +
*  ALTTIME(16.00.39) +
   TARGET('MQABNY.MQMMOR.MOR.BMC.MS_GCF_ACK_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RUX1741 GSCX ACK/NAK TO MS-GCF') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('SAL.BMC.SAB_INS_I') +
*  ALTDATE(2013-02-26) +
*  ALTTIME(21.23.07) +
   TARGET('SAB_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RWH1678 INSTRUCTIONS IN SSB FORMAT.') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('SAL.BMC.SAL_INS_I') +
*  ALTDATE(2013-02-26) +
*  ALTTIME(21.23.28) +
   TARGET('SAL_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RXL1671 INSTRUCTIONS IN IMX FORMAT.') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QLOCAL('SCRAP') +
   ACCTQ(QMGR) +
*  ALTDATE(2011-12-19) +
*  ALTTIME(12.24.07) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2011-12-06) +
*  CRTIME(12.49.33) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR(' ') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QALIAS('SMB.BMC.MBSFUT_INS_I') +
*  ALTDATE(2013-01-09) +
*  ALTTIME(21.43.38) +
   TARGET('MBSFUT_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RGD1617 SETTL INSTR. FROM CITI-SMITHBARNEY.') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('SMB.BMC.SMB_INS_I') +
*  ALTDATE(2012-10-07) +
*  ALTTIME(22.18.47) +
   TARGET('SMB_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RSD1597 SETTL INSTR. FROM CITI-SMITHBARNEY.') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QLOCAL('SMSSCCQM') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-10-28) +
*  ALTTIME(11.00.14) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2013-01-11) +
*  CRTIME(06.14.09) +
*  CURDEPTH(35) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('ITSP# 206230') +
   DISTL(YES) +
   GET(DISABLED) +
   HARDENBO +
   INITQ('SYSTEM.CHANNEL.INITQ') +
*  IPPROCS(0) +
   MAXDEPTH(5000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA('ABKA.NSBSMSDEV.C1') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(XMITQ) +
   REPLACE
DEFINE QLOCAL('SPARE') +
   ACCTQ(QMGR) +
*  ALTDATE(2012-03-15) +
*  ALTTIME(15.46.00) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2011-02-24) +
*  CRTIME(00.17.27) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR(' ') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(15000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SPARE1') +
   ACCTQ(QMGR) +
*  ALTDATE(2013-08-02) +
*  ALTTIME(18.11.13) +
   BOQNAME('SPARE3') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2012-08-07) +
*  CRTIME(15.34.24) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR(' ') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(25000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SPARE2') +
   ACCTQ(QMGR) +
*  ALTDATE(2012-08-07) +
*  ALTTIME(15.34.33) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2012-08-07) +
*  CRTIME(15.34.33) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR(' ') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(25000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SPARE3') +
   ACCTQ(QMGR) +
*  ALTDATE(2012-08-07) +
*  ALTTIME(15.34.38) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2012-08-07) +
*  CRTIME(15.34.38) +
*  CURDEPTH(4) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR(' ') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(25000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SPARE4') +
   ACCTQ(QMGR) +
*  ALTDATE(2013-07-22) +
*  ALTTIME(14.14.53) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2013-07-05) +
*  CRTIME(13.26.00) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR(' ') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(50000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SPARE5') +
   ACCTQ(QMGR) +
*  ALTDATE(2013-07-05) +
*  ALTTIME(13.26.55) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2013-07-05) +
*  CRTIME(13.26.55) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR(' ') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(5000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SQAL') +
   ACCTQ(QMGR) +
*  ALTDATE(2013-06-12) +
*  ALTTIME(09.15.25) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2011-10-18) +
*  CRTIME(09.36.14) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('TransmitQ to SQAL') +
   DISTL(YES) +
   GET(ENABLED) +
   HARDENBO +
   INITQ('SYSTEM.CHANNEL.INITQ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   TRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA('ABKA.TO.SQAL') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(XMITQ) +
   REPLACE
DEFINE QREMOTE('SQAL.REMOTE.QUEUE') +
*  ALTDATE(2011-10-19) +
*  ALTTIME(10.24.08) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(9) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('Queue for accessing TARGET.QUEUE on SQAL') +
   PUT(ENABLED) +
   RQMNAME('SQAL') +
   RNAME('SQAL.TARGET.QUEUE') +
   SCOPE(QMGR) +
   XMITQ('SQAL') +
   REPLACE
DEFINE QLOCAL('SQLA') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-09-29) +
*  ALTTIME(20.20.37) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-11-15) +
*  CRTIME(04.33.13) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('TransmitQ to SQLA') +
   DISTL(YES) +
   GET(ENABLED) +
   HARDENBO +
   INITQ('SYSTEM.CHANNEL.INITQ') +
*  IPPROCS(0) +
   MAXDEPTH(50000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   TRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(1) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(40) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(120000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA('ABKA.TO.SQLA') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(XMITQ) +
   REPLACE
DEFINE QREMOTE('SQLA.REMOTE.QUEUE') +
*  ALTDATE(2010-11-15) +
*  ALTTIME(04.33.13) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(9) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('Queue for accessing TARGET.QUEUE on SQLA') +
   PUT(ENABLED) +
   RQMNAME('SQLA') +
   RNAME('SQLA.TARGET.QUEUE') +
   SCOPE(QMGR) +
   XMITQ('SQLA') +
   REPLACE
DEFINE QLOCAL('SQLB') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-10-28) +
*  ALTTIME(10.59.54) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2011-08-01) +
*  CRTIME(05.28.02) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('TransmitQ to SQLB') +
   DISTL(NO) +
   GET(DISABLED) +
   HARDENBO +
   INITQ('SYSTEM.CHANNEL.INITQ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(40) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(120000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA('ABKA.TO.SQLB') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(XMITQ) +
   REPLACE
DEFINE QREMOTE('SQLB.REMOTE.QUEUE') +
*  ALTDATE(2011-08-01) +
*  ALTTIME(05.28.02) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(9) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('Queue for accessing TARGET.QUEUE on SQLB') +
   PUT(ENABLED) +
   RQMNAME('SQLB') +
   RNAME('SQLB.TARGET.QUEUE') +
   SCOPE(QMGR) +
   XMITQ('SQLB') +
   REPLACE
DEFINE QLOCAL('SQLD') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-10-27) +
*  ALTTIME(12.52.14) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2011-10-20) +
*  CRTIME(19.16.05) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('TransmitQ to SQLD') +
   DISTL(YES) +
   GET(ENABLED) +
   HARDENBO +
   INITQ('SYSTEM.CHANNEL.INITQ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   TRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA('ABKA.TO.SQLD') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(XMITQ) +
   REPLACE
DEFINE QREMOTE('SQLD.REMOTE.QUEUE') +
*  ALTDATE(2011-10-20) +
*  ALTTIME(19.16.05) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(9) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('Queue for accessing TARGET.QUEUE on SQLD') +
   PUT(ENABLED) +
   RQMNAME('SQLD') +
   RNAME('SQLD.TARGET.QUEUE') +
   SCOPE(QMGR) +
   XMITQ('SQLD') +
   REPLACE
DEFINE QLOCAL('SQLO') +
   ACCTQ(QMGR) +
*  ALTDATE(2013-11-29) +
*  ALTTIME(09.41.27) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2011-08-02) +
*  CRTIME(10.01.58) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('TransmitQ to SQLO') +
   DISTL(YES) +
   GET(ENABLED) +
   HARDENBO +
   INITQ('SYSTEM.CHANNEL.INITQ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   TRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(40) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(120000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA('ABKA.TO.SQLO') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(XMITQ) +
   REPLACE
DEFINE QREMOTE('SQLO.REMOTE.QUEUE') +
*  ALTDATE(2011-08-02) +
*  ALTTIME(10.01.58) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(9) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('Queue for accessing TARGET.QUEUE on SQLO') +
   PUT(ENABLED) +
   RQMNAME('SQLO') +
   RNAME('SQLO.TARGET.QUEUE') +
   SCOPE(QMGR) +
   XMITQ('SQLO') +
   REPLACE
DEFINE QLOCAL('SQNA') +
   ACCTQ(QMGR) +
*  ALTDATE(2013-03-08) +
*  ALTTIME(12.10.31) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-12-22) +
*  CRTIME(15.47.22) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('TransmitQ to SQNA') +
   DISTL(YES) +
   GET(DISABLED) +
   HARDENBO +
   INITQ('SYSTEM.CHANNEL.INITQ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(40) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(120000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA('ABKA.TO.SQNA') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(XMITQ) +
   REPLACE
DEFINE QREMOTE('SQNA.REMOTE.QUEUE') +
*  ALTDATE(2010-12-22) +
*  ALTTIME(15.47.22) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(9) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('Queue for accessing TARGET.QUEUE on SQNA') +
   PUT(ENABLED) +
   RQMNAME('SQNA') +
   RNAME('SQNA.TARGET.QUEUE') +
   SCOPE(QMGR) +
   XMITQ('SQNA') +
   REPLACE
DEFINE QLOCAL('SQND') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-03-05) +
*  ALTTIME(14.58.28) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2011-10-20) +
*  CRTIME(19.16.07) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('TransmitQ to SQND') +
   DISTL(YES) +
   GET(ENABLED) +
   HARDENBO +
   INITQ('SYSTEM.CHANNEL.INITQ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   TRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA('ABKA.TO.SQND') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(XMITQ) +
   REPLACE
DEFINE QREMOTE('SQND.REMOTE.QUEUE') +
*  ALTDATE(2011-10-20) +
*  ALTTIME(19.16.07) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(9) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('Queue for accessing TARGET.QUEUE on SQND') +
   PUT(ENABLED) +
   RQMNAME('SQND') +
   RNAME('SQND.TARGET.QUEUE') +
   SCOPE(QMGR) +
   XMITQ('SQND') +
   REPLACE
DEFINE QLOCAL('SQUD') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-03-17) +
*  ALTTIME(12.38.00) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2013-07-25) +
*  CRTIME(05.43.34) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('itsp# 307703') +
   DISTL(YES) +
   GET(ENABLED) +
   HARDENBO +
   INITQ('SYSTEM.CHANNEL.INITQ') +
*  IPPROCS(0) +
   MAXDEPTH(5000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   TRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA('ABKA.TO.SQUD') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(XMITQ) +
   REPLACE
DEFINE QALIAS('SSE.BMC.BDCT_SEC_O') +
*  ALTDATE(2014-01-29) +
*  ALTTIME(22.45.45) +
   TARGET('MQABNY.MQABNY.SSE.BMC.BDCT_SEC_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RGS1708 SSE BROADCAST OUTBOUND QUEUE') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('SSE.BMC.FRB_BDCT_SEC_I') +
*  ALTDATE(2014-10-24) +
*  ALTTIME(01.11.26) +
   TARGET('MQVBNY.MQABNY.BMC.WUI.FRB_BDCT_SEC_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('ITSP:566574   : FED MSG from tool by SSE to BMC queue') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('SSE.SSE.BDCT_SEC_X') +
*  ALTDATE(2014-01-29) +
*  ALTTIME(01.14.25) +
   TARGET('MQABNY.MQABNY.SSE.SSE.BDCT_SEC_X') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RKE1694 SSE BROADCAST ERROR QUEUE') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QLOCAL('SYSTEM.ADMIN.ACCOUNTING.QUEUE') +
   ACCTQ(OFF) +
*  ALTDATE(2010-04-09) +
*  ALTTIME(13.38.02) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(13.41.14) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('WebSphere MQ Administration Accounting Queue') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(3000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(OFF) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SYSTEM.ADMIN.ACTIVITY.QUEUE') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-04-09) +
*  ALTTIME(13.38.02) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(13.41.14) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('WebSphere MQ Administration Activity Queue') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(5000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SYSTEM.ADMIN.CHANNEL.EVENT') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-04-09) +
*  ALTTIME(13.38.02) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(13.41.14) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(EXCL) +
*  DEFTYPE(PREDEFINED) +
   DESCR('WebSphere MQ Channel Related Event Queue') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(3000) +
   MAXMSGL(9000) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   NOSHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SYSTEM.ADMIN.COMMAND.EVENT') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-07-23) +
*  ALTTIME(22.54.16) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-07-23) +
*  CRTIME(22.54.16) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(EXCL) +
*  DEFTYPE(PREDEFINED) +
   DESCR('WebSphere MQ Command Event Queue') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(5000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   NOSHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SYSTEM.ADMIN.COMMAND.QUEUE') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-04-09) +
*  ALTTIME(13.38.02) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(13.41.14) +
*  CURDEPTH(1230) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(EXCL) +
*  DEFTYPE(PREDEFINED) +
   DESCR('WebSphere MQ Administration Command Queue') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(3000) +
   MAXMSGL(32762) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(7) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   NOSHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SYSTEM.ADMIN.CONFIG.EVENT') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-07-23) +
*  ALTTIME(22.54.16) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-07-23) +
*  CRTIME(22.54.16) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(EXCL) +
*  DEFTYPE(PREDEFINED) +
   DESCR('WebSphere MQ Configuration Event Queue') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(5000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   NOSHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SYSTEM.ADMIN.LOGGER.EVENT') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-04-09) +
*  ALTTIME(13.38.02) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(13.41.14) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(EXCL) +
*  DEFTYPE(PREDEFINED) +
   DESCR('WebSphere MQ Logger Event Queue') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(3000) +
   MAXMSGL(9000) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   NOSHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SYSTEM.ADMIN.PERFM.EVENT') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-04-09) +
*  ALTTIME(13.38.02) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(13.41.14) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(EXCL) +
*  DEFTYPE(PREDEFINED) +
   DESCR('WebSphere MQ Performance Related Event Queue') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(3000) +
   MAXMSGL(9000) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   NOSHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SYSTEM.ADMIN.PUBSUB.EVENT') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-09-08) +
*  CRTIME(02.37.15) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('WebSphere MQ Publish/Subscribe Related Event Queue') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(5000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SYSTEM.ADMIN.QMGR.EVENT') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-04-09) +
*  ALTTIME(13.38.02) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(13.41.14) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(EXCL) +
*  DEFTYPE(PREDEFINED) +
   DESCR('WebSphere MQ Queue Manager Related Event Queue') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(3000) +
   MAXMSGL(32762) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   NOSHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SYSTEM.ADMIN.STATISTICS.QUEUE') +
   ACCTQ(OFF) +
*  ALTDATE(2010-04-09) +
*  ALTTIME(13.38.02) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(13.41.14) +
*  CURDEPTH(3000) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('WebSphere MQ Administration Statistics Queue') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(3000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(OFF) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SYSTEM.ADMIN.TRACE.ACTIVITY.QUEUE') +
   ACCTQ(OFF) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-09-08) +
*  CRTIME(02.37.15) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('WebSphere MQ Administration Trace Activity Queue') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(3000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(OFF) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SYSTEM.ADMIN.TRACE.ROUTE.QUEUE') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-04-09) +
*  ALTTIME(13.38.02) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(13.41.14) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('WebSphere MQ Administration Trace Route Queue') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(5000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SYSTEM.AUTH.DATA.QUEUE') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.44) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(13.41.13) +
*  CURDEPTH(1576) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('WebSphere MQ Authority Data Queue') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(999999999) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(1) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SYSTEM.BROKER.ADAPTER.FAILED') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.44) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(13.54.47) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR(' ') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(100000) +
   MAXMSGL(104857600) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SYSTEM.BROKER.ADAPTER.INPROGRESS') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.44) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(13.54.46) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR(' ') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(100000) +
   MAXMSGL(104857600) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SYSTEM.BROKER.ADAPTER.NEW') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.44) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(13.54.46) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR(' ') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(100000) +
   MAXMSGL(104857600) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SYSTEM.BROKER.ADAPTER.PROCESSED') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.44) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(13.54.47) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR(' ') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(100000) +
   MAXMSGL(104857600) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SYSTEM.BROKER.ADAPTER.UNKNOWN') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.44) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(13.54.47) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR(' ') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(100000) +
   MAXMSGL(104857600) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SYSTEM.BROKER.ADMIN.QUEUE') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.44) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(13.54.40) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR(' ') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   MAXMSGL(104857600) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SYSTEM.BROKER.ADMIN.REPLY') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.44) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(13.41.20) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR(' ') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(5000) +
   MAXMSGL(104857600) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SYSTEM.BROKER.ADMIN.REPLYTODM') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-07-23) +
*  ALTTIME(22.54.52) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-07-23) +
*  CRTIME(22.54.52) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR(' ') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(100000) +
   MAXMSGL(104857600) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SYSTEM.BROKER.ADMIN.STREAM') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-04-09) +
*  ALTTIME(13.38.02) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-04-09) +
*  CRTIME(13.38.02) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('Admin stream for queued Pub/Sub interface') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(1) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SYSTEM.BROKER.AGGR.CONTROL') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.44) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(13.54.42) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR(' ') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(100000) +
   MAXMSGL(104857600) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SYSTEM.BROKER.AGGR.REPLY') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.44) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(13.54.42) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR(' ') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(100000) +
   MAXMSGL(104857600) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SYSTEM.BROKER.AGGR.REQUEST') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.44) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(13.54.42) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR(' ') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(100000) +
   MAXMSGL(104857600) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SYSTEM.BROKER.AGGR.TIMEOUT') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.44) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(13.54.43) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR(' ') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(100000) +
   MAXMSGL(104857600) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SYSTEM.BROKER.AGGR.UNKNOWN') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.44) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(13.54.43) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR(' ') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(100000) +
   MAXMSGL(104857600) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SYSTEM.BROKER.AUTH') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-07-23) +
*  ALTTIME(22.54.53) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-07-23) +
*  CRTIME(22.54.53) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR(' ') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(5000) +
   MAXMSGL(104857600) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SYSTEM.BROKER.CONFIG.QUEUE') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.44) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(13.41.19) +
*  CURDEPTH(20) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR(' ') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(5000) +
   MAXMSGL(104857600) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SYSTEM.BROKER.CONFIG.REPLY') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.44) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(13.41.20) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR(' ') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(5000) +
   MAXMSGL(104857600) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SYSTEM.BROKER.CONTROL.QUEUE') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-04-09) +
*  ALTTIME(13.38.02) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(13.54.45) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('Control queue for queued Pub/Sub interface') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(3) +
   MAXDEPTH(5000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SYSTEM.BROKER.DEFAULT.STREAM') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-04-09) +
*  ALTTIME(13.38.02) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-04-09) +
*  CRTIME(13.38.02) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('Default stream for queued Pub/Sub interface') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SYSTEM.BROKER.DEPLOY.QUEUE') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-07-23) +
*  ALTTIME(22.54.53) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-07-23) +
*  CRTIME(22.54.53) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR(' ') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(10) +
   MAXDEPTH(100000) +
   MAXMSGL(104857600) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(5) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SYSTEM.BROKER.DEPLOY.REPLY') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-07-23) +
*  ALTTIME(22.54.53) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-07-23) +
*  CRTIME(22.54.53) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR(' ') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(6) +
   MAXDEPTH(100000) +
   MAXMSGL(104857600) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SYSTEM.BROKER.EDA.COLLECTIONS') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.44) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(13.54.45) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR(' ') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(100000) +
   MAXMSGL(104857600) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SYSTEM.BROKER.EDA.EVENTS') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.44) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(13.54.46) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR(' ') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(100000) +
   MAXMSGL(104857600) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SYSTEM.BROKER.EXECUTIONGROUP.QUEUE') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.44) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(13.54.41) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR(' ') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(83) +
   MAXDEPTH(5000) +
   MAXMSGL(104857600) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SYSTEM.BROKER.EXECUTIONGROUP.REPLY') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.44) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(13.54.41) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR(' ') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(5000) +
   MAXMSGL(104857600) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SYSTEM.BROKER.INTER.BROKER.COMMUNICATIONS') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-07-23) +
*  ALTTIME(22.54.58) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-07-23) +
*  CRTIME(22.54.58) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('MQSeries Publish/Subscribe internal reply queue') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(999999999) +
   MAXMSGL(104857600) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   NOSHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QMODEL('SYSTEM.BROKER.INTERBROKER.MODEL.QUEUE') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.44) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLCHNAME(' ') +
*  CRDATE(2010-03-02) +
*  CRTIME(13.54.45) +
   CUSTOM(' ') +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
   DEFTYPE(PERMDYN) +
   DESCR(' ') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
   MAXDEPTH(5000) +
   MAXMSGL(104857600) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SYSTEM.BROKER.INTERBROKER.QUEUE') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.44) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(13.54.44) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR(' ') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(5000) +
   MAXMSGL(104857600) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QMODEL('SYSTEM.BROKER.MODEL.QUEUE') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.44) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLCHNAME(' ') +
*  CRDATE(2010-03-02) +
*  CRTIME(13.41.21) +
   CUSTOM(' ') +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(EXCL) +
   DEFTYPE(TEMPDYN) +
   DESCR(' ') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
   MAXDEPTH(5000) +
   MAXMSGL(104857600) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SYSTEM.BROKER.SECURITY.REPLY') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.44) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(13.41.21) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR(' ') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(5000) +
   MAXMSGL(104857600) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SYSTEM.BROKER.SEQ.EXPIRY') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-07-23) +
*  ALTTIME(22.54.54) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-07-23) +
*  CRTIME(22.54.54) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR(' ') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(100000) +
   MAXMSGL(104857600) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SYSTEM.BROKER.SEQ.GROUP') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-07-23) +
*  ALTTIME(22.54.54) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-07-23) +
*  CRTIME(22.54.54) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR(' ') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(100000) +
   MAXMSGL(104857600) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SYSTEM.BROKER.SEQ.NUMBER') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-07-23) +
*  ALTTIME(22.54.54) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-07-23) +
*  CRTIME(22.54.54) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR(' ') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(100000) +
   MAXMSGL(104857600) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SYSTEM.BROKER.TIMEOUT.QUEUE') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.44) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(13.54.41) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR(' ') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(100000) +
   MAXMSGL(104857600) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SYSTEM.BROKER.WS.ACK') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.44) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(13.54.44) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR(' ') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(5000) +
   MAXMSGL(104857600) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SYSTEM.BROKER.WS.INPUT') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.44) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(13.54.43) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR(' ') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(5000) +
   MAXMSGL(104857600) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SYSTEM.BROKER.WS.REPLY') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.44) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(13.54.44) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR(' ') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(5000) +
   MAXMSGL(104857600) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SYSTEM.CHANNEL.INITQ') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.16) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(13.41.14) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(EXCL) +
*  DEFTYPE(PREDEFINED) +
   DESCR('WebSphere MQ Channel Initiation Queue') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(1000) +
   MAXMSGL(2000) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   NOSHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SYSTEM.CHANNEL.SYNCQ') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-04-09) +
*  ALTTIME(13.38.02) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(13.41.14) +
*  CURDEPTH(86) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('WebSphere MQ Channel Sync Queue') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(20000) +
   MAXMSGL(20000) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(40) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SYSTEM.CHLAUTH.DATA.QUEUE') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-09-08) +
*  CRTIME(02.37.15) +
*  CURDEPTH(3) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('WebSphere MQ Channel Authentication Data Queue') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(999999999) +
   MAXMSGL(104857600) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SYSTEM.CICS.INITIATION.QUEUE') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-04-09) +
*  ALTTIME(13.38.02) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(13.41.14) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('WebSphere MQ Default CICS Initiation queue') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(1000) +
   MAXMSGL(1000) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SYSTEM.CLUSTER.COMMAND.QUEUE') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-04-09) +
*  ALTTIME(13.38.02) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(13.41.14) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('WebSphere MQ Cluster Command Queue') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(999999999) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SYSTEM.CLUSTER.HISTORY.QUEUE') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-07-23) +
*  ALTTIME(22.54.16) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-07-23) +
*  CRTIME(22.54.16) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('WebSphere MQ Cluster History Queue') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(999999999) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SYSTEM.CLUSTER.REPOSITORY.QUEUE') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-04-09) +
*  ALTTIME(13.38.02) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(13.41.14) +
*  CURDEPTH(2) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('WebSphere MQ Cluster Repository Queue') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(999999999) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(1) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QMODEL('SYSTEM.CLUSTER.TRANSMIT.MODEL.QUEUE') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLCHNAME(' ') +
*  CRDATE(2014-09-08) +
*  CRTIME(02.37.15) +
   CUSTOM(' ') +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
   DEFTYPE(PERMDYN) +
   DESCR('WebSphere MQ Cluster Transmission Model Queue') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
   MAXDEPTH(999999999) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(XMITQ) +
   REPLACE
DEFINE QLOCAL('SYSTEM.CLUSTER.TRANSMIT.QUEUE') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-04-09) +
*  ALTTIME(13.38.02) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(13.41.14) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('WebSphere MQ Cluster Transmission Queue') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(999999999) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(XMITQ) +
   REPLACE
DEFINE QLOCAL('SYSTEM.DEAD.LETTER.QUEUE') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-04-09) +
*  ALTTIME(13.38.02) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(13.41.14) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('WebSphere MQ Default Dead Letter Queue') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(999999999) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QALIAS('SYSTEM.DEFAULT.ALIAS.QUEUE') +
*  ALTDATE(2010-04-09) +
*  ALTTIME(13.38.02) +
   TARGET(' ') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR(' ') +
   GET(ENABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QLOCAL('SYSTEM.DEFAULT.INITIATION.QUEUE') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-04-09) +
*  ALTTIME(13.38.02) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(13.41.14) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('WebSphere MQ Default Initiation Queue') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(1000) +
   MAXMSGL(1000) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SYSTEM.DEFAULT.LOCAL.QUEUE') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-04-09) +
*  ALTTIME(13.38.02) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(13.41.14) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR(' ') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(5000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QMODEL('SYSTEM.DEFAULT.MODEL.QUEUE') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-04-09) +
*  ALTTIME(13.38.02) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLCHNAME(' ') +
*  CRDATE(2010-03-02) +
*  CRTIME(13.41.14) +
   CUSTOM(' ') +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(EXCL) +
   DEFTYPE(TEMPDYN) +
   DESCR(' ') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
   MAXDEPTH(5000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   NOSHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QREMOTE('SYSTEM.DEFAULT.REMOTE.QUEUE') +
*  ALTDATE(2010-04-09) +
*  ALTTIME(13.38.02) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DESCR(' ') +
   PUT(ENABLED) +
   RQMNAME(' ') +
   RNAME(' ') +
   SCOPE(QMGR) +
   XMITQ(' ') +
   REPLACE
DEFINE QLOCAL('SYSTEM.DOTNET.XARECOVERY.QUEUE') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-09-08) +
*  CRTIME(02.37.15) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('WebSphere MQ .NET XA Recovery Queue') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(999999999) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QMODEL('SYSTEM.DURABLE.MODEL.QUEUE') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-04-09) +
*  ALTTIME(13.38.02) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLCHNAME(' ') +
*  CRDATE(2010-04-09) +
*  CRTIME(13.38.02) +
   CUSTOM(' ') +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
   DEFTYPE(PERMDYN) +
   DESCR('Model for managed queues for durable subscriptions') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
   MAXDEPTH(999999999) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SYSTEM.DURABLE.SUBSCRIBER.QUEUE') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-04-09) +
*  ALTTIME(13.38.02) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-04-09) +
*  CRTIME(13.38.02) +
*  CURDEPTH(1) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('Store of information about durable subscribers') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(999999999) +
   MAXMSGL(104857600) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SYSTEM.HIERARCHY.STATE') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-04-09) +
*  ALTTIME(13.38.02) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-04-09) +
*  CRTIME(13.38.02) +
*  CURDEPTH(2) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('MQ Publish/Subscribe Distributed Pub/sub hierarchy relationship') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(999999999) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SYSTEM.INTER.QMGR.CONTROL') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-04-09) +
*  ALTTIME(13.38.02) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-04-09) +
*  CRTIME(13.38.02) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('MQ Publish/Subscribe Distributed Pub/sub Control Queue') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(999999999) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SYSTEM.INTER.QMGR.FANREQ') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-04-09) +
*  ALTTIME(13.38.02) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-04-09) +
*  CRTIME(13.38.02) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('MQ Publish/Subscribe Distributed Pub/sub proxy-sub request queue') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(999999999) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(1) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SYSTEM.INTER.QMGR.PUBS') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-04-09) +
*  ALTTIME(13.38.02) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-04-09) +
*  CRTIME(13.38.02) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('MQ Publish/Subscribe Distributed Pub/sub Publications') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(999999999) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SYSTEM.INTERNAL.REPLY.QUEUE') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-07-23) +
*  ALTTIME(22.54.16) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-07-23) +
*  CRTIME(22.54.16) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('WebSphere MQ Internal Reply Queue') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(999999999) +
   MAXMSGL(32762) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SYSTEM.JMS.ADMIN.QUEUE') +
   ACCTQ(QMGR) +
*  ALTDATE(2012-03-20) +
*  ALTTIME(15.02.52) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2012-03-20) +
*  CRTIME(15.02.52) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('Websphere MQ - JMS Classes - admin queue') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(5000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   NOSHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SYSTEM.JMS.D.CC.SUBSCRIBER.QUEUE') +
   ACCTQ(QMGR) +
*  ALTDATE(2012-03-20) +
*  ALTTIME(15.02.52) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2012-03-20) +
*  CRTIME(15.02.52) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('Websphere MQ - JMS Classes - PS D CC shared q') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(100000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SYSTEM.JMS.D.SUBSCRIBER.QUEUE') +
   ACCTQ(QMGR) +
*  ALTDATE(2012-03-20) +
*  ALTTIME(15.02.52) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2012-03-20) +
*  CRTIME(15.02.52) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('Websphere MQ - JMS Classes - PS D shared queue') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(100000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QMODEL('SYSTEM.JMS.MODEL.QUEUE') +
   ACCTQ(QMGR) +
*  ALTDATE(2012-03-20) +
*  ALTTIME(15.02.52) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLCHNAME(' ') +
*  CRDATE(2012-03-20) +
*  CRTIME(15.02.52) +
   CUSTOM(' ') +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
   DEFTYPE(PERMDYN) +
   DESCR('Websphere MQ - JMS Classes - Model queue') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
   MAXDEPTH(5000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SYSTEM.JMS.ND.CC.SUBSCRIBER.QUEUE') +
   ACCTQ(QMGR) +
*  ALTDATE(2012-03-20) +
*  ALTTIME(15.02.52) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2012-03-20) +
*  CRTIME(15.02.52) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('Websphere MQ - JMS Classes - PS ND CC shared q') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(100000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SYSTEM.JMS.ND.SUBSCRIBER.QUEUE') +
   ACCTQ(QMGR) +
*  ALTDATE(2012-03-20) +
*  ALTTIME(15.02.52) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2012-03-20) +
*  CRTIME(15.02.52) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('Websphere MQ - JMS Classes - PS ND shared queue') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(100000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SYSTEM.JMS.PS.STATUS.QUEUE') +
   ACCTQ(QMGR) +
*  ALTDATE(2012-03-20) +
*  ALTTIME(15.02.52) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2012-03-20) +
*  CRTIME(15.02.52) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('Websphere MQ - JMS Classes - PS status queue') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(5000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SYSTEM.JMS.REPORT.QUEUE') +
   ACCTQ(QMGR) +
*  ALTDATE(2012-03-20) +
*  ALTTIME(15.02.52) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2012-03-20) +
*  CRTIME(15.02.52) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('Websphere MQ - JMS Classes - Report queue') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(5000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QMODEL('SYSTEM.JMS.TEMPQ.MODEL') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLCHNAME(' ') +
*  CRDATE(2014-09-08) +
*  CRTIME(02.37.15) +
   CUSTOM(' ') +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
   DEFTYPE(TEMPDYN) +
   DESCR('Model for JMS temporary queues') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
   MAXDEPTH(5000) +
   MAXMSGL(104857600) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QMODEL('SYSTEM.MQEXPLORER.REPLY.MODEL') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-04-09) +
*  ALTTIME(13.38.02) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLCHNAME(' ') +
*  CRDATE(2010-03-02) +
*  CRTIME(13.41.14) +
   CUSTOM(' ') +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(YES) +
   DEFSOPT(EXCL) +
   DEFTYPE(TEMPDYN) +
   DESCR(' ') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
   MAXDEPTH(5000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   NOSHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QMODEL('SYSTEM.MQSC.REPLY.QUEUE') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-04-09) +
*  ALTTIME(13.38.02) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLCHNAME(' ') +
*  CRDATE(2010-03-02) +
*  CRTIME(13.41.14) +
   CUSTOM(' ') +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(EXCL) +
   DEFTYPE(TEMPDYN) +
   DESCR('WebSphere MQ MQSC Reply Queue') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
   MAXDEPTH(3000) +
   MAXMSGL(32762) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   NOSHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QMODEL('SYSTEM.NDURABLE.MODEL.QUEUE') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-04-09) +
*  ALTTIME(13.38.02) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLCHNAME(' ') +
*  CRDATE(2010-04-09) +
*  CRTIME(13.38.02) +
   CUSTOM(' ') +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(YES) +
   DEFSOPT(SHARED) +
   DEFTYPE(TEMPDYN) +
   DESCR('Model for managed queues for non durable subscriptions') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
   MAXDEPTH(999999999) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SYSTEM.PENDING.DATA.QUEUE') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-04-09) +
*  ALTTIME(13.38.02) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(13.41.14) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(EXCL) +
*  DEFTYPE(PREDEFINED) +
   DESCR('WebSphere MQ Deferred Message Queue') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(999999999) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(1) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(DISABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   NOSHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SYSTEM.PROTECTION.ERROR.QUEUE') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-09-08) +
*  CRTIME(02.37.15) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('WebSphere MQ Message Protection Error Queue') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(999999999) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SYSTEM.PROTECTION.POLICY.QUEUE') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-09-08) +
*  CRTIME(02.37.15) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('WebSphere MQ Message Protection Policy Queue') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(999999999) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SYSTEM.RETAINED.PUB.QUEUE') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-04-09) +
*  ALTTIME(13.38.02) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-04-09) +
*  CRTIME(13.38.02) +
*  CURDEPTH(3) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('Store of retained publications') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(999999999) +
   MAXMSGL(104857600) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SYSTEM.SELECTION.EVALUATION.QUEUE') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-07-23) +
*  ALTTIME(22.54.16) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-07-23) +
*  CRTIME(22.54.16) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('WebSphere MQ Selection Evaluation Queue') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(999999999) +
   MAXMSGL(104857600) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('SYSTEM.SELECTION.VALIDATION.QUEUE') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-07-23) +
*  ALTTIME(22.54.16) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-07-23) +
*  CRTIME(22.54.16) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('WebSphere MQ Selection Validation Queue') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(999999999) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QREMOTE('T.READQ.BNY') +
*  ALTDATE(2011-08-25) +
*  ALTTIME(08.42.10) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('QMGR Alias') +
   PUT(ENABLED) +
   RQMNAME('T.READQ.BNY') +
   RNAME(' ') +
   SCOPE(QMGR) +
   XMITQ('RDQ_TREADQ') +
   REPLACE
DEFINE QALIAS('TBL.BMC.CMI_INS_I') +
*  ALTDATE(2010-03-12) +
*  ALTTIME(14.43.45) +
   TARGET('CMI_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('ROC1407 GSCX INSTRUCTIONS FROM BNY CAPITAL MARKETS') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('TBL.BMC.GLE_INS_I') +
*  ALTDATE(2010-10-05) +
*  ALTTIME(07.54.34) +
   TARGET('GLE_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RRK1452 GSCX INSTRUCTIONS FROM GLEACHER') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('TBL.BMC.PLM_INS_I') +
*  ALTDATE(2010-03-12) +
*  ALTTIME(14.43.45) +
   TARGET('PLM_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('ROC1407 GSCX INSTRUCTIONS FROM PALOMA') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('TBL.BMC.SCB_INS_I') +
*  ALTDATE(2010-03-12) +
*  ALTTIME(14.43.45) +
   TARGET('SCB_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('ROC1407 GSCX INSTRUCTIONS FROM STANDARD CHARTERED BANK') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('TBL.BMC.SSS_INS_I') +
*  ALTDATE(2010-03-12) +
*  ALTTIME(14.43.45) +
   TARGET('SSS_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('ROC1407 GSCX INSTRUCTIONS FROM SOUTH STREET') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QREMOTE('TDDEV400') +
*  ALTDATE(2012-04-26) +
*  ALTTIME(04.17.54) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('QM Alias for TD Securities Queue Manager TDDEV400') +
   PUT(ENABLED) +
   RQMNAME('TDDEV400') +
   RNAME(' ') +
   SCOPE(QMGR) +
   XMITQ('TDS_TDDEV400_1') +
   REPLACE
DEFINE QLOCAL('TDS_TDDEV400_1') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-10-27) +
*  ALTTIME(11.31.41) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2011-03-23) +
*  CRTIME(11.14.01) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('TransmitQ to TDS') +
   DISTL(YES) +
   GET(ENABLED) +
   HARDENBO +
   INITQ('SYSTEM.CHANNEL.INITQ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   TRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA('BNY_ABKA.TDS_TEST.C1') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(XMITQ) +
   REPLACE
DEFINE QREMOTE('TEMP.QUEUE') +
*  ALTDATE(2014-06-10) +
*  ALTTIME(12.25.02) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DESCR(' ') +
   PUT(ENABLED) +
   RQMNAME('BDSVD2') +
   RNAME('TEMP.QUEUE') +
   SCOPE(QMGR) +
   XMITQ('BDSVD2') +
   REPLACE
DEFINE QLOCAL('TEMP.SUNGUARD') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-10-16) +
*  ALTTIME(13.28.36) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-10-16) +
*  CRTIME(13.28.36) +
*  CURDEPTH(1) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR(' ') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(5000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('TEMP.TLX.IN') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-06-25) +
*  ALTTIME(16.15.05) +
   BOQNAME('MQABNY.MQABNY.BMC.BMC.BNYM_BDC_ALL_X') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-06-10) +
*  CRTIME(10.56.31) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR(' ') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QREMOTE('TEST_ABDA_OUT') +
*  ALTDATE(2014-09-09) +
*  ALTTIME(14.18.39) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DESCR(' ') +
   PUT(ENABLED) +
   RQMNAME('ABUA') +
   RNAME('TEST10') +
   SCOPE(QMGR) +
   XMITQ('ABUA') +
   REPLACE
DEFINE QLOCAL('TEST_IN') +
   ACCTQ(QMGR) +
*  ALTDATE(2012-11-28) +
*  ALTTIME(16.37.22) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2012-11-28) +
*  CRTIME(16.37.22) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR(' ') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(5000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QREMOTE('TEST_OUT') +
*  ALTDATE(2013-07-23) +
*  ALTTIME(10.42.26) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DESCR(' ') +
   PUT(ENABLED) +
   RQMNAME('BDSVD2') +
   RNAME('BNY_TO_SMB_RETAIL_RECV') +
   SCOPE(QMGR) +
   XMITQ('BDSVD2') +
   REPLACE
DEFINE QLOCAL('TEST_QM') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-10-10) +
*  ALTTIME(06.54.44) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2013-05-01) +
*  CRTIME(09.55.09) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('TransmitQ to ADP/ICI TEST_QM') +
   DISTL(YES) +
   GET(ENABLED) +
   HARDENBO +
   INITQ('SYSTEM.CHANNEL.INITQ') +
*  IPPROCS(0) +
   MAXDEPTH(50000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   TRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(1) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA('ABKA.ADP_TEST_QM.C1') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(XMITQ) +
   REPLACE
DEFINE QLOCAL('TEST_SGD_BGM') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-10-27) +
*  ALTTIME(13.16.55) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-10-27) +
*  CRTIME(13.16.55) +
*  CURDEPTH(2) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR(' ') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(5000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QALIAS('TLX.BMC.SWIFTNET_BDS_I') +
*  ALTDATE(2014-06-10) +
*  ALTTIME(03.42.44) +
   TARGET('SWIFTNET_BDS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RVR1724 RECEIVING MESSAGES FROM MSGRTR') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QLOCAL('TMQM') +
   ACCTQ(QMGR) +
*  ALTDATE(2012-04-24) +
*  ALTTIME(03.43.34) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2012-03-27) +
*  CRTIME(18.29.16) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('TransmitQ to MKG/TMQM') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ('SYSTEM.CHANNEL.INITQ') +
*  IPPROCS(0) +
   MAXDEPTH(50000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   TRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA('ABKA.TMQM.C1') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(XMITQ) +
   REPLACE
DEFINE QLOCAL('TSLK') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-10-20) +
*  ALTTIME(14.37.08) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2012-05-15) +
*  CRTIME(14.54.03) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('TransmitQ to GDS/TSLK') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ('SYSTEM.CHANNEL.INITQ') +
*  IPPROCS(0) +
   MAXDEPTH(50000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   TRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA('ABKA.TSLK.C1') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(XMITQ) +
   REPLACE
DEFINE QALIAS('UBS.BMC.SWP_INS_I') +
*  ALTDATE(2014-07-16) +
*  ALTTIME(11.00.23) +
   TARGET('MQABNY.MQABNY.BMC.BMC.SWFPP_FED_INS_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('itsp# 312917') +
   GET(DISABLED) +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QLOCAL('UBS_INS_I_MODEL') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-09-20) +
*  ALTTIME(23.01.36) +
   BOQNAME(' ') +
   BOTHRESH(3) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-09-20) +
*  CRTIME(23.01.36) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('RWX1454 GSCX INSTRUCTIONS FROM UBS') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(2048) +
   MONQ(QMGR) +
   MSGDLVSQ(FIFO) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(10) +
   QDEPTHLO(5) +
   QDPHIEV(ENABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(900000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(NONE) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('UNIX.INITQ') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.44) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-03-02) +
*  CRTIME(14.12.44) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR(' ') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('VQDF') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-10-24) +
*  ALTTIME(03.58.42) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-09-13) +
*  CRTIME(11.00.50) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('TransmitQ to VQDF') +
   DISTL(YES) +
   GET(ENABLED) +
   HARDENBO +
   INITQ('SYSTEM.CHANNEL.INITQ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   TRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(1) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(40) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(120000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA('ABKA.TO.VQDF') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(XMITQ) +
   REPLACE
DEFINE QREMOTE('VQDF.REMOTE.QUEUE') +
*  ALTDATE(2010-09-13) +
*  ALTTIME(11.00.50) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(9) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('Queue for accessing TARGET.QUEUE on VQDF') +
   PUT(ENABLED) +
   RQMNAME('VQDF') +
   RNAME('VQDF.TARGET.QUEUE') +
   SCOPE(QMGR) +
   XMITQ('VQDF') +
   REPLACE
DEFINE QLOCAL('VQDH') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-10-28) +
*  ALTTIME(10.58.44) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-04-11) +
*  CRTIME(04.24.57) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('ITSP # 442525') +
   DISTL(NO) +
   GET(DISABLED) +
   HARDENBO +
   INITQ('SYSTEM.CHANNEL.INITQ') +
*  IPPROCS(0) +
   MAXDEPTH(5000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA('ABKA.TO.VQDH') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(XMITQ) +
   REPLACE
DEFINE QLOCAL('VQDN') +
   ACCTQ(QMGR) +
*  ALTDATE(2012-09-25) +
*  ALTTIME(14.39.10) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2012-09-25) +
*  CRTIME(14.37.56) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('TransmitQ to VQDN') +
   DISTL(YES) +
   GET(ENABLED) +
   HARDENBO +
   INITQ('SYSTEM.CHANNEL.INITQ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   TRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA('ABKA.TO.VQDN') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(XMITQ) +
   REPLACE
DEFINE QREMOTE('VQDN.REMOTE.QUEUE') +
*  ALTDATE(2012-09-25) +
*  ALTTIME(14.37.56) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(9) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('Queue for accessing TARGET.QUEUE on VQDN') +
   PUT(ENABLED) +
   RQMNAME('VQDN') +
   RNAME('VQDN.TARGET.QUEUE') +
   SCOPE(QMGR) +
   XMITQ('VQDN') +
   REPLACE
DEFINE QLOCAL('VQIH') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-06-10) +
*  ALTTIME(14.59.56) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-06-10) +
*  CRTIME(14.55.30) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('ITSP475986:TransmitQ to VQIH') +
   DISTL(YES) +
   GET(ENABLED) +
   HARDENBO +
   INITQ('SYSTEM.CHANNEL.INITQ') +
*  IPPROCS(0) +
   MAXDEPTH(50000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   TRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA('ABKA.TO.VQIH') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(XMITQ) +
   REPLACE
DEFINE QREMOTE('VQIH.REMOTE.QUEUE') +
*  ALTDATE(2014-06-10) +
*  ALTTIME(14.55.30) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(9) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('Queue for accessing TARGET.QUEUE on VQIH') +
   PUT(ENABLED) +
   RQMNAME('VQIH') +
   RNAME('VQIH.TARGET.QUEUE') +
   SCOPE(QMGR) +
   XMITQ('VQIH') +
   REPLACE
DEFINE QREMOTE('VQPB') +
*  ALTDATE(2011-03-15) +
*  ALTTIME(17.47.11) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DESCR(' ') +
   PUT(ENABLED) +
   RQMNAME('ABKA') +
   RNAME(' ') +
   SCOPE(QMGR) +
   XMITQ(' ') +
   REPLACE
DEFINE QLOCAL('VQUN') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-10-27) +
*  ALTTIME(15.41.04) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2012-09-25) +
*  CRTIME(15.06.53) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('TransmitQ to VQUN') +
   DISTL(YES) +
   GET(ENABLED) +
   HARDENBO +
   INITQ('SYSTEM.CHANNEL.INITQ') +
*  IPPROCS(0) +
   MAXDEPTH(75000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   TRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA('ABKA.TO.VQUN') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(XMITQ) +
   REPLACE
DEFINE QREMOTE('VQUN.REMOTE.QUEUE') +
*  ALTDATE(2012-09-25) +
*  ALTTIME(15.06.53) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(9) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('Queue for accessing TARGET.QUEUE on VQUN') +
   PUT(ENABLED) +
   RQMNAME('VQUN') +
   RNAME('VQUN.TARGET.QUEUE') +
   SCOPE(QMGR) +
   XMITQ('VQUN') +
   REPLACE
DEFINE QLOCAL('WQAH') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-10-28) +
*  ALTTIME(07.48.40) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2012-02-22) +
*  CRTIME(15.33.08) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('TransmitQ to WQAH') +
   DISTL(YES) +
   GET(ENABLED) +
   HARDENBO +
   INITQ('SYSTEM.CHANNEL.INITQ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   TRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(1) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(40) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(120000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA('ABKA.TO.WQAH') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(XMITQ) +
   REPLACE
DEFINE QREMOTE('WQAH.REMOTE.QUEUE') +
*  ALTDATE(2012-02-22) +
*  ALTTIME(15.33.08) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(9) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('Queue for accessing TARGET.QUEUE on WQAH') +
   PUT(ENABLED) +
   RQMNAME('WQAH') +
   RNAME('WQAH.TARGET.QUEUE') +
   SCOPE(QMGR) +
   XMITQ('WQAH') +
   REPLACE
DEFINE QLOCAL('WQYB') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-10-27) +
*  ALTTIME(15.28.42) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-09-23) +
*  CRTIME(12.53.04) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('TransmitQ to WQYB') +
   DISTL(YES) +
   GET(ENABLED) +
   HARDENBO +
   INITQ('SYSTEM.CHANNEL.INITQ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   TRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(40) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(120000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA('ABKA.TO.WQYB') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(XMITQ) +
   REPLACE
DEFINE QREMOTE('WQYB.REMOTE.QUEUE') +
*  ALTDATE(2010-09-23) +
*  ALTTIME(12.53.04) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(9) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('Queue for accessing TARGET.QUEUE on WQYB') +
   PUT(ENABLED) +
   RQMNAME('WQYB') +
   RNAME('WQYB.TARGET.QUEUE') +
   SCOPE(QMGR) +
   XMITQ('WQYB') +
   REPLACE
DEFINE QLOCAL('WQYC') +
   ACCTQ(QMGR) +
*  ALTDATE(2010-09-27) +
*  ALTTIME(11.34.02) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-09-23) +
*  CRTIME(12.53.10) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('TransmitQ to WQYC') +
   DISTL(YES) +
   GET(ENABLED) +
   HARDENBO +
   INITQ('SYSTEM.CHANNEL.INITQ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   TRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(40) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(120000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA('ABKA.TO.WQYC') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(XMITQ) +
   REPLACE
DEFINE QREMOTE('WQYC.REMOTE.QUEUE') +
*  ALTDATE(2010-09-23) +
*  ALTTIME(12.53.10) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(9) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('Queue for accessing TARGET.QUEUE on WQYC') +
   PUT(ENABLED) +
   RQMNAME('WQYC') +
   RNAME('WQYC.TARGET.QUEUE') +
   SCOPE(QMGR) +
   XMITQ('WQYC') +
   REPLACE
DEFINE QLOCAL('WQYD') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-10-28) +
*  ALTTIME(10.59.57) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2010-09-23) +
*  CRTIME(12.53.17) +
*  CURDEPTH(27) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('TransmitQ to WQYD') +
   DISTL(YES) +
   GET(DISABLED) +
   HARDENBO +
   INITQ('SYSTEM.CHANNEL.INITQ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(40) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(OK) +
   QSVCINT(120000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA('ABKA.TO.WQYD') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(XMITQ) +
   REPLACE
DEFINE QREMOTE('WQYD.REMOTE.QUEUE') +
*  ALTDATE(2010-09-23) +
*  ALTTIME(13.10.37) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(9) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DESCR('Queue for accessing TARGET.QUEUE on WQYD') +
   PUT(ENABLED) +
   RQMNAME('WQYD') +
   RNAME('WQYD.TARGET.QUEUE') +
   SCOPE(QMGR) +
   XMITQ('WQYD') +
   REPLACE
DEFINE QALIAS('WUI.BMC.ALL_FRB_RSP_I') +
*  ALTDATE(2012-10-08) +
*  ALTTIME(02.16.09) +
   TARGET('MQVBNY.MQABNY.BMC.WUI.ALL_FRB_RSP_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RYO1706 QUEUE FOR FED TRAFFIC TO BDC') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('WUI.BMC.ALL_FRB_RSP_I_P') +
*  ALTDATE(2012-10-08) +
*  ALTTIME(02.16.09) +
   TARGET('MQVBNY.MQABNY.BMC.WUI.ALL_FRB_RSP_I_P') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RYO1706 QUEUE FOR FED TRAFFIC FOR BDC PARALLEL') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('WUI.BMC.FRB_BDCT_SEC_I') +
*  ALTDATE(2014-04-22) +
*  ALTTIME(01.37.14) +
   TARGET('MQVBNY.MQABNY.BMC.WUI.FRB_BDCT_SEC_I') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RID1590 QUEUE FOR SSE BDCT MSGS TO SSE') +
   GET(DISABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QLOCAL('XBBJ605.LOCAL.QUEUE') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-04-07) +
*  ALTTIME(11.49.30) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-04-07) +
*  CRTIME(11.49.30) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR(' ') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(5000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('XBBJ605.MODEL.QUEUE') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-04-07) +
*  ALTTIME(12.27.07) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-04-07) +
*  CRTIME(11.54.42) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR(' ') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(5000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QALIAS('XLM.BMC.KMS_XLM_CMS_O') +
*  ALTDATE(2014-07-24) +
*  ALTTIME(00.02.13) +
   TARGET('MQABNY.MQABNY.XLM.BMC.KMS_XLM_CMS_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RNG1728 BMC OUTBOUND QUEUE FOR XLM FROM BMC') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('XLM.BMC.RE1_XLM_O') +
*  ALTDATE(2014-07-24) +
*  ALTTIME(00.02.13) +
   TARGET('MQABNY.MQABNY.XLM.BMC.RE1_XLM_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RNG1728 BMC OUTBOUND QUEUE FOR XLM FROM RPO') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('XLM.BMC.RE2_XLM_O') +
*  ALTDATE(2014-07-24) +
*  ALTTIME(00.02.13) +
   TARGET('MQABNY.MQABNY.XLM.BMC.RE2_XLM_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RNG1728 BMC OUTBOUND QUEUE FOR XLM FROM RPO') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('XLM.BMC.RE3_XLM_O') +
*  ALTDATE(2014-07-24) +
*  ALTTIME(00.02.13) +
   TARGET('MQABNY.MQABNY.XLM.BMC.RE3_XLM_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RNG1728 BMC OUTBOUND QUEUE FOR XLM FROM RPO') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QALIAS('XLM.BMC.RE4_XLM_O') +
*  ALTDATE(2014-07-24) +
*  ALTTIME(00.02.13) +
   TARGET('MQABNY.MQABNY.XLM.BMC.RE4_XLM_O') +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DESCR('RNG1728 BMC OUTBOUND QUEUE FOR XLM FROM RPO') +
   GET(ENABLED) +
   PUT(DISABLED) +
   PROPCTL(COMPAT) +
   SCOPE(QMGR) +
   TARGTYPE(QUEUE) +
   REPLACE
DEFINE QLOCAL('YQZ') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-07-28) +
*  ALTTIME(10.21.22) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-07-28) +
*  CRTIME(10.21.22) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR(' ') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(5000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('YYY_IMX3') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-07-03) +
*  ALTTIME(14.55.21) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-07-03) +
*  CRTIME(14.55.21) +
*  CURDEPTH(17) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR(' ') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(5000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
DEFINE QLOCAL('ZMQT') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-08-05) +
*  ALTTIME(15.09.31) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2012-09-18) +
*  CRTIME(13.49.33) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('TransmitQ to ZMQT, ITSP# 497513') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ('SYSTEM.CHANNEL.INITQ') +
*  IPPROCS(0) +
   MAXDEPTH(10000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(40) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(HIGH) +
   QSVCINT(120000) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA('ABKA.TO.ZMQT') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(XMITQ) +
   REPLACE
DEFINE QLOCAL('ZMQT_S1') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-10-21) +
*  ALTTIME(11.28.09) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-07-31) +
*  CRTIME(04.46.36) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('itsp# 505405') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ('SYSTEM.CHANNEL.INITQ') +
*  IPPROCS(0) +
   MAXDEPTH(5000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   TRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(1) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA('ABKA.ZMQT.S1') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(XMITQ) +
   REPLACE
DEFINE QLOCAL('ZMQX') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-10-24) +
*  ALTTIME(17.28.35) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2012-09-18) +
*  CRTIME(13.47.38) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(YES) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('ITSP150511:TransmitQ to ZMQX') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ('SYSTEM.CHANNEL.INITQ') +
*  IPPROCS(0) +
   MAXDEPTH(50000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   TRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(3) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA('ABKA.ZMQX.C1') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(XMITQ) +
   REPLACE
DEFINE QLOCAL('ZMQX_S1') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-10-28) +
*  ALTTIME(09.51.17) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-07-02) +
*  CRTIME(22.30.13) +
*  CURDEPTH(0) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR('itsp# 490282') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ('SYSTEM.CHANNEL.INITQ') +
*  IPPROCS(0) +
   MAXDEPTH(5000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   TRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(0) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA('ABKA.ZMQX.S1') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(XMITQ) +
   REPLACE
DEFINE QLOCAL('ZZZ_OUT') +
   ACCTQ(QMGR) +
*  ALTDATE(2014-09-26) +
*  ALTTIME(06.32.31) +
   BOQNAME(' ') +
   BOTHRESH(0) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLCHNAME(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLUSEQ(QMGR) +
*  CRDATE(2014-09-26) +
*  CRTIME(06.32.31) +
*  CURDEPTH(387) +
   CUSTOM(' ') +
   DEFBIND(OPEN) +
   DEFPRTY(0) +
   DEFPSIST(NO) +
   DEFPRESP(SYNC) +
   DEFREADA(NO) +
   DEFSOPT(SHARED) +
*  DEFTYPE(PREDEFINED) +
   DESCR(' ') +
   DISTL(NO) +
   GET(ENABLED) +
   HARDENBO +
   INITQ(' ') +
*  IPPROCS(0) +
   MAXDEPTH(5000) +
   MAXMSGL(4194304) +
   MONQ(QMGR) +
   MSGDLVSQ(PRIORITY) +
   NOTRIGGER +
   NPMCLASS(NORMAL) +
*  OPPROCS(1) +
   PROCESS(' ') +
   PUT(ENABLED) +
   PROPCTL(COMPAT) +
   QDEPTHHI(80) +
   QDEPTHLO(20) +
   QDPHIEV(DISABLED) +
   QDPLOEV(DISABLED) +
   QDPMAXEV(ENABLED) +
   QSVCIEV(NONE) +
   QSVCINT(999999999) +
   RETINTVL(999999999) +
   SCOPE(QMGR) +
   SHARE +
   STATQ(QMGR) +
   TRIGDATA(' ') +
   TRIGDPTH(1) +
   TRIGMPRI(0) +
   TRIGTYPE(FIRST) +
   USAGE(NORMAL) +
   REPLACE
SET AUTHREC +
   PROFILE('ABDA') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ABDA') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('ABJA') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ABJA.TO.ABKA.TEST.01') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ABJA.TO.ABKA.TEST.01') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ABKA.DEAD.QUEUE') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ABKA.DEAD.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ABKA.DEAD.QUEUE') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('ABKA.TARGET.QUEUE') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ABKA.TARGET.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ABKA.TARGET.QUEUE') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ABKA.TO.ABJA.TEST.01') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ABKA.TO.ABJA.TEST.01') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ABPA') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ABPA') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('ABUA') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ABUA') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ADPSYS0AB') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ADPSYS0AB') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ADPSYS0AB') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('ADPSYS0AB_1') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ADPSYS0AB_1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ADPSYS0AB_1') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('ADPSYS0B') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ADPSYS0B') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ADPSYS0B') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('ADPSYS0B_1') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ADPSYS0B_1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ADPSYS0B_1') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('ADPSYS0B_2') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ADPSYS0B_2') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ADPSYS0B_2') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('ADPSYS0B_3') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ADPSYS0B_3') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ADPSYS0B_3') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('ADPSYS0C_1') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ADPSYS0C_1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ADPSYS0C_1') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('ADPSYS1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ADPSYS1') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('ADPSYS1_1') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ADPSYS1_1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ADPSYS1_1') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ADPSYS1_1') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('ADPSYS1_2') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ADPSYS1_2') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ADPSYS1_2') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ADPSYS1_2') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('ADP_SYS1_1') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ADP_SYS1_1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ADP_SYS1_1') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('ADP_SYS1_2') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ADP_SYS1_2') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ADP_SYS1_2') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('AIS.BMC.AIS_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AIS.BMC.AIS_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('AIS.BMC.AIS_RSP_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AIS.BMC.AIS_RSP_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('AMC.GSCX.TO.CMSFED.ACCP') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AMC.GSCX.TO.CMSFED.ACCP') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AMC.GSCX.TO.CMSFED.ACCP') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('AMC.GSCX.TO.CMSFED.SYST') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AMC.GSCX.TO.CMSFED.SYST') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AMC.GSCX.TO.CMSFED.SYST') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('AMC.GSCX.TO.CMSFED.UNIT') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AMC.GSCX.TO.CMSFED.UNIT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AMC.GSCX.TO.CMSFED.UNIT') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('AMH.BMC.SWP_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AMH.BMC.SWP_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('AQT3') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AQT3') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('AQT3') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('ASMPMQI') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ASMPMQI') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BBHTST') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BBHTST') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BBHTST') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BBP.BMC.BBP_INS_I') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BBP.BMC.BBP_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BBP.BMC.BBP_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BBP.BMC.HAR_INS_I') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BBP.BMC.HAR_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BBP.BMC.HAR_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BDC.BMC.ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BDC.BMC.ACK_O') +
   GROUP('pbdc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BDC.BMC.ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BDC.BMC.ACK_O') +
   GROUP('dbdc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BDC.BMC.ALL_FRB_RSP_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BDC.BMC.ALL_FRB_RSP_I') +
   GROUP('dbdc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BDC.BMC.ALL_FRB_RSP_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BDC.BMC.BNYM_FRB_INS_H_CU') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BDC.BMC.BNYM_FRB_INS_H_CU') +
   GROUP('dbdc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BDC.BMC.BNYM_FRB_INS_H_CU') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BDC.BMC.BNYM_FRB_INS_L_CU') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BDC.BMC.BNYM_FRB_INS_L_CU') +
   GROUP('dbdc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BDC.BMC.BNYM_FRB_INS_L_CU') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BDC.BMC.BNYM_FRB_INS_O_CU') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BDC.BMC.BNYM_FRB_INS_O_CU') +
   GROUP('dbdc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BDC.BMC.BNYM_FRB_INS_O_CU') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BDC.BMC.CMS_FED_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BDC.BMC.CMS_FED_INS_I') +
   GROUP('dbdc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BDC.BMC.CMS_FED_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BDC.BMC.CONFIRM_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BDC.BMC.CONFIRM_I') +
   GROUP('pbdc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BDC.BMC.CONFIRM_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BDC.BMC.CONFIRM_I') +
   GROUP('dbdc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BDC.BMC.CONFIRM_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BDC.BMC.CONFIRM_O') +
   GROUP('pbdc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BDC.BMC.CONFIRM_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BDC.BMC.CONFIRM_O') +
   GROUP('dbdc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BDC.BMC.FED_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BDC.BMC.FED_INS_I') +
   GROUP('pbdc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BDC.BMC.FED_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BDC.BMC.FED_INS_I') +
   GROUP('dbdc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BDC.BMC.GNMA_FRB_INS_O_CU') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BDC.BMC.GNMA_FRB_INS_O_CU') +
   GROUP('dbdc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BDC.BMC.GNMA_FRB_INS_O_CU') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BDC.BMC.IMX2_FED_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BDC.BMC.IMX2_FED_INS_I') +
   GROUP('dbdc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BDC.BMC.IMX2_FED_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BDC.BMC.MX_CASH_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BDC.BMC.MX_CASH_ACK_O') +
   GROUP('pbdc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BDC.BMC.MX_CASH_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BDC.BMC.MX_CASH_ACK_O') +
   GROUP('dbdc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BDC.BMC.MX_CASH_CONF_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BDC.BMC.MX_CASH_CONF_O') +
   GROUP('pbdc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BDC.BMC.MX_CASH_CONF_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BDC.BMC.MX_CASH_CONF_O') +
   GROUP('dbdc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BDC.BMC.MX_CASH_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BDC.BMC.MX_CASH_INS_I') +
   GROUP('pbdc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BDC.BMC.MX_CASH_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BDC.BMC.MX_CASH_INS_I') +
   GROUP('dbdc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BDC.BMC.SWFNET_FED_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BDC.BMC.SWFNET_FED_INS_I') +
   GROUP('dbdc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BDC.BMC.SWFNET_FED_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BDC.BMC.SWFPP_FED_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BDC.BMC.SWFPP_FED_INS_I') +
   GROUP('dbdc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BDC.BMC.SWFPP_FED_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BDC.F.RPO.ACP_RESULT.0001') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BDC.F.RPO.ACP_RESULT.0001') +
   GROUP('dbdc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,SET)
SET AUTHREC +
   PROFILE('BDC.F.RPO.ACP_RESULT.0001') +
   GROUP('drpo') +
   OBJTYPE(QUEUE) +
   AUTHADD(DSP,INQ,PUT)
SET AUTHREC +
   PROFILE('BDC.F.RPO.ACP_RESULT.0001') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BDC.F.RPO.RPONFE_RESULT.0001') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BDC.F.RPO.RPONFE_RESULT.0001') +
   GROUP('dbdc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BDC.F.RPO.RPONFE_RESULT.0001') +
   GROUP('drpo') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BDC.F.RPO.RPONFE_RESULT.0001') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BDC.GSC.BDCNOTIF_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BDC.GSC.BDCNOTIF_O') +
   GROUP('dbdc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BDC.GSC.BDCNOTIF_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BDC.GSC.BDCRPT_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BDC.GSC.BDCRPT_O') +
   GROUP('dbdc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BDC.GSC.BDCRPT_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BDC.GSC.GSCRPT_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BDC.GSC.GSCRPT_O') +
   GROUP('dbdc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BDC.GSC.GSCRPT_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BDC.GSC.GSCSEC_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BDC.GSC.GSCSEC_O') +
   GROUP('dbdc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BDC.GSC.GSCSEC_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BDC.T.RPO.ACP_REQUEST.0001') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BDC.T.RPO.ACP_REQUEST.0001') +
   GROUP('dbdc') +
   OBJTYPE(QUEUE) +
   AUTHADD(DSP,INQ,PUT)
SET AUTHREC +
   PROFILE('BDC.T.RPO.ACP_REQUEST.0001') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BDC.T.RPO.RPONFE_REQUEST.0001') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BDC.T.RPO.RPONFE_REQUEST.0001') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BDSVD2') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BDSVD2') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BDSVD2.REMOTE.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BDSVD2.REMOTE.QUEUE') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.///.CLM_CMD_REQ_I_A') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.///.CLM_CMD_REQ_I_A') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.///.CLM_CMD_REQ_I_A') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.///.CLM_CMD_REQ_I_B') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.///.CLM_CMD_REQ_I_B') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.///.CLM_CMD_REQ_I_B') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.///.CLM_INQ_REQ_I_A') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.///.CLM_INQ_REQ_I_A') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.///.CLM_INQ_REQ_I_A') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.///.CLM_INQ_REQ_I_B') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.///.CLM_INQ_REQ_I_B') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.///.CLM_INQ_REQ_I_B') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.AIS.AIS_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.AIS.AIS_INS_I') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.AIS.AIS_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.AIS.AIS_RSP_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.AIS.AIS_RSP_I') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.AIS.AIS_RSP_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BBP.BBP_ACK_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BBP.BBP_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BBP.BBP_ACK_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BBP.BBP_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BBP.BBP_INS_I') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BBP.BBP_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BBP.BBP_INS_I') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BBP.BBP_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BBP.BBP_RSP_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BBP.BBP_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BBP.BBP_RSP_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BBP.BBP_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BBP.HAR_ACK_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BBP.HAR_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BBP.HAR_ACK_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BBP.HAR_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BBP.HAR_INS_I') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BBP.HAR_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BBP.HAR_INS_I') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BBP.HAR_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BBP.HAR_RSP_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BBP.HAR_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BBP.HAR_RSP_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BBP.HAR_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BDC.ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BDC.ACK_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BDC.ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BDC.CMS_FED_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BDC.CMS_FED_INS_I') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BDC.CMS_FED_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BDC.CONFIRM_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BDC.CONFIRM_I') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BDC.CONFIRM_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BDC.CONFIRM_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BDC.CONFIRM_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BDC.CONFIRM_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BDC.FED_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BDC.FED_INS_I') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BDC.FED_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BDC.IMX2_FED_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BDC.IMX2_FED_INS_I') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BDC.IMX2_FED_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BDC.MX_CASH_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BDC.MX_CASH_ACK_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BDC.MX_CASH_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BDC.MX_CASH_CONF_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BDC.MX_CASH_CONF_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BDC.MX_CASH_CONF_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BDC.MX_CASH_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BDC.MX_CASH_INS_I') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BDC.MX_CASH_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BDC.SWFNET_FED_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BDC.SWFNET_FED_INS_I') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BDC.SWFNET_FED_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BDC.SWFPP_FED_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BDC.SWFPP_FED_INS_I') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BDC.SWFPP_FED_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.ADM_BGM_INS_I') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.ADM_BGM_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.ADM_BGM_INS_I') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.ADM_BGM_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.ADM_CITI_RSP_O') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.ADM_CITI_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.ADM_CITI_RSP_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.ADM_CITI_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.ADM_DEF_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.ADM_DEF_RSP_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.ADM_DEF_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.ADM_PIMCO_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.ADM_PIMCO_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.ADM_PIMCO_RSP_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.ADM_PIMCO_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.ADM_RSP_BGM_M') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.ADM_RSP_BGM_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.ADM_RSP_BGM_M') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.ADM_RSP_BGM_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.ADM_RSP_SWF_M') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.ADM_RSP_SWF_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.ADM_RSP_SWF_M') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.ADM_RSP_SWF_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.ADM_RSP_X') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.ADM_RSP_X') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.ADM_RSP_X') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.ADM_RSP_X') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.ADM_SWF_INS_I') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.ADM_SWF_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.ADM_SWF_INS_I') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.ADM_SWF_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.ALL_CLM_CMS_B') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.ALL_CLM_CMS_B') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.ALL_CLM_CMS_B') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.ALL_CLM_CMS_B') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.ALL_GRAM_INS_I_P1') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.ALL_GRAM_INS_I_P1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.ALL_GRAM_INS_I_P1') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.ALL_GRAM_INS_I_P1') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.ALL_GRAM_INS_I_P2') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.ALL_GRAM_INS_I_P2') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.ALL_GRAM_INS_I_P2') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.ALL_GRAM_INS_I_P2') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.BDC_CASH_ACK_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BDC_CASH_ACK_M') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BDC_CASH_ACK_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.BDC_CASH_ACK_M') +
   GROUP('dbdc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BDC_CASH_CONF_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BDC_CASH_CONF_M') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BDC_CASH_CONF_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.BDC_CASH_CONF_M') +
   GROUP('dbdc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BDC_CASH_IN_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BDC_CASH_IN_M') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BDC_CASH_IN_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.BDC_CASH_IN_M') +
   GROUP('dbdc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BDC_DEF_CCONF_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BDC_DEF_CCONF_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BDC_DEF_CCONF_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.BDC_DEF_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BDC_DEF_RSP_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BDC_DEF_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.BDC_FTSACK_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BDC_FTSACK_M') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BDC_FTSACK_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.BDC_FTSACK_M') +
   GROUP('dbdc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BDC_FTSIN_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BDC_FTSIN_M') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BDC_FTSIN_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.BDC_FTSIN_M') +
   GROUP('dbdc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BDC_FTSOUT_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BDC_FTSOUT_M') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BDC_FTSOUT_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.BDC_FTSOUT_M') +
   GROUP('dbdc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BDS_XLI_ALL_S') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BDS_XLI_ALL_S') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BDS_XLI_ALL_S') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BDS_XLI_ALL_S') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.BGM_CASH_ACK_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BGM_CASH_ACK_M') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BGM_CASH_ACK_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.BGM_CASH_CONF_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BGM_CASH_CONF_M') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BGM_CASH_CONF_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.BGM_CASH_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BGM_CASH_INS_I') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BGM_CASH_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_ATB_RSH_I') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_ATB_RSH_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_ATB_RSH_I') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_ATB_RSH_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_ATB_RSH_O') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_ATB_RSH_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_ATB_RSH_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_ATB_RSH_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_BDC_ACK_M') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_BDC_ACK_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_BDC_ACK_M') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_BDC_ACK_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_BDC_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_BDC_ACK_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_BDC_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_BDC_ALL_R') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_BDC_ALL_R') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_BDC_ALL_R') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_BDC_ALL_R') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_BDC_ALL_S') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_BDC_ALL_S') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_BDC_ALL_S') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_BDC_ALL_S') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_BDC_ALL_X') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_BDC_ALL_X') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_BDC_ALL_X') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_BDC_ALL_X') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_BDC_ALL_X') +
   GROUP('dbdc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_BDC_BLKFILE_M') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_BDC_BLKFILE_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_BDC_BLKFILE_M') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_BDC_BLKFILE_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_BDC_BLKFILE_M') +
   GROUP('dbdc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_BDC_BNYCONF_M') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_BDC_BNYCONF_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_BDC_BNYCONF_M') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_BDC_BNYCONF_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_BDC_BVAL_M') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_BDC_BVAL_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_BDC_BVAL_M') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_BDC_BVAL_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_BDC_ERR_E') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_BDC_ERR_E') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_BDC_ERR_E') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_BDC_ERR_E') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_BDC_GRAM_M') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_BDC_GRAM_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_BDC_GRAM_M') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_BDC_GRAM_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_BDC_STIFIN_M') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_BDC_STIFIN_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_BDC_STIFIN_M') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_BDC_STIFIN_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_BDC_STIFOUT_M') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_BDC_STIFOUT_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_BDC_STIFOUT_M') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_BDC_STIFOUT_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_BDS_ALL_B') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_BDS_ALL_B') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_BDS_ALL_B') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_BDS_ALL_B') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_BDS_ALL_S') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_BDS_ALL_S') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_BDS_ALL_S') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_BDS_ALL_S') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_BDS_ALL_X') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_BDS_ALL_X') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_BDS_ALL_X') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_BDS_ERR_E') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_BDS_ERR_E') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_BDS_ERR_E') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_BDS_ERR_E') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_BDS_SCRAP') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_BDS_SCRAP') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_BDS_SCRAP') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_BE1_RSP_I') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_BE1_RSP_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_BE1_RSP_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_BE2_RSP_I') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_BE2_RSP_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_BE2_RSP_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_CMS_ACK_M') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_CMS_ACK_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_CMS_ACK_M') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_CMS_ACK_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_CMS_CONF_M') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_CMS_CONF_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_CMS_CONF_M') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_CMS_CONF_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_CTB_RSH_I') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_CTB_RSH_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_CTB_RSH_I') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_CTB_RSH_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_CTB_RSH_O') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_CTB_RSH_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_CTB_RSH_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_CTB_RSH_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_GSC_RSP_B') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_GSC_RSP_B') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_GSC_RSP_B') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_GSC_RSP_B') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_GSC_RSP_I') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_GSC_RSP_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_GSC_RSP_I') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_GSC_RSP_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_GSC_RSP_X') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_GSC_RSP_X') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_GSC_RSP_X') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_GSC_RSP_X') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_IMX2_ACK_M') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_IMX2_ACK_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_IMX2_ACK_M') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_IMX2_ACK_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_IMX2_CONF_M') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_IMX2_CONF_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_IMX2_CONF_M') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.BNYM_IMX2_CONF_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.CASH_INS_I') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.CASH_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.CASH_INS_I') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.CASH_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.CMI_ACK_M') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.CMI_ACK_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.CMI_ACK_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.CMS_ACK_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.CMS_ACK_M') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.CMS_ACK_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.CMS_CONF_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.CMS_CONF_M') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.CMS_CONF_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.DMS_I_SCRAP') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.DMS_I_SCRAP') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.DMS_I_SCRAP') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.DMS_I_SCRAP') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.FNF_566_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.FNF_566_INS_I') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.FNF_566_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.GSCX_DEF_RSP_O') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.GSCX_DEF_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.GSCX_DEF_RSP_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.GSCX_DEF_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.GTM_SWF_INS_I') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.GTM_SWF_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.GTM_SWF_INS_I') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.GTM_SWF_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.ICIQA_ACK_M') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.ICIQA_ACK_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.ICIQA_ACK_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.ICIQA_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.ICIQA_ACK_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.ICIQA_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.ICIQA_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.ICIQA_RSP_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.ICIQA_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.IMX2_ACK_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.IMX2_ACK_M') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.IMX2_ACK_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.IMX2_ACK_M') +
   GROUP('dbdc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.IMX2_CONF_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.IMX2_CONF_M') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.IMX2_CONF_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.IMX2_CONF_M') +
   GROUP('dbdc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.MICS_APP_SP1_M') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.MICS_APP_SP1_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.MSGRTR_BDS_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.MSGRTR_BDS_M') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.MSGRTR_BDS_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.MX_CASH_DEFRSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.MX_CASH_DEFRSP_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.MX_CASH_DEFRSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.QMON_CMD_RSP_M') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.QMON_CMD_RSP_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.QMON_CMD_RSP_M') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.QMON_CMD_RSP_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.QMON_RPT_ALM_M') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.QMON_RPT_ALM_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.QMON_RPT_ALM_M') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.QMON_RPT_ALM_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.QMON_RPT_STS_M') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.QMON_RPT_STS_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.QMON_RPT_STS_M') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.QMON_RPT_STS_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.RPOALLOC_INS_I') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.RPOALLOC_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.RPOALLOC_INS_I') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.RPOALLOC_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.SSB_ACK_M') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.SSB_ACK_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.SSB_ACK_M') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.SSB_ACK_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.SSB_CONF_M') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.SSB_CONF_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.SSB_CONF_M') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.SSB_CONF_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.SWFNET_ACK_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.SWFNET_ACK_M') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.SWFNET_ACK_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.SWFNET_CONF_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.SWFNET_CONF_M') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.SWFNET_CONF_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.SWFNET_FED_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.SWFNET_FED_INS_I') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.SWFNET_FED_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.SWFPP_ACK_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.SWFPP_ACK_M') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.SWFPP_ACK_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.SWFPP_CONF_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.SWFPP_CONF_M') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.SWFPP_CONF_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.SWFPP_FED_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.SWFPP_FED_INS_I') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.SWFPP_FED_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.SWFPP_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.SWFPP_INS_I') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.SWFPP_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.SWF_ACK_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.SWF_ACK_M') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.SWF_ACK_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.SWF_ADM_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.SWF_ADM_INS_I') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.SWF_ADM_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.SWF_CASH_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.SWF_CASH_INS_I') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.SWF_CASH_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.SWF_DTC_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.SWF_DTC_INS_I') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.SWF_DTC_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.SWIFTNET_BDS_M') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.SWIFTNET_BDS_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.SWIFTNET_BDS_M') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.SWIFTNET_BDS_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.SWIFTNET_BDS_X') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.SWIFTNET_BDS_X') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.SWIFTNET_BDS_X') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.SWIFTNET_BDS_X') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.SWIFTNET_NAK_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.SWIFTNET_NAK_M') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.SWIFTNET_NAK_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.SWIFT_PP_INS_I') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.SWIFT_PP_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.SWIFT_PP_INS_I') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.SWIFT_PP_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.SWP_GSCX1_INST') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.SWP_GSCX1_INST') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.SWP_GSCX1_INST') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.SWP_GSCX2_INST') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.SWP_GSCX2_INST') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.SWP_GSCX2_INST') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.SWP_INS_I') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.SWP_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.SWP_INS_I') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.SWP_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.SWP_INS_I_1') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.SWP_INS_I_1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.SWP_INS_I_1') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.SWP_INS_I_1') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.SWP_INS_I_2') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.SWP_INS_I_2') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.SWP_INS_I_2') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.SWP_INS_I_2') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.TEMP_APP_SP1_M') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.TEMP_APP_SP1_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.TEMP_APP_SP1_M') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.TEMP_APP_SP1_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.TEMP_APP_SP2_M') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.TEMP_APP_SP2_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.TEMP_APP_SP2_M') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.TEMP_APP_SP2_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.TEMP_APP_SP3_M') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.TEMP_APP_SP3_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.TEMP_APP_SP3_M') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.TEMP_APP_SP3_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.TEMP_APP_SP4_M') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.TEMP_APP_SP4_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.TEMP_APP_SP4_M') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.TEMP_APP_SP4_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.TEMP_APP_SP5_M') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.TEMP_APP_SP5_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.TEMP_APP_SP5_M') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.TEMP_APP_SP5_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.TEMP_APP_SP6_M') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.TEMP_APP_SP6_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.TEMP_APP_SP6_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMC.TEMP_APP_SP7_M') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.TEMP_APP_SP7_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMC.TEMP_APP_SP7_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMO.BMOCM_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMO.BMOCM_ACK_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMO.BMOCM_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.BMO.BMOCM_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMO.BMOCM_RSP_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.BMO.BMOCM_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.CIG.CIG_INS_I') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.CIG.CIG_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.CIG.CIG_INS_I') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.CIG.CIG_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.CIG.CIG_RPO_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.CIG.CIG_RPO_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.CIG.CIG_RPO_RSP_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.CIG.CIG_RPO_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.CIG.CIG_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.CIG.CIG_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.CIG.CIG_RSP_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.CIG.CIG_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.CIG.CWT_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.CIG.CWT_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.CIG.CWT_RSP_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.CIG.CWT_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.CIG.FEP_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.CIG.FEP_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.CIG.FEP_RSP_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.CIG.FEP_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.CLS.CLASS_INS_I') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.CLS.CLASS_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.CLS.CLASS_INS_I') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.CLS.CLASS_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.CMS.GSC_INS_I_A') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.CMS.GSC_INS_I_A') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.CMS.GSC_INS_I_A') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.CMS.GSC_INS_I_S') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.CMS.GSC_INS_I_S') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.CMS.GSC_INS_I_S') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.CMS.GSC_INS_I_U') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.CMS.GSC_INS_I_U') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.CMS.GSC_INS_I_U') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.CMS.GSC_RSP_O_A') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.CMS.GSC_RSP_O_A') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.CMS.GSC_RSP_O_A') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.CMS.GSC_RSP_O_A') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.CMS.GSC_RSP_O_S') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.CMS.GSC_RSP_O_S') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.CMS.GSC_RSP_O_S') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.CMS.GSC_RSP_O_S') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.CMS.GSC_RSP_O_U') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.CMS.GSC_RSP_O_U') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.CMS.GSC_RSP_O_U') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.CMS.GSC_RSP_O_U') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.CTG.RPOCNF_LIVE_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.CTG.RPOCNF_LIVE_RSP_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.CTG.RPOCNF_LIVE_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.CTG.RPOCNF_PROJ_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.CTG.RPOCNF_PROJ_RSP_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.CTG.RPOCNF_PROJ_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.FHF.FHF_INS_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.FHF.FHF_INS_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.FHF.FHF_INS_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.FHF.FHF_INS_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.FIS.DWR_ACK_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.FIS.DWR_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.FIS.DWR_ACK_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.FIS.DWR_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.FIS.DWR_ACK_O_D') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.FIS.DWR_ACK_O_D') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.FIS.DWR_ACK_O_D') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.FIS.DWR_ACK_O_D') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.FIS.DWR_ACK_O_ND') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.FIS.DWR_ACK_O_ND') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.FIS.DWR_ACK_O_ND') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.FIS.DWR_ACK_O_ND') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.FIS.DWR_INS_I') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.FIS.DWR_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.FIS.DWR_INS_I') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.FIS.DWR_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.FIS.DWR_INS_I_D') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.FIS.DWR_INS_I_D') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.FIS.DWR_INS_I_D') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.FIS.DWR_INS_I_D') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.FIS.DWR_INS_I_ND') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.FIS.DWR_INS_I_ND') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.FIS.DWR_INS_I_ND') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.FIS.DWR_INS_I_ND') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.FIS.DWR_RSP_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.FIS.DWR_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.FIS.DWR_RSP_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.FIS.DWR_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.FIS.DWR_RSP_O_D') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.FIS.DWR_RSP_O_D') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.FIS.DWR_RSP_O_D') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.FIS.DWR_RSP_O_D') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.FIS.DWR_RSP_O_ND') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.FIS.DWR_RSP_O_ND') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.FIS.DWR_RSP_O_ND') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.FIS.DWR_RSP_O_ND') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.FNI.SWIFTNET_ALL_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.FNI.SWIFTNET_ALL_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.FNI.SWIFTNET_ALL_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.FNI.SWIFTNET_BDS_O') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.FNI.SWIFTNET_BDS_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.FNI.SWIFTNET_BDS_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.FNI.SWIFTNET_BDS_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.FNI.SWIFTNET_DMM_O') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.FNI.SWIFTNET_DMM_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.FNI.SWIFTNET_DMM_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.FNI.SWIFTNET_DMM_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.GMS.GSEC_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.GMS.GSEC_ACK_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.GMS.GSEC_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.GMS.GSEC_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.GMS.GSEC_RSP_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.GMS.GSEC_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.GSC.BDC_FTSIN_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.GSC.BDC_FTSIN_I') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.GSC.BDC_FTSIN_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.GSC.BDC_FTSIN_R') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.GSC.BDC_FTSIN_R') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.GSC.BDC_FTSIN_R') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.GSC.BDC_FTSOUT_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.GSC.BDC_FTSOUT_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.GSC.BDC_FTSOUT_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.GSC.CLMC_BE11_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.GSC.CLMC_BE11_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.GSC.FTSIN_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.GSC.FTSIN_INS_I') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.GSC.FTSIN_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.GTM.GTM_SWF_INS_I_C') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.GTM.GTM_SWF_INS_I_C') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.GTM.GTM_SWF_INS_I_C') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.GUI.CLMC_AE11_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.GUI.CLMC_AE11_RSP_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.GUI.CLMC_AE11_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.GUI.CLMC_AE21_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.GUI.CLMC_AE21_RSP_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.GUI.CLMC_AE21_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.GUI.CLMI_AE11_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.GUI.CLMI_AE11_RSP_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.GUI.CLMI_AE11_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.GUI.CLMI_AE21_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.GUI.CLMI_AE21_RSP_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.GUI.CLMI_AE21_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.ACC_ACK_O') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.ACC_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.ACC_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.ACC_ACK_O') +
   GROUP('dbdc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.ACC_INS_I') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.ACC_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.ACC_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.ACC_RSP_O') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.ACC_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.ACC_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.AMH_ACK_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.AMH_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.AMH_ACK_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.AMH_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.AMH_INS_I') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.AMH_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.AMH_INS_I') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.AMH_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.AMH_RSP_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.AMH_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.AMH_RSP_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.AMH_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.BAS_ACK_O') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.BAS_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.BAS_ACK_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.BAS_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.BAS_INS_I') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.BAS_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.BAS_INS_I') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.BAS_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.BAS_RSP_O') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.BAS_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.BAS_RSP_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.BAS_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.BMO_ACK_O') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.BMO_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.BMO_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.BMO_INS_I') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.BMO_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.BMO_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.BMO_RSP_O') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.BMO_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.BMO_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.BNK_ACK_O') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.BNK_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.BNK_ACK_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.BNK_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.BNK_INS_I') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.BNK_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.BNK_INS_I') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.BNK_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.BNK_RSP_O') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.BNK_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.BNK_RSP_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.BNK_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.BNP_ACK_O') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.BNP_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.BNP_ACK_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.BNP_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.BNP_INS_I') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.BNP_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.BNP_INS_I') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.BNP_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.BNP_RSP_O') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.BNP_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.BNP_RSP_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.BNP_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.BZW_ACK_O') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.BZW_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.BZW_ACK_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.BZW_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.BZW_INS_I') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.BZW_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.BZW_INS_I') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.BZW_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.BZW_RSP_O') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.BZW_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.BZW_RSP_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.BZW_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.CITI_ACK_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.CITI_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.CITI_ACK_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.CITI_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.CITI_INS_I') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.CITI_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.CITI_INS_I') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.CITI_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.CITI_RSP_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.CITI_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.CITI_RSP_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.CITI_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.CRT_ACK_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.CRT_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.CRT_ACK_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.CRT_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.CRT_INS_I') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.CRT_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.CRT_INS_I') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.CRT_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.CRT_RSP_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.CRT_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.CRT_RSP_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.CRT_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.ETRD_ACK_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.ETRD_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.ETRD_ACK_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.ETRD_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.ETRD_INS_I') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.ETRD_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.ETRD_INS_I') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.ETRD_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.ETRD_RSP_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.ETRD_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.ETRD_RSP_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.ETRD_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.FOR_ACK_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.FOR_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.FOR_ACK_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.FOR_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.FOR_INS_I') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.FOR_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.FOR_INS_I') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.FOR_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.FOR_RSP_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.FOR_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.FOR_RSP_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.FOR_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.GRIF_ACK_O') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.GRIF_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.GRIF_ACK_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.GRIF_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.GRIF_INS_I') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.GRIF_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.GRIF_INS_I') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.GRIF_INS_I') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.GRIF_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.GRIF_RSP_O') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.GRIF_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.GRIF_RSP_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.GRIF_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.HVB_ACK_O') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.HVB_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.HVB_ACK_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.HVB_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.HVB_INS_I') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.HVB_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.HVB_INS_I') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.HVB_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.HVB_RSP_O') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.HVB_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.HVB_RSP_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.HVB_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.ICIQA_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.ICIQA_ACK_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.ICIQA_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.ICIQA_ACK_O') +
   GROUP('dbdc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.ICIQA_INS_I') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.ICIQA_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.ICIQA_INS_I') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.ICIQA_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.ICIQA_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.ICIQA_RSP_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.ICIQA_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.ING_ACK_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.ING_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.ING_ACK_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.ING_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.ING_ACK_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.ING_INS_I') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.ING_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.ING_INS_I') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.ING_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.ING_INS_I') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.ING_RSP_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.ING_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.ING_RSP_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.ING_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.ING_RSP_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.JEF_ACK_O') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.JEF_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.JEF_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.JEF_INS_I') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.JEF_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.JEF_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.JEF_RSP_O') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.JEF_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.JEF_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.JMC_ACK_O') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.JMC_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.JMC_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.JMC_INS_I') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.JMC_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.JMC_INS_I') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.JMC_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.JMC_RSP_O') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.JMC_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.JMC_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.KGS_ACK_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.KGS_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.KGS_ACK_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.KGS_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.KGS_INS_I') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.KGS_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.KGS_INS_I') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.KGS_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.KGS_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.KGS_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.KGS_RSP_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.KGS_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.LBBW_ACK_O') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.LBBW_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.LBBW_ACK_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.LBBW_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.LBBW_INS_I') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.LBBW_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.LBBW_INS_I') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.LBBW_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.LBBW_RSP_O') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.LBBW_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.LBBW_RSP_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.LBBW_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.LEG_ACK_O') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.LEG_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.LEG_ACK_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.LEG_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.LEG_INS_I') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.LEG_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.LEG_INS_I') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.LEG_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.LEG_RSP_O') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.LEG_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.LEG_RSP_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.LEG_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.MCD_ACK_O') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.MCD_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.MCD_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.MCD_INS_I') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.MCD_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.MCD_INS_I') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.MCD_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.MCD_RSP_O') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.MCD_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.MCD_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.MZS_ACK_O') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.MZS_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.MZS_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.MZS_INS_I') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.MZS_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.MZS_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.MZS_RSP_O') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.MZS_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.MZS_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.NAB_ACK_O') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.NAB_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.NAB_ACK_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.NAB_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.NAB_INS_I') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.NAB_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.NAB_INS_I') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.NAB_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.NAB_RSP_O') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.NAB_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.NAB_RSP_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.NAB_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.NOMUS_ACK_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.NOMUS_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.NOMUS_ACK_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.NOMUS_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.NOMUS_INS_I') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.NOMUS_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.NOMUS_INS_I') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.NOMUS_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.NOMUS_RSP_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.NOMUS_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.NOMUS_RSP_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.NOMUS_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.NSB_ACK_O') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.NSB_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.NSB_ACK_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.NSB_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.NSB_INS_I') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.NSB_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.NSB_INS_I') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.NSB_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.NSB_RSP_O') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.NSB_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.NSB_RSP_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.NSB_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.OPNH_ACK_O') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.OPNH_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.OPNH_ACK_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.OPNH_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.OPNH_INS_I') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.OPNH_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.OPNH_INS_I') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.OPNH_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.OPNH_RSP_O') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.OPNH_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.OPNH_RSP_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.OPNH_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.PJC_ACK_O') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.PJC_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.PJC_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.PJC_INS_I') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.PJC_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.PJC_INS_I') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.PJC_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.PJC_RSP_O') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.PJC_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.PJC_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.QPE_ACK_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.QPE_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.QPE_ACK_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.QPE_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.QPE_INS_I') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.QPE_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.QPE_INS_I') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.QPE_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.QPE_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.QPE_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.QPE_RSP_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.QPE_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.RBCD_ACK_O') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.RBCD_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.RBCD_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.RBCD_INS_I') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.RBCD_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.RBCD_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.RBCD_RSP_O') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.RBCD_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.RBCD_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.RBC_ACK_O') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.RBC_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.RBC_ACK_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.RBC_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.RBC_INS_I') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.RBC_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.RBC_INS_I') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.RBC_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.RBC_RSP_O') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.RBC_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.RBC_RSP_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.RBC_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.RGE_ACK_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.RGE_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.RGE_ACK_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.RGE_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.RGE_INS_I') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.RGE_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.RGE_INS_I') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.RGE_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.RGE_RSP_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.RGE_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.RGE_RSP_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.RGE_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.SAM_ACK_O') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.SAM_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.SAM_ACK_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.SAM_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.SAM_INS_I') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.SAM_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.SAM_INS_I') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.SAM_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.SAM_RSP_O') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.SAM_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.SAM_RSP_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.SAM_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.SCO_ACK_O') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.SCO_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.SCO_ACK_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.SCO_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.SCO_INS_I') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.SCO_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.SCO_INS_I') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.SCO_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.SCO_RSP_O') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.SCO_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.SCO_RSP_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.SCO_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.SG_PD_ACK_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.SG_PD_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.SG_PD_ACK_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.SG_PD_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.SG_PD_INS_I') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.SG_PD_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.SG_PD_INS_I') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.SG_PD_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.SG_PD_RSP_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.SG_PD_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.SG_PD_RSP_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.SG_PD_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.SUNT_ACK_O') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.SUNT_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.SUNT_ACK_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.SUNT_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.SUNT_INS_I') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.SUNT_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.SUNT_INS_I') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.SUNT_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.SUNT_RSP_O') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.SUNT_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.SUNT_RSP_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.SUNT_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.TDS_ACK_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.TDS_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.TDS_ACK_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.TDS_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.TDS_INS_I') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.TDS_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.TDS_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.TDS_INS_I') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.TDS_RSP_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.TDS_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.TDS_RSP_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.TDS_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.TMS_ACK_O') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.TMS_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.TMS_ACK_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.TMS_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.TMS_INS_I') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.TMS_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.TMS_INS_I') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.TMS_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.TMS_RSP_O') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.TMS_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.TMS_RSP_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.TMS_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.UBS_ACK_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.UBS_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.UBS_ACK_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.UBS_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.UBS_INS_I') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.UBS_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.UBS_INS_I') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.UBS_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.UBS_RSP_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.UBS_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.UBS_RSP_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.UBS_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.WCF_ACK_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.WCF_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.WCF_ACK_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.WCF_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.WCF_INS_I') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.WCF_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.WCF_INS_I') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.WCF_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.WCF_RSP_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.WCF_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.WCF_RSP_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.WCF_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.WLB_ACK_O') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.WLB_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.WLB_ACK_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.WLB_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.WLB_INS_I') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.WLB_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.WLB_INS_I') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.WLB_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.IMP.WLB_RSP_O') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.WLB_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.WLB_RSP_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.IMP.WLB_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.KMS.ALL_KMS_CMS_O') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.KMS.ALL_KMS_CMS_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.KMS.ALL_KMS_CMS_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.KMS.ALL_KMS_CMS_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.KMS.CLM_CMS_DEF_O') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.KMS.CLM_CMS_DEF_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.KMS.CLM_CMS_DEF_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.KMS.CLM_CMS_DEF_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.LIB.LIB_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.LIB.LIB_ACK_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.LIB.LIB_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.LIB.LIB_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.LIB.LIB_INS_I') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.LIB.LIB_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.LIB.LIB_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.LIB.LIB_RSP_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.LIB.LIB_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.LMS.BMC2LMS_INPUT1PUT') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.LMS.BMC2LMS_INPUT1PUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.LMS.BMC2LMS_INPUT1PUT') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.LMS.BMC2LMS_INPUT2PUT') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.LMS.BMC2LMS_INPUT2PUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.LMS.BMC2LMS_INPUT2PUT') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.LMS.BMC2LMS_INPUT3') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.LMS.BMC2LMS_INPUT3') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.LMS.BMC2LMS_INPUT3') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.LMS.BMC2LMS_INPUT5') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.LMS.BMC2LMS_INPUT5') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.LMS.BMC2LMS_INPUT5') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.MOR.MORDOM_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.MOR.MORDOM_INS_I') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.MOR.MORDOM_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.MOR.MSI_EQ_A38_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.MOR.MSI_EQ_A38_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.MOR.MSI_EQ_A38_RSP_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.MOR.MSI_EQ_A38_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.MOR.MSI_EQ_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.MOR.MSI_EQ_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.MOR.MSI_EQ_RSP_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.MOR.MSI_EQ_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.MOR.MSI_FX_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.MOR.MSI_FX_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.MOR.MSI_FX_RSP_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.MOR.MSI_FX_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.MOR.MS_DOM_ACK_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.MOR.MS_DOM_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.MOR.MS_DOM_ACK_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.MOR.MS_DOM_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.MOR.MS_DOM_INS_I') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.MOR.MS_DOM_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.MOR.MS_DOM_INS_I') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.MOR.MS_DOM_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.MOR.MS_DOM_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.MOR.MS_DOM_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.MOR.MS_DOM_RSP_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.MOR.MS_DOM_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.MOR.MS_GCF_ACK_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.MOR.MS_GCF_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.MOR.MS_GCF_ACK_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.MOR.MS_GCF_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.MOR.MS_GCF_INS_I') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.MOR.MS_GCF_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.MOR.MS_GCF_INS_I') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.MOR.MS_GCF_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.MOR.MS_GCF_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.MOR.MS_GCF_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.MOR.MS_GCF_RSP_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.MOR.MS_GCF_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.MOR.MS_REPO_ACK_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.MOR.MS_REPO_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.MOR.MS_REPO_ACK_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.MOR.MS_REPO_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.MOR.MS_REPO_INS_I') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.MOR.MS_REPO_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.MOR.MS_REPO_INS_I') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.MOR.MS_REPO_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.MOR.MS_REPO_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.MOR.MS_REPO_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.MOR.MS_REPO_RSP_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.MOR.MS_REPO_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.OCE.NSB_ACK_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.OCE.NSB_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.OCE.NSB_ACK_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.OCE.NSB_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.OCE.NSB_INS_I') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.OCE.NSB_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.OCE.NSB_INS_I') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.OCE.NSB_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.OCE.NSB_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.OCE.NSB_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.OCE.NSB_RSP_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.OCE.NSB_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.PH3.ADM_CFI_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.ADM_CFI_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.ADM_CFI_RSP_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.ADM_CFI_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.PH3.ADM_DSA_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.ADM_DSA_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.ADM_DSA_RSP_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.ADM_DSA_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.PH3.ADM_YPD_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.ADM_YPD_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.ADM_YPD_RSP_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.ADM_YPD_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.PH3.ADM_YZU_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.ADM_YZU_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.ADM_YZU_RSP_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.ADM_YZU_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.PH3.BGM_ALL_INS_I') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.BGM_ALL_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.BGM_ALL_INS_I') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.BGM_ALL_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_ALL_INS_I') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_ALL_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_ALL_INS_I') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_ALL_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_BAK_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_BAK_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_BAK_RSP_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_BAK_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_BBV_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_BBV_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_BBV_RSP_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_BBV_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_BGC_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_BGC_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_BGC_RSP_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_BGC_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_BLS_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_BLS_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_BLS_RSP_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_BLS_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_CCI_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_CCI_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_CCI_RSP_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_CCI_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_CFC_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_CFC_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_CFC_RSP_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_CFC_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_CFD_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_CFD_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_CFD_RSP_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_CFD_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_CFI_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_CFI_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_CFI_RSP_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_CFI_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_CFM_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_CFM_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_CFM_RSP_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_CFM_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_CLA_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_CLA_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_CLA_RSP_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_CLA_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_CLS_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_CLS_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_CLS_RSP_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_CLS_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_DAS_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_DAS_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_DAS_RSP_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_DAS_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_DSA_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_DSA_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_DSA_RSP_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_DSA_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_FBS_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_FBS_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_FBS_RSP_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_FBS_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_FNB_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_FNB_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_FNB_RSP_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_FNB_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_FUI_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_FUI_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_FUI_RSP_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_FUI_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_FUR_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_FUR_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_FUR_RSP_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_FUR_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_FUT_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_FUT_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_FUT_RSP_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_FUT_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_MFI_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_MFI_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_MFI_RSP_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_MFI_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_MSI_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_MSI_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_MSI_RSP_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_MSI_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_NOR_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_NOR_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_NOR_RSP_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_NOR_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_NWA_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_NWA_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_NWA_RSP_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_NWA_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_POP_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_POP_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_POP_RSP_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_POP_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_RCA_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_RCA_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_RCA_RSP_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_RCA_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_SNW_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_SNW_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_SNW_RSP_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_SNW_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_TAS_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_TAS_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_TAS_RSP_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_TAS_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_VIN_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_VIN_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_VIN_RSP_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_VIN_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_WSL_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_WSL_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_WSL_RSP_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.IMX_WSL_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.PH3.MIS_CFM_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.MIS_CFM_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.MIS_CFM_RSP_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.MIS_CFM_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.PH3.MIS_MFI_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.MIS_MFI_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.MIS_MFI_RSP_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.MIS_MFI_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.PH3.MIS_SNG_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.MIS_SNG_RSP_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.MIS_SNG_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.PH3.SNG_TEST_RSP_O') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.SNG_TEST_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.SNG_TEST_RSP_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PH3.SNG_TEST_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.PRA.PRA3_INS_O') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PRA.PRA3_INS_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PRA.PRA3_INS_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.PRA.PRA4_INS_O') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PRA.PRA4_INS_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PRA.PRA4_INS_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.PRA.PRA4_INS_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.QPE.READQ_INS_I') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.QPE.READQ_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.QPE.READQ_INS_I') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.QPE.READQ_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.QPE.READQ_RSP_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.QPE.READQ_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.QPE.READQ_RSP_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.QPE.READQ_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.RPO.ADM_ESB1_RSP_O_C') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.ADM_ESB1_RSP_O_C') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.ADM_ESB1_RSP_O_C') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.RPO.ADM_ESB1_RSP_O_C2') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.ADM_ESB1_RSP_O_C2') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.ADM_ESB1_RSP_O_C2') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.RPO.ADM_INS_I') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.ADM_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.ADM_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.RPO.ADM_INS_I_C1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.ADM_INS_I_C1') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.ADM_INS_I_C1') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.RPO.ADM_INS_I_C2') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.ADM_INS_I_C2') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.ADM_INS_I_C2') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.RPO.ALL_CLM_CMS_I') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.ALL_CLM_CMS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.ALL_CLM_CMS_I') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.ALL_CLM_CMS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.RPO.CLMC_RE11_RSP_O_A') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.CLMC_RE11_RSP_O_A') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.CLMC_RE11_RSP_O_A') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.RPO.CLMC_RE11_RSP_O_B') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.CLMC_RE11_RSP_O_B') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.CLMC_RE11_RSP_O_B') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.RPO.CLMC_RE21_RSP_O_A') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.CLMC_RE21_RSP_O_A') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.CLMC_RE21_RSP_O_A') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.RPO.CLMC_RE21_RSP_O_B') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.CLMC_RE21_RSP_O_B') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.CLMC_RE21_RSP_O_B') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.RPO.CLMC_RE31_RSP_O_A') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.CLMC_RE31_RSP_O_A') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.CLMC_RE31_RSP_O_A') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.RPO.CLMC_RE31_RSP_O_B') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.CLMC_RE31_RSP_O_B') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.CLMC_RE31_RSP_O_B') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.RPO.CLMC_RE41_RSP_O_A') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.CLMC_RE41_RSP_O_A') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.CLMC_RE41_RSP_O_A') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.RPO.CLMC_RE41_RSP_O_B') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.CLMC_RE41_RSP_O_B') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.CLMC_RE41_RSP_O_B') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.RPO.CLMC_REQ_O_A') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.CLMC_REQ_O_A') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.CLMC_REQ_O_A') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.RPO.CLMC_REQ_O_B') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.CLMC_REQ_O_B') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.CLMC_REQ_O_B') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.RPO.CLMC_RSP_I_A') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.CLMC_RSP_I_A') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.CLMC_RSP_I_A') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.RPO.CLMC_RSP_I_B') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.CLMC_RSP_I_B') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.CLMC_RSP_I_B') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.RPO.CLMI_RE11_RSP_O_A') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.CLMI_RE11_RSP_O_A') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.CLMI_RE11_RSP_O_A') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.RPO.CLMI_RE11_RSP_O_B') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.CLMI_RE11_RSP_O_B') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.CLMI_RE11_RSP_O_B') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.RPO.CLMI_RE21_RSP_O_A') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.CLMI_RE21_RSP_O_A') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.CLMI_RE21_RSP_O_A') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.RPO.CLMI_RE21_RSP_O_B') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.CLMI_RE21_RSP_O_B') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.CLMI_RE21_RSP_O_B') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.RPO.CLMI_RE31_RSP_O_A') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.CLMI_RE31_RSP_O_A') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.CLMI_RE31_RSP_O_A') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.RPO.CLMI_RE31_RSP_O_B') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.CLMI_RE31_RSP_O_B') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.CLMI_RE31_RSP_O_B') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.RPO.CLMI_RE41_RSP_O_A') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.CLMI_RE41_RSP_O_A') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.CLMI_RE41_RSP_O_A') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.RPO.CLMI_RE41_RSP_O_B') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.CLMI_RE41_RSP_O_B') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.CLMI_RE41_RSP_O_B') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.RPO.CLMI_REQ_O_A') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.CLMI_REQ_O_A') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.CLMI_REQ_O_A') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.RPO.CLMI_REQ_O_B') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.CLMI_REQ_O_B') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.CLMI_REQ_O_B') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.RPO.CLMI_RSP_I_A') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.CLMI_RSP_I_A') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.CLMI_RSP_I_A') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.RPO.CLMI_RSP_I_B') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.CLMI_RSP_I_B') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.CLMI_RSP_I_B') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.RPO.DEAL_ESB1_RSP_I_A') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.DEAL_ESB1_RSP_I_A') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.DEAL_ESB1_RSP_I_A') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.RPO.DEAL_ESB1_RSP_I_B') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.DEAL_ESB1_RSP_I_B') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.DEAL_ESB1_RSP_I_B') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.RPO.RE1_CMS_O') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.RE1_CMS_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.RE1_CMS_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.RE1_CMS_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.RPO.RE2_CMS_O') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.RE2_CMS_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.RE2_CMS_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.RE2_CMS_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.RPO.RE3_CMS_O') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.RE3_CMS_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.RE3_CMS_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.RE3_CMS_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.RPO.RE3_SWIFT_REV_Q') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.RE3_SWIFT_REV_Q') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.RE3_SWIFT_REV_Q') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.RPO.RE4_CMS_O') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.RE4_CMS_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.RE4_CMS_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.RE4_CMS_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.RPO.RE4_SWIFT_REV_Q') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.RE4_SWIFT_REV_Q') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.RE4_SWIFT_REV_Q') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.RPO.RE_NET_POSCONF_I') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.RE_NET_POSCONF_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.RE_NET_POSCONF_I') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.RE_NET_POSCONF_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.RPO.RPO2BMC_INQUIRE1.XYZ') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.RPO2BMC_INQUIRE1.XYZ') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.RPO2BMC_INQUIRE1.XYZ') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.RPO.RPO2BMC_INQUIREGET.XYZ') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.RPO2BMC_INQUIREGET.XYZ') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.RPO.RPO2BMC_INQUIREGET.XYZ') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.SAL.SAB_INS_I') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.SAL.SAB_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.SAL.SAB_INS_I') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.SAL.SAB_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.SAL.SAB_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.SAL.SAB_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.SAL.SAB_RSP_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.SAL.SAB_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.SAL.SAL_INS_I') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.SAL.SAL_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.SAL.SAL_INS_I') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.SAL.SAL_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.SAL.SAL_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.SAL.SAL_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.SAL.SAL_RSP_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.SAL.SAL_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.SAL.SHELL_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.SAL.SHELL_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.SAL.SHELL_RSP_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.SAL.SHELL_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.SMB.MBSDLV_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.SMB.MBSDLV_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.SMB.MBSDLV_RSP_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.SMB.MBSDLV_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.SMB.MBSFUT_INS_I') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.SMB.MBSFUT_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.SMB.MBSFUT_INS_I') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.SMB.MBSFUT_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.SMB.MBSFUT_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.SMB.MBSFUT_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.SMB.MBSFUT_RSP_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.SMB.MBSFUT_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.SMB.MBSREC_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.SMB.MBSREC_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.SMB.MBSREC_RSP_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.SMB.MBSREC_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.SMB.NKG_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.SMB.NKG_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.SMB.NKG_RSP_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.SMB.NKG_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.SMB.RETAIL_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.SMB.RETAIL_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.SMB.RETAIL_RSP_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.SMB.RETAIL_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.SMB.SMB_INS_I') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.SMB.SMB_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.SMB.SMB_INS_I') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.SMB.SMB_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.SMB.TRSRY_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.SMB.TRSRY_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.SMB.TRSRY_RSP_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.SMB.TRSRY_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.SSE.BDCT_SEC_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.SSE.BDCT_SEC_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.SSE.BDCT_SEC_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.TBL.CMI_ACK_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.TBL.CMI_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.TBL.CMI_ACK_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.TBL.CMI_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.TBL.CMI_ACK_O') +
   GROUP('dbdc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.TBL.CMI_INS_I') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.TBL.CMI_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.TBL.CMI_INS_I') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.TBL.CMI_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.TBL.CMI_RSP_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.TBL.CMI_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.TBL.CMI_RSP_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.TBL.CMI_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.TBL.GLE_ACK_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.TBL.GLE_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.TBL.GLE_ACK_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.TBL.GLE_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.TBL.GLE_INS_I') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.TBL.GLE_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.TBL.GLE_INS_I') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.TBL.GLE_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.TBL.GLE_RSP_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.TBL.GLE_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.TBL.GLE_RSP_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.TBL.GLE_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.TBL.PLM_ACK_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.TBL.PLM_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.TBL.PLM_ACK_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.TBL.PLM_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.TBL.PLM_INS_I') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.TBL.PLM_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.TBL.PLM_INS_I') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.TBL.PLM_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.TBL.PLM_RSP_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.TBL.PLM_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.TBL.PLM_RSP_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.TBL.PLM_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.TBL.SCB_ACK_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.TBL.SCB_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.TBL.SCB_ACK_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.TBL.SCB_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.TBL.SCB_INS_I') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.TBL.SCB_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.TBL.SCB_INS_I') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.TBL.SCB_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.TBL.SCB_RSP_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.TBL.SCB_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.TBL.SCB_RSP_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.TBL.SCB_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.TBL.SSS_ACK_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.TBL.SSS_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.TBL.SSS_ACK_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.TBL.SSS_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.TBL.SSS_ACK_O') +
   GROUP('dbdc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.TBL.SSS_INS_I') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.TBL.SSS_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.TBL.SSS_INS_I') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.TBL.SSS_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.TBL.SSS_RSP_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.TBL.SSS_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.TBL.SSS_RSP_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.TBL.SSS_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.TLX.SWIFTNET_BDS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.TLX.SWIFTNET_BDS_I') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.TLX.SWIFTNET_BDS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.TLX.SWIFTNET_BDS_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.TLX.SWIFTNET_BDS_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.TLX.SWIFTNET_BDS_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.VPM.VPM_RSP_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.VPM.VPM_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.VPM.VPM_RSP_O') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.VPM.VPM_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.WUI.ALL_FRB_RSP_I') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.WUI.ALL_FRB_RSP_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.WUI.ALL_FRB_RSP_I') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.WUI.ALL_FRB_RSP_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.WUI.ALL_FRB_RSP_I_C1') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.WUI.ALL_FRB_RSP_I_C1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.WUI.ALL_FRB_RSP_I_C1') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.WUI.ALL_FRB_RSP_I_C1') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.WUI.ALL_FRB_RSP_I_CP') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.WUI.ALL_FRB_RSP_I_CP') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.WUI.ALL_FRB_RSP_I_CP') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.WUI.ALL_FRB_RSP_I_CP') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.WUI.ALL_FRB_RSP_I_P') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.WUI.ALL_FRB_RSP_I_P') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.WUI.ALL_FRB_RSP_I_P') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.WUI.ALL_FRB_RSP_I_P') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.WUI.BNYM_FRB_INS_H_CU') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.WUI.BNYM_FRB_INS_H_CU') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.WUI.BNYM_FRB_INS_H_CU') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.WUI.BNYM_FRB_INS_L_CU') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.WUI.BNYM_FRB_INS_L_CU') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.WUI.BNYM_FRB_INS_L_CU') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.WUI.BNYM_FRB_INS_O_C1') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.WUI.BNYM_FRB_INS_O_C1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.WUI.BNYM_FRB_INS_O_C1') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.WUI.BNYM_FRB_INS_O_C1') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.WUI.BNYM_FRB_INS_O_CD') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.WUI.BNYM_FRB_INS_O_CD') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.WUI.BNYM_FRB_INS_O_CD') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.WUI.BNYM_FRB_INS_O_CD') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.WUI.BNYM_FRB_INS_O_CU') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.WUI.BNYM_FRB_INS_O_CU') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.WUI.BNYM_FRB_INS_O_CU') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.WUI.BNYM_FRB_INS_O_CU') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.WUI.FRB_BDCT_SEC_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.WUI.FRB_BDCT_SEC_I') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.WUI.FRB_BDCT_SEC_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.WUI.FRB_BDCT_SEC_I') +
   GROUP('w5rsse') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.WUI.GNMA_FRB_INS_O_C1') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.WUI.GNMA_FRB_INS_O_C1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.WUI.GNMA_FRB_INS_O_C1') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.WUI.GNMA_FRB_INS_O_C1') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.WUI.GNMA_FRB_INS_O_CD') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.WUI.GNMA_FRB_INS_O_CD') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.WUI.GNMA_FRB_INS_O_CD') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.WUI.GNMA_FRB_INS_O_CD') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.WUI.GNMA_FRB_INS_O_CU') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.WUI.GNMA_FRB_INS_O_CU') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.WUI.GNMA_FRB_INS_O_CU') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.WUI.GNMA_FRB_INS_O_CU') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.XAW.SWF_INS_O_C') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.XAW.SWF_INS_O_C') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.XAW.SWF_INS_O_C') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.XAW.SWF_INS_O_C') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.XLM.KMS_XLM_CMS_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.XLM.KMS_XLM_CMS_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.XLM.KMS_XLM_CMS_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.XLM.RE1_XLM_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.XLM.RE1_XLM_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.XLM.RE1_XLM_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.XLM.RE2_XLM_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.XLM.RE2_XLM_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.XLM.RE2_XLM_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.XLM.RE3_XLM_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.XLM.RE3_XLM_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.XLM.RE3_XLM_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMC.XLM.RE4_XLM_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.XLM.RE4_XLM_O') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMC.XLM.RE4_XLM_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BMOCM.BMC.SWP_INS_I') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMOCM.BMC.SWP_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMOCM.BMC.SWP_INS_I') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMOCMDEV') +
   GROUP('ymgdb2') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BMOCMDEV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNMA.BDC.BNMS.RPO.ACP_REQUEST.0001') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNMA.BDC.BNMS.RPO.ACP_REQUEST.0001') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNMA.BDC.BNMS.RPO.RPONFE_REQUEST.0001') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNMA.BDC.BNMS.RPO.RPONFE_REQUEST.0001') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNMS.RPO.BNMA.BDC.ACP_RESULT.0001') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNMS.RPO.BNMA.BDC.ACP_RESULT.0001') +
   GROUP('dbdc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,INQ)
SET AUTHREC +
   PROFILE('BNMS.RPO.BNMA.BDC.ACP_RESULT.0001') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNMS.RPO.BNMA.BDC.RPONFE_RESULT.0001') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNMS.RPO.BNMA.BDC.RPONFE_RESULT.0001') +
   GROUP('dbdc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNMS.RPO.BNMA.BDC.RPONFE_RESULT.0001') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNP.BMC.SWIFT_PP_INS_I') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNP.BMC.SWIFT_PP_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNP.BMC.SWIFT_PP_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNP.BMC.SWP_INS_I') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNP.BMC.SWP_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNP.BMC.SWP_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNSUATCDS') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNSUATCDS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNSUATCDS') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY.ELI.BBH.SONIC.ACKNAK.BBP') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY.ELI.BBH.SONIC.ACKNAK.BBP') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY.ELI.BBH.SONIC.ACKNAK.BBP') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY.ELI.BBH.SONIC.ACKNAK.HAR') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY.ELI.BBH.SONIC.ACKNAK.HAR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY.ELI.BBH.SONIC.ACKNAK.HAR') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY.ELI.BBH.SONIC.CONFIRM.BBP') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY.ELI.BBH.SONIC.CONFIRM.BBP') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY.ELI.BBH.SONIC.CONFIRM.BBP') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY.ELI.BBH.SONIC.CONFIRM.HAR') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY.ELI.BBH.SONIC.CONFIRM.HAR') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY.ELI.BBH.SONIC.CONFIRM.HAR') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY.TO.CIGCWT.RESPONSE') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY.TO.CIGCWT.RESPONSE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY.TO.CIGCWT.RESPONSE') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY.TO.CIGFFP.RESPONSE') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY.TO.CIGFFP.RESPONSE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY.TO.CIGFFP.RESPONSE') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY.TO.CIT.RESPONSE') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY.TO.CIT.RESPONSE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY.TO.CIT.RESPONSE') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY.TO.CIT.RPO.RESPONSE') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY.TO.CIT.RPO.RESPONSE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY.TO.CIT.RPO.RESPONSE') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY.TO.GSEC.ACKNAK') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY.TO.GSEC.CONFIRM') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY.TO.MSCO.ACKNAK') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY.TO.MSCO.ACKNAK') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY.TO.MSCO.ACKNAK') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY.TO.MSCO.RECV1') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY.TO.MSCO.RECV1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY.TO.MSCO.RECV1') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY.TO.MSIL.EFS.RECV1') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY.TO.MSIL.EFS.RECV1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY.TO.MSIL.EFS.RECV1') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY.TO.MSIL.EFSDOM.RECV1') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY.TO.MSIL.EFSDOM.RECV1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY.TO.MSIL.EFSDOM.RECV1') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY.TO.MSIL.RECV1') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY.TO.MSIL.RECV1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY.TO.MSIL.RECV1') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY.TO.PIERPONT.Q') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY.TO.PIERPONT.Q') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY.TO.PIERPONT.Q') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_AMH_ACKNAK') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_AMH_ACKNAK') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_AMH_ACKNAK') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_AMH_RECV') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_AMH_RECV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_AMH_RECV') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_BAK_TEST_RCV') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_BAK_TEST_RCV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_BAK_TEST_RCV') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_BAS_ACKNAK') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_BAS_ACKNAK') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_BAS_ACKNAK') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_BAS_RECV') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_BAS_RECV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_BAS_RECV') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_BBV_TEST_RCV') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_BBV_TEST_RCV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_BBV_TEST_RCV') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_BGC_TEST_RCV') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_BGC_TEST_RCV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_BGC_TEST_RCV') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_BLS_TEST_RCV') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_BLS_TEST_RCV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_BLS_TEST_RCV') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_BNK_ACKNAK') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_BNK_ACKNAK') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_BNK_ACKNAK') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_BNK_RECV') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_BNK_RECV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_BNK_RECV') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_BNP_ACKNAK') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_BNP_ACKNAK') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_BNP_ACKNAK') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_BNP_RECV') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_BNP_RECV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_BNP_RECV') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_BZW_ACKNAK') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_BZW_ACKNAK') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_BZW_ACKNAK') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_BZW_RECV') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_BZW_RECV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_BZW_RECV') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_CCI_TEST_RCV') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_CCI_TEST_RCV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_CCI_TEST_RCV') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_CFC_TEST_RCV') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_CFC_TEST_RCV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_CFC_TEST_RCV') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_CFD_TEST_RCV') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_CFD_TEST_RCV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_CFD_TEST_RCV') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_CFI_TEST_RCV') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_CFI_TEST_RCV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_CFI_TEST_RCV') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_CFI_TRI_TEST_RCV') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_CFI_TRI_TEST_RCV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_CFI_TRI_TEST_RCV') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_CFM_MIS_TEST_RCV') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_CFM_MIS_TEST_RCV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_CFM_MIS_TEST_RCV') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_CFM_TEST_RCV') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_CFM_TEST_RCV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_CFM_TEST_RCV') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_CIT_ACKNAK') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_CIT_ACKNAK') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_CIT_ACKNAK') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_CIT_RECV') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_CIT_RECV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_CIT_RECV') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_CLA_TEST_RCV') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_CLA_TEST_RCV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_CLA_TEST_RCV') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_CLA_TRI_TEST_RCV') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_CLA_TRI_TEST_RCV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_CLA_TRI_TEST_RCV') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_CLS_TEST_RCV') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_CLS_TEST_RCV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_CLS_TEST_RCV') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_CLS_TRI_TEST_RCV') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_CLS_TRI_TEST_RCV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_CLS_TRI_TEST_RCV') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_CMI_DELIVERY') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_CMI_DELIVERY') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_CMI_DELIVERY') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_CRT_ACKNAK') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_CRT_ACKNAK') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_CRT_ACKNAK') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_CRT_RECV') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_CRT_RECV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_CRT_RECV') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_DAS_TEST_RCV') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_DAS_TEST_RCV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_DAS_TEST_RCV') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_DAS_TRI_TEST_RCV') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_DAS_TRI_TEST_RCV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_DAS_TRI_TEST_RCV') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_DSA_TEST_RCV') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_DSA_TEST_RCV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_DSA_TEST_RCV') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_FBS_TEST_RCV') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_FBS_TEST_RCV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_FBS_TEST_RCV') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_FIDNY_RECV') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_FIDNY_RECV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_FIDNY_RECV') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_FNB_TEST_RCV') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_FNB_TEST_RCV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_FNB_TEST_RCV') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_FOR_ACKNAK') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_FOR_ACKNAK') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_FOR_ACKNAK') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_FOR_RECV') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_FOR_RECV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_FOR_RECV') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_FUI_TEST_RCV') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_FUI_TEST_RCV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_FUI_TEST_RCV') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_FUR_TEST_RCV') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_FUR_TEST_RCV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_FUR_TEST_RCV') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_FUT_TEST_RCV') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_FUT_TEST_RCV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_FUT_TEST_RCV') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_GKS_ACKNAK') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_GKS_ACKNAK') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_GKS_ACKNAK') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_GKS_RECV') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_GKS_RECV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_GKS_RECV') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_GLE_DELIVERY') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_GLE_DELIVERY') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_GLE_DELIVERY') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_HVB_ACKNAK') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_HVB_ACKNAK') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_HVB_ACKNAK') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_HVB_RECV') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_HVB_RECV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_HVB_RECV') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_ICIQA_ACKNAK') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_ICIQA_ACKNAK') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_ICIQA_RECV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_ICIQA_RECV') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_ING_ACKNAK') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_ING_ACKNAK') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_ING_ACKNAK') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_ING_RECV') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_ING_RECV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_ING_RECV') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_KGS_ACKNAK') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_KGS_ACKNAK') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_KGS_ACKNAK') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_KGS_RECV') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_KGS_RECV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_KGS_RECV') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_LBB_ACKNAK') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_LBB_ACKNAK') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_LBB_ACKNAK') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_LBB_RECV') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_LBB_RECV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_LBB_RECV') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_LEG_ACKNAK') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_LEG_ACKNAK') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_LEG_ACKNAK') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_LEG_RECV') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_LEG_RECV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_LEG_RECV') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_LIB_RECV1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_LIB_RECV1') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_MFI_MIS_TEST_RCV') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_MFI_MIS_TEST_RCV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_MFI_MIS_TEST_RCV') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_MFI_TEST_RCV') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_MFI_TEST_RCV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_MFI_TEST_RCV') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_MSI_TEST_RCV') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_MSI_TEST_RCV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_MSI_TEST_RCV') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_MS_FIDNY_ACKNAK') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_MS_FIDNY_ACKNAK') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_MS_FIDNY_ACKNAK') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_NAB_ACKNAK') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_NAB_ACKNAK') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_NAB_ACKNAK') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_NAB_RECV') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_NAB_RECV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_NAB_RECV') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_NOR_TEST_RCV') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_NOR_TEST_RCV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_NOR_TEST_RCV') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_NSB_ACKNAK') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_NSB_ACKNAK') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_NSB_ACKNAK') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_NSB_RECV') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_NSB_RECV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_NSB_RECV') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_NSI_ACKNAK') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_NSI_ACKNAK') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_NSI_ACKNAK') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_NSI_RECV') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_NSI_RECV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_NSI_RECV') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_NWA_TEST_RCV') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_NWA_TEST_RCV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_NWA_TEST_RCV') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_OPN_ACKNAK') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_OPN_ACKNAK') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_OPN_ACKNAK') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_OPN_RECV') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_OPN_RECV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_OPN_RECV') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_PLM_DELIVERY') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_PLM_DELIVERY') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_PLM_DELIVERY') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_POP_TEST_RECV') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_POP_TEST_RECV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_POP_TEST_RECV') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_PPT_ACKNAK') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_PPT_ACKNAK') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_PPT_ACKNAK') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_PPT_RECV') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_PPT_RECV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_PPT_RECV') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_RBC_ACKNAK') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_RBC_ACKNAK') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_RBC_ACKNAK') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_RBC_RECV') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_RBC_RECV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_RBC_RECV') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_RCA_TEST_RCV') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_RCA_TEST_RCV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_RCA_TEST_RCV') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_RGE_ACKNAK') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_RGE_ACKNAK') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_RGE_ACKNAK') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_RGE_RECV') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_RGE_RECV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_RGE_RECV') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_SAM_ACKNAK') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_SAM_ACKNAK') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_SAM_ACKNAK') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_SAM_RECV') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_SAM_RECV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_SAM_RECV') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_SCB_DELIVERY') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_SCB_DELIVERY') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_SCB_DELIVERY') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_SCI_ACKNAK') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_SCI_ACKNAK') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_SCI_ACKNAK') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_SCI_RECV') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_SCI_RECV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_SCI_RECV') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_SGA_ACKNAK') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_SGA_ACKNAK') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_SGA_ACKNAK') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_SGA_RECV') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_SGA_RECV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_SGA_RECV') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_SGD_MIS_TEST_RCV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_SNW_TEST_RCV') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_SNW_TEST_RCV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_SNW_TEST_RCV') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_SSS_DELIVERY') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_SSS_DELIVERY') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_SSS_DELIVERY') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_STC_ACKNAK') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_STC_ACKNAK') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_STC_ACKNAK') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_STC_RECV') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_STC_RECV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_STC_RECV') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_TAS_TEST_RCV') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_TAS_TEST_RCV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_TAS_TEST_RCV') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_TEB_ACKNAK') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_TEB_ACKNAK') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_TEB_ACKNAK') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_TEB_RECV') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_TEB_RECV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_TEB_RECV') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_TMS_ACKNAK') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_TMS_ACKNAK') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_TMS_ACKNAK') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_TMS_RECV') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_TMS_RECV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_TMS_RECV') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_TOR_ACKNAK') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_TOR_ACKNAK') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_TOR_ACKNAK') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_TOR_RECV') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_TOR_RECV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_TOR_RECV') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_UBS_ACKNAK') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_UBS_ACKNAK') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_UBS_ACKNAK') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_UBS_RECV') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_UBS_RECV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_UBS_RECV') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_VIN_TEST_RCV') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_VIN_TEST_RCV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_VIN_TEST_RCV') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_WCF_ACKNAK') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_WCF_ACKNAK') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_WCF_ACKNAK') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_WCF_RECV') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_WCF_RECV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_WCF_RECV') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_WLB_ACKNAK') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_WLB_ACKNAK') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_WLB_ACKNAK') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_WLB_RECV') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_WLB_RECV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_WLB_RECV') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BNY_TO_WSL_TEST_RCV') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_WSL_TEST_RCV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BNY_TO_WSL_TEST_RCV') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('BONY.BMO.DEV.ACKNAK.QL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('BONY.BMO.DEV.CONF.QL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('CIG.BMC.CIG_FED_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('CIG.BMC.CIG_FED_INS_I') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('CIG.BMC.CIG_INS_I') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('CIG.BMC.CIG_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('CIG.BMC.CIG_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('CIGADPQM_DEV1') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('CIGADPQM_DEV1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('CIGADPQM_DEV1') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('CLASS_INS_I') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('CLASS_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('CLASS_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('CMS.BMC.GSC_INS_I_A') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('CMS.BMC.GSC_INS_I_A') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('CMS.BMC.GSC_INS_I_S') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('CMS.BMC.GSC_INS_I_S') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('CMS.BMC.GSC_INS_I_U') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('CMS.BMC.GSC_INS_I_U') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('COSINE.LIVE.RCVRQ') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('COSINE.PROJECTED.RCVRQ') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('CTG.BMC.RPOALLOC_INS_I') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('CTG.BMC.RPOALLOC_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('CTG.BMC.RPOALLOC_INS_I') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('FIDEV.TTT.BNY.MSCO.GCFGRAB.RECV1') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('FIDEV.TTT.BNY.MSCO.GCFGRAB.RECV1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('FIDEV.TTT.BNY.MSCO.GCFGRAB.RECV1') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('FIS.BMC.DWR_INS_I') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('FIS.BMC.DWR_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('FIS.BMC.DWR_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('FIS.BMC.DWR_INS_I_D') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('FIS.BMC.DWR_INS_I_D') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('FIS.BMC.DWR_INS_I_D') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('FIS.BMC.DWR_INS_I_ND') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('FIS.BMC.DWR_INS_I_ND') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('FIS.BMC.DWR_INS_I_ND') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('GC.BONY.GOVT.RCVRQ') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GC.BONY.GOVT.RCVRQ') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GC.BONY.GOVT.RCVRQ') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('GC.BONY.MORTG.RCVRQ') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GC.BONY.MORTG.RCVRQ') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GC.BONY.MORTG.RCVRQ') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('GC.BONY.SHELL.RCVRQ') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GC.BONY.SHELL.RCVRQ') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GC.BONY.SHELL.RCVRQ') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('GMS.BMC.GSEC_FED_INS_I') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GMS.BMC.GSEC_FED_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GMS.BMC.GSEC_FED_NS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GMS.BMC.GSEC_FED_NS_I') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GSC.BDC.BDCNOTIF_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GSC.BDC.BDCNOTIF_O') +
   GROUP('dgsc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GSC.BDC.BDCNOTIF_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('GSC.BDC.BDCRPT_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GSC.BDC.BDCRPT_O') +
   GROUP('dgsc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GSC.BDC.BDCRPT_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('GSC.BDC.GSCRPT_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GSC.BDC.GSCRPT_O') +
   GROUP('dgsc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GSC.BDC.GSCRPT_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('GSC.BDC.GSCSEC_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GSC.BDC.GSCSEC_O') +
   GROUP('dgsc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GSC.BDC.GSCSEC_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('GSC.BMC.BDC_FTSIN_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GSC.BMC.BDC_FTSIN_I') +
   GROUP('pgsc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GSC.BMC.BDC_FTSIN_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('GSC.BMC.BDC_FTSIN_R') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GSC.BMC.BDC_FTSIN_R') +
   GROUP('pgsc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GSC.BMC.BDC_FTSIN_R') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('GSC.BMC.BDC_FTSOUT_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GSC.BMC.BDC_FTSOUT_O') +
   GROUP('pgsc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GSC.BMC.BDC_FTSOUT_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('GSC.BMC.BNYM_BE1_RSP_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GSC.BMC.BNYM_BE1_RSP_I') +
   GROUP('pgsc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GSC.BMC.BNYM_BE1_RSP_I') +
   GROUP('dgsc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GSC.BMC.BNYM_BE1_RSP_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('GSC.BMC.BNYM_BE2_RSP_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GSC.BMC.BNYM_BE2_RSP_I') +
   GROUP('pgsc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GSC.BMC.BNYM_BE2_RSP_I') +
   GROUP('dgsc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GSC.BMC.BNYM_BE2_RSP_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('GSC.BMC.CLM_CMD_REQ_I_A') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GSC.BMC.CLM_CMD_REQ_I_A') +
   GROUP('pgsc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GSC.BMC.CLM_CMD_REQ_I_A') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('GSC.BMC.CLM_CMD_REQ_I_B') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GSC.BMC.CLM_CMD_REQ_I_B') +
   GROUP('pgsc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GSC.BMC.CLM_CMD_REQ_I_B') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('GSC.BMC.CLM_INQ_REQ_I_A') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GSC.BMC.CLM_INQ_REQ_I_A') +
   GROUP('pgsc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GSC.BMC.CLM_INQ_REQ_I_A') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('GSC.BMC.CLM_INQ_REQ_I_B') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GSC.BMC.CLM_INQ_REQ_I_B') +
   GROUP('pgsc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GSC.BMC.CLM_INQ_REQ_I_B') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('GSC.BMC.FTSIN_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GSC.BMC.FTSIN_INS_I') +
   GROUP('pgsc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GSC.BMC.FTSIN_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('GST1ETCPT1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GST1ETCPT1') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('GST1ETCPT1.1') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GST1ETCPT1.1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GST1ETCPT1.1') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('GST1ETCPT1.2') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GST1ETCPT1.2') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('GST1ETCPT1.2') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('I5ISYS0C') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('I5ISYS0C') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('IMP.BMC.AMH_INS_I') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IMP.BMC.AMH_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IMP.BMC.AMH_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('IMP.BMC.BAS_INS_I') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IMP.BMC.BAS_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IMP.BMC.BAS_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('IMP.BMC.BMO_SWIFT_PP_INS_I') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IMP.BMC.BMO_SWIFT_PP_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IMP.BMC.BMO_SWIFT_PP_INS_I') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IMP.BMC.BMO_SWIFT_PP_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('IMP.BMC.BMO_SWP_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IMP.BMC.BMO_SWP_INS_I') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IMP.BMC.BMO_SWP_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('IMP.BMC.BNK_INS_I') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IMP.BMC.BNK_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IMP.BMC.BNK_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('IMP.BMC.BNP_INS_I') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IMP.BMC.BNP_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IMP.BMC.BNP_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('IMP.BMC.BZW_INS_I') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IMP.BMC.BZW_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IMP.BMC.BZW_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('IMP.BMC.CITI_INS_I') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IMP.BMC.CITI_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IMP.BMC.CITI_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('IMP.BMC.CRT_INS_I') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IMP.BMC.CRT_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IMP.BMC.CRT_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('IMP.BMC.ETRD_INS_I') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IMP.BMC.ETRD_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IMP.BMC.ETRD_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('IMP.BMC.FOR_INS_I') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IMP.BMC.FOR_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IMP.BMC.FOR_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('IMP.BMC.GRIF_INS_I') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IMP.BMC.GRIF_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IMP.BMC.GRIF_INS_I') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IMP.BMC.GRIF_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('IMP.BMC.HVB_INS_I') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IMP.BMC.HVB_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IMP.BMC.HVB_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('IMP.BMC.ICIQA_INS_I') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IMP.BMC.ICIQA_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IMP.BMC.ICIQA_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('IMP.BMC.ING_INS_I') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IMP.BMC.ING_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IMP.BMC.ING_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('IMP.BMC.JMC_INS_I') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IMP.BMC.JMC_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IMP.BMC.JMC_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('IMP.BMC.KGS_INS_I') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IMP.BMC.KGS_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IMP.BMC.KGS_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('IMP.BMC.LBBW_INS_I') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IMP.BMC.LBBW_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IMP.BMC.LBBW_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('IMP.BMC.LEG_INS_I') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IMP.BMC.LEG_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IMP.BMC.LEG_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('IMP.BMC.MCD_INS_I') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IMP.BMC.MCD_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IMP.BMC.MCD_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('IMP.BMC.NAB_CLASS_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IMP.BMC.NAB_CLASS_INS_I') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(DSP,INQ,PUT)
SET AUTHREC +
   PROFILE('IMP.BMC.NAB_CLASS_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('IMP.BMC.NAB_INS_I') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IMP.BMC.NAB_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IMP.BMC.NAB_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('IMP.BMC.NOMUS_INS_I') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IMP.BMC.NOMUS_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IMP.BMC.NOMUS_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('IMP.BMC.NSB_INS_I') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IMP.BMC.NSB_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IMP.BMC.NSB_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('IMP.BMC.OPNH_INS_I') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IMP.BMC.OPNH_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IMP.BMC.OPNH_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('IMP.BMC.PJC_INS_I') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IMP.BMC.PJC_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IMP.BMC.PJC_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('IMP.BMC.QPE_INS_I') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IMP.BMC.QPE_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IMP.BMC.QPE_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('IMP.BMC.RBC_INS_I') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IMP.BMC.RBC_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IMP.BMC.RBC_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('IMP.BMC.RGE_INS_I') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IMP.BMC.RGE_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IMP.BMC.RGE_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('IMP.BMC.SAM_INS_I') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IMP.BMC.SAM_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IMP.BMC.SAM_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('IMP.BMC.SCO_INS_I') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IMP.BMC.SCO_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IMP.BMC.SCO_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('IMP.BMC.SG_PD_INS_I') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IMP.BMC.SG_PD_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IMP.BMC.SG_PD_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('IMP.BMC.SUNT_INS_I') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IMP.BMC.SUNT_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IMP.BMC.SUNT_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('IMP.BMC.SWPQA_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IMP.BMC.SWPQA_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('IMP.BMC.TDS_INS_I') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IMP.BMC.TDS_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IMP.BMC.TDS_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('IMP.BMC.TMS_INS_I') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IMP.BMC.TMS_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IMP.BMC.TMS_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('IMP.BMC.UBS_INS_I') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IMP.BMC.UBS_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IMP.BMC.UBS_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('IMP.BMC.WCF_INS_I') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IMP.BMC.WCF_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IMP.BMC.WCF_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('IMP.BMC.WLB_INS_I') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IMP.BMC.WLB_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IMP.BMC.WLB_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('IN.RPO.BDC.ACP_RESULT.0001') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('IN.RPO.BDC.ACP_RESULT.0001') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('KMS.BMC.ALL_CLM_CMS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('KMS.BMC.ALL_CLM_CMS_I') +
   GROUP('w5rkms') +
   OBJTYPE(QUEUE) +
   AUTHADD(DSP,INQ,PUT)
SET AUTHREC +
   PROFILE('KMS.BMC.ALL_KMS_CMS_O') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('KMS.BMC.ALL_KMS_CMS_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('KMS.BMC.ALL_KMS_CMS_O') +
   GROUP('w5rkms') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('KMS.BMC.ALL_KMS_CMS_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('KMS.BMC.CLM_CMS_DEF_O') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('KMS.BMC.CLM_CMS_DEF_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('KMS.BMC.CLM_CMS_DEF_O') +
   GROUP('w5rkms') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('KMS.BMC.CLM_CMS_DEF_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('LIB.BMC.LIB_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('LIB.BMC.LIB_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('LQ.BONY.ACKNAK') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('LQ.BONY.ACKNAK') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('LQ.BONY.ACKNAK') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('LQ.BONY.DATA') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('LQ.BONY.DATA') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('LQ.BONY.DATA') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MG5A') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MG5A') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MIC.BMC.GSP_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MIC.BMC.GSP_INS_I') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MOR.BMC.MORDOM_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MOR.BMC.MORDOM_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MOR.BMC.MS_DOM_INS_I') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MOR.BMC.MS_DOM_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MOR.BMC.MS_DOM_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MOR.BMC.MS_GCF_INS_I') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MOR.BMC.MS_GCF_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MOR.BMC.MS_GCF_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MOR.BMC.MS_REPO_INS_I') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MOR.BMC.MS_REPO_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MOR.BMC.MS_REPO_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQ20_1') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQ20_1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQ20_1') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQ25') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQ25') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQ35') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQ35') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQ72') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQ72') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.APPLDFLT.TEMPLATE.ALIAS') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.APPLDFLT.TEMPLATE.ALIAS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.APPLDFLT.TEMPLATE.ALIAS') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.APPLDFLT.TEMPLATE.ALIAS') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.APPLDFLT.TEMPLATE.LOCAL') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.APPLDFLT.TEMPLATE.LOCAL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.APPLDFLT.TEMPLATE.LOCAL') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.APPLDFLT.TEMPLATE.LOCAL') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.APPLDFLT.TEMPLATE.REMOTE') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.APPLDFLT.TEMPLATE.REMOTE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.APPLDFLT.TEMPLATE.REMOTE') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.APPLDFLT.TEMPLATE.REMOTE') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BDC.BMC.CMS_FED_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BDC.BMC.CMS_FED_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BDC.BMC.FED_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BDC.BMC.FED_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BDC.BMC.IMX2_FED_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BDC.BMC.IMX2_FED_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BDC.BMC.MX_CASH_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BDC.BMC.MX_CASH_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BDC.BMC.SWFNET_FED_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BDC.BMC.SWFNET_FED_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BDC.BMC.SWFPP_FED_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BDC.BMC.SWFPP_FED_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BDC.GSC.GSCRPT_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BDC.GSC.GSCRPT_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BDC.GSC.GSCSEC_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BDC.GSC.GSCSEC_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BDC.ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BDC.ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BDC.CONFIRM_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BDC.CONFIRM_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BDC.CONFIRM_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BDC.CONFIRM_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BDC.MX_CASH_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BDC.MX_CASH_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BDC.MX_CASH_CONF_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BDC.MX_CASH_CONF_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.ADM_BGM_INS_I') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.ADM_BGM_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.ADM_BGM_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.ADM_CITI_RSP_O') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.ADM_CITI_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.ADM_CITI_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.ADM_DEF_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.ADM_DEF_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.ADM_PIMCO_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.ADM_PIMCO_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.ADM_PIMCO_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.ADM_RSP_BGM_M') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.ADM_RSP_BGM_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.ADM_RSP_BGM_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.ADM_RSP_SWF_M') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.ADM_RSP_SWF_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.ADM_RSP_SWF_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.ADM_RSP_X') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.ADM_RSP_X') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.ADM_RSP_X') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.ADM_SWF_INS_I') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.ADM_SWF_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.ADM_SWF_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.ALL_CLM_CMS_B') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.ALL_CLM_CMS_B') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.ALL_CLM_CMS_B') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.ALL_CLM_CMS_B') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.ALL_GRAM_INS_I_P1') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.ALL_GRAM_INS_I_P1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.ALL_GRAM_INS_I_P1') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.ALL_GRAM_INS_I_P2') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.ALL_GRAM_INS_I_P2') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.ALL_GRAM_INS_I_P2') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BDC_CASH_ACK_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BDC_CASH_ACK_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BDC_CASH_CONF_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BDC_CASH_CONF_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BDC_CASH_IN_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BDC_CASH_IN_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BDC_DEF_CCONF_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BDC_DEF_CCONF_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BDC_DEF_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BDC_DEF_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BDC_FTSACK_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BDC_FTSACK_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BDC_FTSIN_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BDC_FTSIN_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BDC_FTSOUT_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BDC_FTSOUT_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BGM_CASH_ACK_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BGM_CASH_ACK_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BGM_CASH_CONF_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BGM_CASH_CONF_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BGM_CASH_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BGM_CASH_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_ATB_RSH_I') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_ATB_RSH_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_ATB_RSH_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_ATB_RSH_O') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_ATB_RSH_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_ATB_RSH_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_BDC_ACK_M') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_BDC_ACK_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_BDC_ACK_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_BDC_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_BDC_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_BDC_ALL_R') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_BDC_ALL_R') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_BDC_ALL_R') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_BDC_ALL_S') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_BDC_ALL_S') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_BDC_ALL_S') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_BDC_ALL_X') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_BDC_ALL_X') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_BDC_ALL_X') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_BDC_BLKFILE_M') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_BDC_BLKFILE_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_BDC_BLKFILE_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_BDC_BNYCONF_M') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_BDC_BNYCONF_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_BDC_BNYCONF_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_BDC_BVAL_M') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_BDC_BVAL_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_BDC_BVAL_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_BDC_ERR_E') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_BDC_ERR_E') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_BDC_ERR_E') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_BDC_GRAM_M') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_BDC_GRAM_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_BDC_GRAM_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_BDC_STIFIN_M') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_BDC_STIFIN_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_BDC_STIFIN_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_BDC_STIFOUT_M') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_BDC_STIFOUT_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_BDC_STIFOUT_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_BDS_ALL_B') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_BDS_ALL_B') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_BDS_ALL_B') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_BDS_ALL_S') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_BDS_ALL_S') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_BDS_ALL_S') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_BDS_ALL_X') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_BDS_ALL_X') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_BDS_ALL_X') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_BDS_ERR_E') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_BDS_ERR_E') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_BDS_ERR_E') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_BDS_SCRAP') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_BDS_SCRAP') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_BE1_RSP_I') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_BE1_RSP_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_BE1_RSP_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_BE2_RSP_I') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_BE2_RSP_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_BE2_RSP_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_CMS_ACK_M') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_CMS_ACK_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_CMS_ACK_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_CMS_CONF_M') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_CMS_CONF_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_CMS_CONF_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_CTB_RSH_I') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_CTB_RSH_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_CTB_RSH_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_CTB_RSH_O') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_CTB_RSH_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_CTB_RSH_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_GSC_RSP_B') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_GSC_RSP_B') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_GSC_RSP_B') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_GSC_RSP_I') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_GSC_RSP_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_GSC_RSP_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_GSC_RSP_X') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_GSC_RSP_X') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_GSC_RSP_X') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_IMX2_ACK_M') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_IMX2_ACK_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_IMX2_ACK_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_IMX2_CONF_M') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_IMX2_CONF_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.BNYM_IMX2_CONF_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.CASH_INS_I') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.CASH_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.CASH_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.CMI_ACK_M') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.CMI_ACK_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.CMI_ACK_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.CMS_ACK_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.CMS_ACK_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.CMS_CONF_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.CMS_CONF_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.DMS_I_SCRAP') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.DMS_I_SCRAP') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.DMS_I_SCRAP') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.FNF_566_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.FNF_566_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.GSCX_DEF_RSP_O') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.GSCX_DEF_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.GSCX_DEF_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.GTM_SWF_INS_I') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.GTM_SWF_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.GTM_SWF_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.ICIQA_ACK_M') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.ICIQA_ACK_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.ICIQA_ACK_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.IMX2_ACK_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.IMX2_ACK_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.IMX2_CONF_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.IMX2_CONF_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.MSGRTR_BDS_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.MSGRTR_BDS_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.MX_CASH_DEFRSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.MX_CASH_DEFRSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.QMON_CMD_RSP_M') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.QMON_CMD_RSP_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.QMON_CMD_RSP_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.QMON_RPT_ALM_M') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.QMON_RPT_ALM_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.QMON_RPT_ALM_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.QMON_RPT_STS_M') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.QMON_RPT_STS_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.QMON_RPT_STS_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.SSB_ACK_M') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.SSB_ACK_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.SSB_ACK_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.SSB_CONF_M') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.SSB_CONF_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.SSB_CONF_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.SWFNET_ACK_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.SWFNET_ACK_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.SWFNET_CONF_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.SWFNET_CONF_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.SWFNET_FED_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.SWFNET_FED_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.SWFPP_ACK_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.SWFPP_ACK_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.SWFPP_CONF_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.SWFPP_CONF_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.SWFPP_FED_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.SWFPP_FED_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.SWFPP_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.SWFPP_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.SWF_ACK_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.SWF_ACK_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.SWF_ADM_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.SWF_ADM_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.SWF_CASH_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.SWF_CASH_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.SWF_DTC_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.SWF_DTC_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.SWIFTNET_BDS_M') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.SWIFTNET_BDS_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.SWIFTNET_BDS_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.SWIFTNET_BDS_X') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.SWIFTNET_BDS_X') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.SWIFTNET_BDS_X') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.SWIFTNET_NAK_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.SWIFTNET_NAK_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.TEMP_APP_SP1_M') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.TEMP_APP_SP1_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.TEMP_APP_SP1_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.TEMP_APP_SP2_M') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.TEMP_APP_SP2_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.TEMP_APP_SP2_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.TEMP_APP_SP3_M') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.TEMP_APP_SP3_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.TEMP_APP_SP3_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.TEMP_APP_SP4_M') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.TEMP_APP_SP4_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.TEMP_APP_SP4_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.TEMP_APP_SP5_M') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.TEMP_APP_SP5_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.TEMP_APP_SP5_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.TEMP_APP_SP6_M') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.TEMP_APP_SP6_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.TEMP_APP_SP6_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.TEMP_APP_SP7_M') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.TEMP_APP_SP7_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.BMC.TEMP_APP_SP7_M') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.GSC.FTSIN_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.BMC.GSC.FTSIN_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.GSC.BDC.BDCNOTIF_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.GSC.BDC.BDCNOTIF_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.GSC.BDC.BDCRPT_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.GSC.BDC.BDCRPT_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.GSC.BMC.BDC_FTSIN_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.GSC.BMC.BDC_FTSIN_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.GSC.BMC.BDC_FTSIN_R') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.GSC.BMC.BDC_FTSIN_R') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.GSC.BMC.BDC_FTSOUT_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.GSC.BMC.BDC_FTSOUT_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.KMS.BMC.ALL_KMS_CMS_O') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.KMS.BMC.ALL_KMS_CMS_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.KMS.BMC.ALL_KMS_CMS_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.KMS.BMC.CLM_CMS_DEF_O') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.KMS.BMC.CLM_CMS_DEF_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.KMS.BMC.CLM_CMS_DEF_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.PRA.BMC.PRA4_INS_O') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.PRA.BMC.PRA4_INS_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.PRA.BMC.PRA4_INS_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.SSE.BMC.BDCT_SEC_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.SSE.BMC.BDCT_SEC_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.SSE.SSE.BDCT_SEC_X') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.SSE.SSE.BDCT_SEC_X') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.XLM.BMC.KMS_XLM_CMS_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.XLM.BMC.KMS_XLM_CMS_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.XLM.BMC.RE1_XLM_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.XLM.BMC.RE1_XLM_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.XLM.BMC.RE2_XLM_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.XLM.BMC.RE2_XLM_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.XLM.BMC.RE3_XLM_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.XLM.BMC.RE3_XLM_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.XLM.BMC.RE4_XLM_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQABNY.XLM.BMC.RE4_XLM_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.ACC_ACK_O') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.ACC_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.ACC_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.ACC_RSP_O') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.ACC_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.ACC_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.AMH_ACK_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.AMH_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.AMH_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.AMH_RSP_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.AMH_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.AMH_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.BAS_ACK_O') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.BAS_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.BAS_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.BAS_RSP_O') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.BAS_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.BAS_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.BMO_ACK_O') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.BMO_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.BMO_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.BMO_RSP_O') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.BMO_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.BMO_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.BNK_ACK_O') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.BNK_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.BNK_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.BNK_RSP_O') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.BNK_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.BNK_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.BNP_ACK_O') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.BNP_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.BNP_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.BNP_RSP_O') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.BNP_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.BNP_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.BZW_ACK_O') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.BZW_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.BZW_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.BZW_RSP_O') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.BZW_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.BZW_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.CITI_ACK_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.CITI_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.CITI_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.CITI_RSP_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.CITI_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.CITI_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.CRT_ACK_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.CRT_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.CRT_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.CRT_RSP_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.CRT_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.CRT_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.ETRD_ACK_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.ETRD_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.ETRD_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.ETRD_RSP_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.ETRD_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.ETRD_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.FOR_ACK_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.FOR_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.FOR_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.FOR_RSP_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.FOR_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.FOR_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.GRIF_ACK_O') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.GRIF_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.GRIF_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.GRIF_RSP_O') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.GRIF_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.GRIF_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.HVB_ACK_O') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.HVB_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.HVB_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.HVB_RSP_O') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.HVB_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.HVB_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.ICIQA_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.ICIQA_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.ICIQA_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.ICIQA_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.ING_ACK_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.ING_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.ING_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.ING_RSP_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.ING_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.ING_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.JEF_ACK_O') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.JEF_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.JEF_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.JEF_RSP_O') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.JEF_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.JEF_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.JMC_ACK_O') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.JMC_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.JMC_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.JMC_RSP_O') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.JMC_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.JMC_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.KGS_ACK_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.KGS_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.KGS_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.KGS_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.KGS_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.KGS_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.LBBW_ACK_O') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.LBBW_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.LBBW_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.LBBW_RSP_O') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.LBBW_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.LBBW_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.LEG_ACK_O') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.LEG_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.LEG_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.LEG_RSP_O') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.LEG_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.LEG_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.MCD_ACK_O') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.MCD_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.MCD_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.MCD_RSP_O') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.MCD_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.MCD_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.MZS_ACK_O') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.MZS_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.MZS_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.MZS_RSP_O') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.MZS_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.MZS_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.NAB_ACK_O') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.NAB_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.NAB_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.NAB_RSP_O') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.NAB_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.NAB_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.NOMUS_ACK_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.NOMUS_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.NOMUS_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.NOMUS_RSP_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.NOMUS_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.NOMUS_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.NSB_ACK_O') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.NSB_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.NSB_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.NSB_RSP_O') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.NSB_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.NSB_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.OPNH_ACK_O') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.OPNH_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.OPNH_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.OPNH_RSP_O') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.OPNH_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.OPNH_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.PJC_ACK_O') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.PJC_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.PJC_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.PJC_RSP_O') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.PJC_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.PJC_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.QPE_ACK_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.QPE_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.QPE_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.QPE_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.QPE_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.QPE_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.RBCD_ACK_O') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.RBCD_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.RBCD_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.RBCD_RSP_O') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.RBCD_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.RBCD_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.RBC_ACK_O') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.RBC_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.RBC_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.RBC_RSP_O') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.RBC_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.RBC_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.RGE_ACK_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.RGE_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.RGE_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.RGE_RSP_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.RGE_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.RGE_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.SAM_ACK_O') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.SAM_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.SAM_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.SAM_RSP_O') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.SAM_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.SAM_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.SCO_ACK_O') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.SCO_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.SCO_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.SCO_RSP_O') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.SCO_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.SCO_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.SG_PD_ACK_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.SG_PD_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.SG_PD_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.SG_PD_RSP_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.SG_PD_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.SG_PD_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.SUNT_ACK_O') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.SUNT_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.SUNT_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.SUNT_RSP_O') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.SUNT_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.SUNT_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.TMS_ACK_O') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.TMS_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.TMS_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.TMS_RSP_O') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.TMS_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.TMS_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.UBS_ACK_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.UBS_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.UBS_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.UBS_RSP_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.UBS_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.UBS_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.WCF_ACK_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.WCF_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.WCF_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.WCF_RSP_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.WCF_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.WCF_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.WLB_ACK_O') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.WLB_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.WLB_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.WLB_RSP_O') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.WLB_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDADP.IMP.BMC.WLB_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQDBNY.CLS.BMC.CLASS_INS_I') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDBNY.CLS.BMC.CLASS_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQDBNY.CLS.BMC.CLASS_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQLBMO.OCE.BMC.NSB_ACK_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQLBMO.OCE.BMC.NSB_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQLBMO.OCE.BMC.NSB_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQLBMO.OCE.BMC.NSB_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQLBMO.OCE.BMC.NSB_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQLBMO.OCE.BMC.NSB_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQLMTX.TBL.BMC.CMI_ACK_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQLMTX.TBL.BMC.CMI_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQLMTX.TBL.BMC.CMI_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQLMTX.TBL.BMC.CMI_RSP_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQLMTX.TBL.BMC.CMI_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQLMTX.TBL.BMC.CMI_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQLMTX.TBL.BMC.GLE_ACK_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQLMTX.TBL.BMC.GLE_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQLMTX.TBL.BMC.GLE_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQLMTX.TBL.BMC.GLE_RSP_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQLMTX.TBL.BMC.GLE_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQLMTX.TBL.BMC.GLE_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQLMTX.TBL.BMC.PLM_ACK_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQLMTX.TBL.BMC.PLM_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQLMTX.TBL.BMC.PLM_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQLMTX.TBL.BMC.PLM_RSP_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQLMTX.TBL.BMC.PLM_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQLMTX.TBL.BMC.PLM_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQLMTX.TBL.BMC.SCB_ACK_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQLMTX.TBL.BMC.SCB_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQLMTX.TBL.BMC.SCB_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQLMTX.TBL.BMC.SCB_RSP_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQLMTX.TBL.BMC.SCB_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQLMTX.TBL.BMC.SCB_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQLMTX.TBL.BMC.SSS_ACK_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQLMTX.TBL.BMC.SSS_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQLMTX.TBL.BMC.SSS_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQLMTX.TBL.BMC.SSS_RSP_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQLMTX.TBL.BMC.SSS_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQLMTX.TBL.BMC.SSS_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQMBBH.BBP.BMC.BBP_ACK_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQMBBH.BBP.BMC.BBP_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQMBBH.BBP.BMC.BBP_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQMBBH.BBP.BMC.BBP_RSP_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQMBBH.BBP.BMC.BBP_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQMBBH.BBP.BMC.BBP_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQMBBH.BBP.BMC.HAR_ACK_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQMBBH.BBP.BMC.HAR_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQMBBH.BBP.BMC.HAR_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQMBBH.BBP.BMC.HAR_RSP_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQMBBH.BBP.BMC.HAR_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQMBBH.BBP.BMC.HAR_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQMCTG.CTG.BMC.RPOCNF_LIVE_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQMCTG.CTG.BMC.RPOCNF_LIVE_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQMCTG.CTG.BMC.RPOCNF_PROJ_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQMCTG.CTG.BMC.RPOCNF_PROJ_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQMGSEC.GMS.BMC.GSEC_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQMGSEC.GMS.BMC.GSEC_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQMGSEC.GMS.BMC.GSEC_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQMGSEC.GMS.BMC.GSEC_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQMHMEL.CMS.BMC.GSC_RSP_O_A') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQMHMEL.CMS.BMC.GSC_RSP_O_A') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQMHMEL.CMS.BMC.GSC_RSP_O_A') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQMHMEL.CMS.BMC.GSC_RSP_O_S') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQMHMEL.CMS.BMC.GSC_RSP_O_S') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQMHMEL.CMS.BMC.GSC_RSP_O_S') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQMHMEL.CMS.BMC.GSC_RSP_O_U') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQMHMEL.CMS.BMC.GSC_RSP_O_U') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQMHMEL.CMS.BMC.GSC_RSP_O_U') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQMMOR.FIS.BMC.DWR_ACK_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQMMOR.FIS.BMC.DWR_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQMMOR.FIS.BMC.DWR_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQMMOR.FIS.BMC.DWR_ACK_O_D') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQMMOR.FIS.BMC.DWR_ACK_O_D') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQMMOR.FIS.BMC.DWR_ACK_O_D') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQMMOR.FIS.BMC.DWR_ACK_O_ND') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQMMOR.FIS.BMC.DWR_ACK_O_ND') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQMMOR.FIS.BMC.DWR_ACK_O_ND') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQMMOR.FIS.BMC.DWR_RSP_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQMMOR.FIS.BMC.DWR_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQMMOR.FIS.BMC.DWR_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQMMOR.FIS.BMC.DWR_RSP_O_D') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQMMOR.FIS.BMC.DWR_RSP_O_D') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQMMOR.FIS.BMC.DWR_RSP_O_D') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQMMOR.FIS.BMC.DWR_RSP_O_ND') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQMMOR.FIS.BMC.DWR_RSP_O_ND') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQMMOR.FIS.BMC.DWR_RSP_O_ND') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQMMOR.MOR.BMC.MSI_EQ_A38_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQMMOR.MOR.BMC.MSI_EQ_A38_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQMMOR.MOR.BMC.MSI_EQ_A38_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQMMOR.MOR.BMC.MSI_EQ_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQMMOR.MOR.BMC.MSI_EQ_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQMMOR.MOR.BMC.MSI_EQ_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQMMOR.MOR.BMC.MSI_FX_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQMMOR.MOR.BMC.MSI_FX_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQMMOR.MOR.BMC.MSI_FX_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQMMOR.MOR.BMC.MS_DOM_ACK_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQMMOR.MOR.BMC.MS_DOM_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQMMOR.MOR.BMC.MS_DOM_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQMMOR.MOR.BMC.MS_DOM_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQMMOR.MOR.BMC.MS_DOM_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQMMOR.MOR.BMC.MS_DOM_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQMMOR.MOR.BMC.MS_GCF_ACK_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQMMOR.MOR.BMC.MS_GCF_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQMMOR.MOR.BMC.MS_GCF_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQMMOR.MOR.BMC.MS_GCF_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQMMOR.MOR.BMC.MS_GCF_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQMMOR.MOR.BMC.MS_GCF_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQMMOR.MOR.BMC.MS_REPO_ACK_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQMMOR.MOR.BMC.MS_REPO_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQMMOR.MOR.BMC.MS_REPO_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQMMOR.MOR.BMC.MS_REPO_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQMMOR.MOR.BMC.MS_REPO_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQMMOR.MOR.BMC.MS_REPO_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQMSAL.SAL.BMC.SAB_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQMSAL.SAL.BMC.SAB_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQMSAL.SAL.BMC.SAB_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQMSAL.SAL.BMC.SAL_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQMSAL.SAL.BMC.SAL_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQMSAL.SAL.BMC.SAL_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQMSAL.SAL.BMC.SHELL_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQMSAL.SAL.BMC.SHELL_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQMSAL.SAL.BMC.SHELL_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQMSMB.SMB.BMC.MBSDLV_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQMSMB.SMB.BMC.MBSDLV_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQMSMB.SMB.BMC.MBSDLV_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQMSMB.SMB.BMC.MBSFUT_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQMSMB.SMB.BMC.MBSFUT_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQMSMB.SMB.BMC.MBSFUT_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQMSMB.SMB.BMC.MBSREC_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQMSMB.SMB.BMC.MBSREC_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQMSMB.SMB.BMC.MBSREC_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQMSMB.SMB.BMC.NKG_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQMSMB.SMB.BMC.NKG_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQMSMB.SMB.BMC.NKG_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQMSMB.SMB.BMC.RETAIL_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQMSMB.SMB.BMC.RETAIL_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQMSMB.SMB.BMC.RETAIL_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQMSMB.SMB.BMC.TRSRY_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQMSMB.SMB.BMC.TRSRY_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQMSMB.SMB.BMC.TRSRY_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQMTDS.IMP.BMC.TDS_ACK_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQMTDS.IMP.BMC.TDS_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQMTDS.IMP.BMC.TDS_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQMTDS.IMP.BMC.TDS_RSP_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQMTDS.IMP.BMC.TDS_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQMTDS.IMP.BMC.TDS_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQSBNY.GUI.BMC.CLMC_AE11_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQSBNY.GUI.BMC.CLMC_AE11_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQSBNY.GUI.BMC.CLMC_AE21_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQSBNY.GUI.BMC.CLMC_AE21_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQSBNY.GUI.BMC.CLMI_AE11_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQSBNY.GUI.BMC.CLMI_AE11_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQSBNY.GUI.BMC.CLMI_AE21_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQSBNY.GUI.BMC.CLMI_AE21_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQSBNY.RPO.BMC.CLMC_RE11_RSP_O_A') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQSBNY.RPO.BMC.CLMC_RE11_RSP_O_A') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQSBNY.RPO.BMC.CLMC_RE11_RSP_O_B') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQSBNY.RPO.BMC.CLMC_RE11_RSP_O_B') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQSBNY.RPO.BMC.CLMC_RE21_RSP_O_A') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQSBNY.RPO.BMC.CLMC_RE21_RSP_O_A') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQSBNY.RPO.BMC.CLMC_RE21_RSP_O_B') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQSBNY.RPO.BMC.CLMC_RE21_RSP_O_B') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQSBNY.RPO.BMC.CLMC_RE31_RSP_O_A') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQSBNY.RPO.BMC.CLMC_RE31_RSP_O_A') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQSBNY.RPO.BMC.CLMC_RE31_RSP_O_B') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQSBNY.RPO.BMC.CLMC_RE31_RSP_O_B') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQSBNY.RPO.BMC.CLMC_RE41_RSP_O_A') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQSBNY.RPO.BMC.CLMC_RE41_RSP_O_A') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQSBNY.RPO.BMC.CLMC_RE41_RSP_O_B') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQSBNY.RPO.BMC.CLMC_RE41_RSP_O_B') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQSBNY.RPO.BMC.CLMC_REQ_O_A') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQSBNY.RPO.BMC.CLMC_REQ_O_A') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQSBNY.RPO.BMC.CLMC_REQ_O_B') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQSBNY.RPO.BMC.CLMC_REQ_O_B') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQSBNY.RPO.BMC.CLMI_RE11_RSP_O_A') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQSBNY.RPO.BMC.CLMI_RE11_RSP_O_A') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQSBNY.RPO.BMC.CLMI_RE11_RSP_O_B') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQSBNY.RPO.BMC.CLMI_RE11_RSP_O_B') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQSBNY.RPO.BMC.CLMI_RE21_RSP_O_A') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQSBNY.RPO.BMC.CLMI_RE21_RSP_O_A') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQSBNY.RPO.BMC.CLMI_RE21_RSP_O_B') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQSBNY.RPO.BMC.CLMI_RE21_RSP_O_B') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQSBNY.RPO.BMC.CLMI_RE31_RSP_O_A') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQSBNY.RPO.BMC.CLMI_RE31_RSP_O_A') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQSBNY.RPO.BMC.CLMI_RE31_RSP_O_B') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQSBNY.RPO.BMC.CLMI_RE31_RSP_O_B') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQSBNY.RPO.BMC.CLMI_RE41_RSP_O_A') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQSBNY.RPO.BMC.CLMI_RE41_RSP_O_A') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQSBNY.RPO.BMC.CLMI_RE41_RSP_O_B') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQSBNY.RPO.BMC.CLMI_RE41_RSP_O_B') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQSBNY.RPO.BMC.CLMI_REQ_O_A') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQSBNY.RPO.BMC.CLMI_REQ_O_A') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQSBNY.RPO.BMC.CLMI_REQ_O_B') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQSBNY.RPO.BMC.CLMI_REQ_O_B') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQSBNY.RPO.BMC.RE1_CMS_O') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQSBNY.RPO.BMC.RE1_CMS_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQSBNY.RPO.BMC.RE1_CMS_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQSBNY.RPO.BMC.RE2_CMS_O') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQSBNY.RPO.BMC.RE2_CMS_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQSBNY.RPO.BMC.RE2_CMS_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQSBNY.RPO.BMC.RE3_CMS_O') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQSBNY.RPO.BMC.RE3_CMS_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQSBNY.RPO.BMC.RE3_CMS_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQSBNY.RPO.BMC.RE3_SWIFT_REV_Q') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQSBNY.RPO.BMC.RE3_SWIFT_REV_Q') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQSBNY.RPO.BMC.RE4_CMS_O') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQSBNY.RPO.BMC.RE4_CMS_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQSBNY.RPO.BMC.RE4_CMS_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQSBNY.RPO.BMC.RE4_SWIFT_REV_Q') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQSBNY.RPO.BMC.RE4_SWIFT_REV_Q') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQSCIG.CIG.BMC.CIG_RPO_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQSCIG.CIG.BMC.CIG_RPO_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQSCIG.CIG.BMC.CIG_RPO_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQSCIG.CIG.BMC.CIG_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQSCIG.CIG.BMC.CIG_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQSCIG.CIG.BMC.CIG_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQSCIG.CIG.BMC.CWT_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQSCIG.CIG.BMC.CWT_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQSCIG.CIG.BMC.CWT_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQSCIG.CIG.BMC.FEP_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQSCIG.CIG.BMC.FEP_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQSCIG.CIG.BMC.FEP_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQSLIB.LIB.BMC.LIB_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQSLIB.LIB.BMC.LIB_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQSLIB.LIB.BMC.LIB_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQSLIB.LIB.BMC.LIB_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQSRDQ.QPE.BMC.READQ_RSP_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQSRDQ.QPE.BMC.READQ_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQSRDQ.QPE.BMC.READQ_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQVBDS.BMC.BMC.ICIQA_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQVBDS.BMC.BMC.ICIQA_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQVBDS.BMC.BMC.ICIQA_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQVBDS.BMC.BMC.ICIQA_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQVBNY.BMC.BMC.MICS_APP_SP1_M') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQVBNY.BMC.BMC.MICS_APP_SP1_M') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQVBNY.BMC.BMC.RPOALLOC_INS_I') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQVBNY.BMC.BMC.RPOALLOC_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQVBNY.BMC.BMC.RPOALLOC_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQVBNY.BMC.BMC.SWIFT_PP_INS_I') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQVBNY.BMC.BMC.SWIFT_PP_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQVBNY.BMC.BMC.SWIFT_PP_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQVBNY.BMC.BMC.SWP_GSCX1_INST') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQVBNY.BMC.BMC.SWP_GSCX1_INST') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQVBNY.BMC.BMC.SWP_GSCX2_INST') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQVBNY.BMC.BMC.SWP_GSCX2_INST') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQVBNY.BMC.BMC.SWP_INS_I') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQVBNY.BMC.BMC.SWP_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQVBNY.BMC.BMC.SWP_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQVBNY.BMC.BMC.SWP_INS_I_1') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQVBNY.BMC.BMC.SWP_INS_I_1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQVBNY.BMC.BMC.SWP_INS_I_1') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQVBNY.BMC.BMC.SWP_INS_I_2') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQVBNY.BMC.BMC.SWP_INS_I_2') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQVBNY.BMC.BMC.SWP_INS_I_2') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQVBNY.WUI.BMC.BNYM_FRB_INS_H_CU') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQVBNY.WUI.BMC.BNYM_FRB_INS_H_CU') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQVBNY.WUI.BMC.BNYM_FRB_INS_L_CU') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQVBNY.WUI.BMC.BNYM_FRB_INS_L_CU') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQVBNY.WUI.BMC.BNYM_FRB_INS_O_C1') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQVBNY.WUI.BMC.BNYM_FRB_INS_O_C1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQVBNY.WUI.BMC.BNYM_FRB_INS_O_C1') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQVBNY.WUI.BMC.BNYM_FRB_INS_O_CD') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQVBNY.WUI.BMC.BNYM_FRB_INS_O_CD') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQVBNY.WUI.BMC.BNYM_FRB_INS_O_CD') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQVBNY.WUI.BMC.BNYM_FRB_INS_O_CU') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQVBNY.WUI.BMC.BNYM_FRB_INS_O_CU') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQVBNY.WUI.BMC.BNYM_FRB_INS_O_CU') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQVBNY.WUI.BMC.GNMA_FRB_INS_O_C1') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQVBNY.WUI.BMC.GNMA_FRB_INS_O_C1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQVBNY.WUI.BMC.GNMA_FRB_INS_O_C1') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQVBNY.WUI.BMC.GNMA_FRB_INS_O_CD') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQVBNY.WUI.BMC.GNMA_FRB_INS_O_CD') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQVBNY.WUI.BMC.GNMA_FRB_INS_O_CD') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQVBNY.WUI.BMC.GNMA_FRB_INS_O_CU') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQVBNY.WUI.BMC.GNMA_FRB_INS_O_CU') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQVBNY.WUI.BMC.GNMA_FRB_INS_O_CU') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQVBNYM.TLX.BMC.SWIFTNET_BDS_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQVBNYM.TLX.BMC.SWIFTNET_BDS_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQWBMO.BMO.BMC.BMOCM_ACK_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWBMO.BMO.BMC.BMOCM_ACK_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQWBMO.BMO.BMC.BMOCM_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWBMO.BMO.BMC.BMOCM_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQWBNY.FHF.BMC.FHF_INS_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWBNY.FHF.BMC.FHF_INS_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWBNY.FHF.BMC.FHF_INS_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQWBNY.LMS.BMC.BMC2LMS_INPUT1') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWBNY.LMS.BMC.BMC2LMS_INPUT1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWBNY.LMS.BMC.BMC2LMS_INPUT1') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQWBNY.LMS.BMC.BMC2LMS_INPUT2') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWBNY.LMS.BMC.BMC2LMS_INPUT2') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWBNY.LMS.BMC.BMC2LMS_INPUT2') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQWBNY.LMS.BMC.BMC2LMS_INPUT3') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWBNY.LMS.BMC.BMC2LMS_INPUT3') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWBNY.LMS.BMC.BMC2LMS_INPUT3') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQWBNY.LMS.BMC.BMC2LMS_INPUT5') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWBNY.LMS.BMC.BMC2LMS_INPUT5') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWBNY.LMS.BMC.BMC2LMS_INPUT5') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQWBNY.PRA.BMC.PRA3_INS_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWBNY.PRA.BMC.PRA3_INS_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWBNY.PRA.BMC.PRA3_INS_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQWBNY.VPM.BMC.VPM_RSP_O') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWBNY.VPM.BMC.VPM_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWBNY.VPM.BMC.VPM_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQWBNY.XAW.BMC.SWF_INS_O_C') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWBNY.XAW.BMC.SWF_INS_O_C') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWBNY.XAW.BMC.SWF_INS_O_C') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.ADM_CFI_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.ADM_CFI_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.ADM_CFI_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.ADM_DSA_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.ADM_DSA_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.ADM_DSA_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.ADM_YPD_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.ADM_YPD_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.ADM_YPD_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.ADM_YZU_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.ADM_YZU_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.ADM_YZU_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_BAK_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_BAK_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_BAK_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_BBV_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_BBV_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_BBV_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_BGC_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_BGC_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_BGC_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_BLS_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_BLS_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_BLS_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_CCI_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_CCI_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_CCI_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_CFC_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_CFC_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_CFC_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_CFD_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_CFD_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_CFD_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_CFI_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_CFI_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_CFI_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_CFM_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_CFM_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_CFM_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_CLA_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_CLA_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_CLA_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_CLS_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_CLS_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_CLS_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_DAS_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_DAS_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_DAS_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_DSA_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_DSA_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_DSA_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_FBS_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_FBS_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_FBS_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_FNB_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_FNB_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_FNB_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_FUI_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_FUI_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_FUI_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_FUR_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_FUR_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_FUR_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_FUT_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_FUT_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_FUT_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_MFI_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_MFI_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_MFI_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_MSI_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_MSI_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_MSI_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_NOR_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_NOR_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_NOR_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_NWA_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_NWA_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_NWA_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_POP_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_POP_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_POP_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_RCA_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_RCA_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_RCA_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_SNW_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_SNW_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_SNW_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_TAS_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_TAS_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_TAS_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_VIN_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_VIN_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_VIN_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_WSL_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_WSL_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.IMX_WSL_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.MIS_CFM_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.MIS_CFM_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.MIS_CFM_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.MIS_MFI_RSP_O') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.MIS_MFI_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.MIS_MFI_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.MIS_SNG_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.MIS_SNG_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.SNG_TEST_RSP_O') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.SNG_TEST_RSP_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQABNY.MQWSNG.PH3.BMC.SNG_TEST_RSP_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQBBNY.MQVBNY.SWF.BDS.OUTPUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQBBNY.MQVBNY.SWF.BDS.OUTPUT') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQD4') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQD4') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQD4.REMOTE.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQD4.REMOTE.QUEUE') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.ACC_INS_I') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.ACC_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.ACC_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.AMH_INS_I') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.AMH_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.AMH_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.BAS_INS_I') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.BAS_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.BAS_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.BMO_INS_I') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.BMO_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.BMO_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.BNK_INS_I') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.BNK_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.BNK_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.BNP_INS_I') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.BNP_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.BNP_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.BZW_INS_I') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.BZW_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.BZW_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.CITI_INS_I') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.CITI_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.CITI_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.CRT_INS_I') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.CRT_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.CRT_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.ETRD_INS_I') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.ETRD_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.ETRD_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.FOR_INS_I') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.FOR_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.FOR_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.GRIF_INS_I') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.GRIF_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.GRIF_INS_I') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.GRIF_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.HVB_INS_I') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.HVB_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.HVB_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.ICIQA_INS_I') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.ICIQA_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.ICIQA_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.ING_INS_I') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.ING_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.ING_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.JEF_INS_I') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.JEF_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.JEF_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.JMC_INS_I') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.JMC_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.JMC_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.KGS_INS_I') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.KGS_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.KGS_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.LBBW_INS_I') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.LBBW_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.LBBW_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.LEG_INS_I') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.LEG_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.LEG_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.MCD_INS_I') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.MCD_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.MCD_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.MZS_INS_I') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.MZS_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.MZS_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.NAB_INS_I') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.NAB_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.NAB_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.NOMUS_INS_I') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.NOMUS_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.NOMUS_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.NSB_INS_I') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.NSB_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.NSB_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.OPNH_INS_I') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.OPNH_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.OPNH_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.PJC_INS_I') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.PJC_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.PJC_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.QPE_INS_I') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.QPE_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.QPE_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.RBCD_INS_I') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.RBCD_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.RBCD_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.RBC_INS_I') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.RBC_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.RBC_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.RGE_INS_I') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.RGE_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.RGE_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.SAM_INS_I') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.SAM_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.SAM_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.SCO_INS_I') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.SCO_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.SCO_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.SG_PD_INS_I') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.SG_PD_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.SG_PD_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.SUNT_INS_I') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.SUNT_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.SUNT_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.TMS_INS_I') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.TMS_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.TMS_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.UBS_INS_I') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.UBS_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.UBS_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.WCF_INS_I') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.WCF_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.WCF_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.WLB_INS_I') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.WLB_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQDADP.MQABNY.BMC.IMP.WLB_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQLBMO.MQABNY.BMC.OCE.NSB_INS_I') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQLBMO.MQABNY.BMC.OCE.NSB_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQLBMO.MQABNY.BMC.OCE.NSB_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQLMTX.MQABNY.BMC.TBL.CMI_INS_I') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQLMTX.MQABNY.BMC.TBL.CMI_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQLMTX.MQABNY.BMC.TBL.CMI_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQLMTX.MQABNY.BMC.TBL.GLE_INS_I') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQLMTX.MQABNY.BMC.TBL.GLE_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQLMTX.MQABNY.BMC.TBL.GLE_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQLMTX.MQABNY.BMC.TBL.PLM_INS_I') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQLMTX.MQABNY.BMC.TBL.PLM_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQLMTX.MQABNY.BMC.TBL.PLM_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQLMTX.MQABNY.BMC.TBL.SCB_INS_I') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQLMTX.MQABNY.BMC.TBL.SCB_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQLMTX.MQABNY.BMC.TBL.SCB_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQLMTX.MQABNY.BMC.TBL.SSS_INS_I') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQLMTX.MQABNY.BMC.TBL.SSS_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQLMTX.MQABNY.BMC.TBL.SSS_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQMBBH.MQABNY.BMC.BBP.BBP_INS_I') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQMBBH.MQABNY.BMC.BBP.BBP_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQMBBH.MQABNY.BMC.BBP.BBP_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQMBBH.MQABNY.BMC.BBP.HAR_INS_I') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQMBBH.MQABNY.BMC.BBP.HAR_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQMBBH.MQABNY.BMC.BBP.HAR_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQMBNY.MQABNY.BMC.GTM.GTM_SWF_INS_I_C') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQMBNY.MQABNY.BMC.GTM.GTM_SWF_INS_I_C') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQMMEL.MQABNY.BMC.CMS.GSC_INS_I_A') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQMMEL.MQABNY.BMC.CMS.GSC_INS_I_A') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQMMEL.MQABNY.BMC.CMS.GSC_INS_I_S') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQMMEL.MQABNY.BMC.CMS.GSC_INS_I_S') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQMMEL.MQABNY.BMC.CMS.GSC_INS_I_U') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQMMEL.MQABNY.BMC.CMS.GSC_INS_I_U') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQMMOR.MQABNY.BMC.FIS.DWR_INS_I') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQMMOR.MQABNY.BMC.FIS.DWR_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQMMOR.MQABNY.BMC.FIS.DWR_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQMMOR.MQABNY.BMC.FIS.DWR_INS_I_D') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQMMOR.MQABNY.BMC.FIS.DWR_INS_I_D') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQMMOR.MQABNY.BMC.FIS.DWR_INS_I_D') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQMMOR.MQABNY.BMC.FIS.DWR_INS_I_ND') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQMMOR.MQABNY.BMC.FIS.DWR_INS_I_ND') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQMMOR.MQABNY.BMC.FIS.DWR_INS_I_ND') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQMMOR.MQABNY.BMC.MOR.MORDOM_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQMMOR.MQABNY.BMC.MOR.MORDOM_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQMMOR.MQABNY.BMC.MOR.MS_DOM_INS_I') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQMMOR.MQABNY.BMC.MOR.MS_DOM_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQMMOR.MQABNY.BMC.MOR.MS_DOM_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQMMOR.MQABNY.BMC.MOR.MS_GCF_INS_I') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQMMOR.MQABNY.BMC.MOR.MS_GCF_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQMMOR.MQABNY.BMC.MOR.MS_GCF_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQMMOR.MQABNY.BMC.MOR.MS_REPO_INS_I') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQMMOR.MQABNY.BMC.MOR.MS_REPO_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQMMOR.MQABNY.BMC.MOR.MS_REPO_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQMSAL.MQABNY.BMC.SAL.SAB_INS_I') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQMSAL.MQABNY.BMC.SAL.SAB_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQMSAL.MQABNY.BMC.SAL.SAB_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQMSAL.MQABNY.BMC.SAL.SAL_INS_I') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQMSAL.MQABNY.BMC.SAL.SAL_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQMSAL.MQABNY.BMC.SAL.SAL_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQMSMB.MQABNY.BMC.SMB.MBSFUT_INS_I') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQMSMB.MQABNY.BMC.SMB.MBSFUT_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQMSMB.MQABNY.BMC.SMB.MBSFUT_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQMSMB.MQABNY.BMC.SMB.SMB_INS_I') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQMSMB.MQABNY.BMC.SMB.SMB_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQMSMB.MQABNY.BMC.SMB.SMB_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQMTDS.MQABNY.BMC.IMP.TDS_INS_I') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQMTDS.MQABNY.BMC.IMP.TDS_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQMTDS.MQABNY.BMC.IMP.TDS_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQSBNY.MQABNY.BMC.RPO.ADM_ESB1_RSP_O_C') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQSBNY.MQABNY.BMC.RPO.ADM_ESB1_RSP_O_C') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQSBNY.MQABNY.BMC.RPO.ADM_ESB1_RSP_O_C2') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQSBNY.MQABNY.BMC.RPO.ADM_ESB1_RSP_O_C2') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQSBNY.MQABNY.BMC.RPO.ALL_CLM_CMS_I') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQSBNY.MQABNY.BMC.RPO.ALL_CLM_CMS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQSBNY.MQABNY.BMC.RPO.ALL_CLM_CMS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQSBNY.MQABNY.BMC.RPO.CLMC_RSP_I_A') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQSBNY.MQABNY.BMC.RPO.CLMC_RSP_I_A') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQSBNY.MQABNY.BMC.RPO.CLMC_RSP_I_B') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQSBNY.MQABNY.BMC.RPO.CLMC_RSP_I_B') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQSBNY.MQABNY.BMC.RPO.CLMI_RSP_I_A') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQSBNY.MQABNY.BMC.RPO.CLMI_RSP_I_A') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQSBNY.MQABNY.BMC.RPO.CLMI_RSP_I_B') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQSBNY.MQABNY.BMC.RPO.CLMI_RSP_I_B') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQSBNY.MQABNY.BMC.RPO.DEAL_ESB1_RSP_I_A') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQSBNY.MQABNY.BMC.RPO.DEAL_ESB1_RSP_I_A') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQSBNY.MQABNY.BMC.RPO.DEAL_ESB1_RSP_I_B') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQSBNY.MQABNY.BMC.RPO.DEAL_ESB1_RSP_I_B') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQSBNY.MQABNY.BMC.RPO.RE_NET_POSCONF_I') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQSBNY.MQABNY.BMC.RPO.RE_NET_POSCONF_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQSBNY.MQABNY.BMC.RPO.RE_NET_POSCONF_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQSBNY.MQABNY.BMC.RPO.RPO2BMC_INQUIRE.XYZ') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQSBNY.MQABNY.BMC.RPO.RPO2BMC_INQUIRE.XYZ') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQSBNY.MQABNY.BMC.RPO.RPO2BMC_INQUIRE.XYZ') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQSBNY.MQABNY.BMC.RPO.RPO2BMC_INQUIRE1.XYZ') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQSBNY.MQABNY.BMC.RPO.RPO2BMC_INQUIRE1.XYZ') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQSBNY.MQABNY.BMC.RPO.RPO2BMC_INQUIRE1.XYZ') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQSCIG.MQABNY.BMC.CIG.CIG_INS_I') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQSCIG.MQABNY.BMC.CIG.CIG_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQSCIG.MQABNY.BMC.CIG.CIG_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQSERV1') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQSERV1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQSERV1') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQSLIB.MQABNY.BMC.LIB.LIB_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQSLIB.MQABNY.BMC.LIB.LIB_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQSRDQ.MQABNY.BMC.QPE.READQ_INS_I') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQSRDQ.MQABNY.BMC.QPE.READQ_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQSRDQ.MQABNY.BMC.QPE.READQ_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQVBNY.MQABNY.BMC.BMC.BDS_XLI_ALL_S') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQVBNY.MQABNY.BMC.BMC.BDS_XLI_ALL_S') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQVBNY.MQABNY.BMC.BMC.BDS_XLI_ALL_S') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQVBNY.MQABNY.BMC.WUI.ALL_FRB_RSP_I') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQVBNY.MQABNY.BMC.WUI.ALL_FRB_RSP_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQVBNY.MQABNY.BMC.WUI.ALL_FRB_RSP_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQVBNY.MQABNY.BMC.WUI.ALL_FRB_RSP_I_C1') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQVBNY.MQABNY.BMC.WUI.ALL_FRB_RSP_I_C1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQVBNY.MQABNY.BMC.WUI.ALL_FRB_RSP_I_C1') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQVBNY.MQABNY.BMC.WUI.ALL_FRB_RSP_I_CP') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQVBNY.MQABNY.BMC.WUI.ALL_FRB_RSP_I_CP') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQVBNY.MQABNY.BMC.WUI.ALL_FRB_RSP_I_CP') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQVBNY.MQABNY.BMC.WUI.ALL_FRB_RSP_I_P') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQVBNY.MQABNY.BMC.WUI.ALL_FRB_RSP_I_P') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQVBNY.MQABNY.BMC.WUI.ALL_FRB_RSP_I_P') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQVBNY.MQABNY.BMC.WUI.FRB_BDCT_SEC_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQVBNY.MQABNY.BMC.WUI.FRB_BDCT_SEC_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQVBNY.MQDADP.IMP.BMC.BNY_TO_ICI_ACKS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQVBNY.MQDADP.IMP.BMC.BNY_TO_ICI_ACKS') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQVBNY.MQDADP.IMP.BMC.BNY_TO_ICI_RECV') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQVBNY.MQDADP.IMP.BMC.BNY_TO_ICI_RECV') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQVBNY.MQSBNY.RPO.BMC.RE3_SWIFT_REV_Q') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQVBNY.MQSBNY.RPO.BMC.RE3_SWIFT_REV_Q') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQVBNY.MQVBNY.BMC.BMC.SWIFT_PP_INS_I') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQVBNY.MQVBNY.BMC.BMC.SWIFT_PP_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQVBNY.MQVBNY.BMC.BMC.SWIFT_PP_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQVBNYM.MQABNY.BMC.TLX.SWIFTNET_BDS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQVBNYM.MQABNY.BMC.TLX.SWIFTNET_BDS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQWBNY.MQABNY.BMC.AIS.AIS_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQWBNY.MQABNY.BMC.AIS.AIS_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQWBNY.MQABNY.BMC.AIS.AIS_RSP_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQWBNY.MQABNY.BMC.AIS.AIS_RSP_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQWSNG.MQABNY.BMC.PH3.BGM_ALL_INS_I') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQWSNG.MQABNY.BMC.PH3.BGM_ALL_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQWSNG.MQABNY.BMC.PH3.BGM_ALL_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQWSNG.MQABNY.BMC.PH3.IMX_ALL_INS_I') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQWSNG.MQABNY.BMC.PH3.IMX_ALL_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQWSNG.MQABNY.BMC.PH3.IMX_ALL_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQWSNG.MQVBNY.BMC.PH3.DSA_BNY_INST') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQWSNG.MQVBNY.BMC.PH3.DSA_BNY_INST') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQXBNY.MQABNY.BMC.///.CLM_CMD_REQ_I_A.MULT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQXBNY.MQABNY.BMC.///.CLM_CMD_REQ_I_A.MULT') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQXBNY.MQABNY.BMC.///.CLM_CMD_REQ_I_B.MULT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQXBNY.MQABNY.BMC.///.CLM_CMD_REQ_I_B.MULT') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQXBNY.MQABNY.BMC.///.CLM_INQ_REQ_I_A.MULT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQXBNY.MQABNY.BMC.///.CLM_INQ_REQ_I_A.MULT') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQXBNY.MQABNY.BMC.///.CLM_INQ_REQ_I_B.MULT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQXBNY.MQABNY.BMC.///.CLM_INQ_REQ_I_B.MULT') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQXBNY.MQABNY.FNI.///.SWIFTNET_ALL_O.MULT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQXBNY.MQABNY.FNI.///.SWIFTNET_ALL_O.MULT') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQXBNY.MQABNY.FNI.///.SWIFTNET_BDS_O.MULT') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQXBNY.MQABNY.FNI.///.SWIFTNET_BDS_O.MULT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQXBNY.MQABNY.FNI.///.SWIFTNET_BDS_O.MULT') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQXBNY.MQABNY.FNI.///.SWIFTNET_DMM_O.MULT') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQXBNY.MQABNY.FNI.///.SWIFTNET_DMM_O.MULT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQXBNY.MQABNY.FNI.///.SWIFTNET_DMM_O.MULT') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQXBNY.MQSBNY.RPO.///.ADM_INS_I_C1.MULT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQXBNY.MQSBNY.RPO.///.ADM_INS_I_C1.MULT') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MQXBNY.MQSBNY.RPO.///.ADM_INS_I_C2.MULT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQXBNY.MQSBNY.RPO.///.ADM_INS_I_C2.MULT') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MSDOM_BONY_TEMP') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MSDOM_BONY_TEMP') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MSIL.BNY.SWIFT_REV_Q') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MSIL.BNY.SWIFT_REV_Q') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MSIL.BNY.SWIFT_REV_Q') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('MTX_TEST.MQ_MATRIX') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MTX_TEST.MQ_MATRIX') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MTX_TEST.MQ_MATRIX') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('NKG.BONY.COMMDTY.RCVRQ') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('NKG.BONY.COMMDTY.RCVRQ') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('NKG.BONY.COMMDTY.RCVRQ') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('NKG.MBSDLV.BONY.RCVRQ') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('NKG.MBSDLV.BONY.RCVRQ') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('NKG.MBSDLV.BONY.RCVRQ') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('NKG.MBSFUT.BONY.RCVRQ') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('NKG.MBSFUT.BONY.RCVRQ') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('NKG.MBSFUT.BONY.RCVRQ') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('NKG.MBSREC.BONY.RCVRQ') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('NKG.MBSREC.BONY.RCVRQ') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('NKG.MBSREC.BONY.RCVRQ') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('NKG.RETAIL.BONY.RCVRQ') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('NKG.RETAIL.BONY.RCVRQ') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('NKG.RETAIL.BONY.RCVRQ') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('NKG.TREASURY.BONY.RCVRQ') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('NKG.TREASURY.BONY.RCVRQ') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('NKG.TREASURY.BONY.RCVRQ') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('NYT8') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('NYT8') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('NYT8.1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('NYT8.1') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('NYT8.2') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('NYT8.2') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('NYT8.3') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('NYT8.3') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('NYT8.3') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('OCE.BMC.NSB_INS_I') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OCE.BMC.NSB_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('OCE.BMC.NSB_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('P3TEST') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('P3TEST') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('P3TEST') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('PFIS.MQR.BONYLINK.BNY_TO_DWR_ACKNAK') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('PFIS.MQR.BONYLINK.BNY_TO_DWR_ACKNAK') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('PFIS.MQR.BONYLINK.BNY_TO_DWR_ACKNAK') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('PFIS.MQR.BONYLINK.BNY_TO_DWR_CONFIRMS') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('PFIS.MQR.BONYLINK.BNY_TO_DWR_CONFIRMS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('PFIS.MQR.BONYLINK.BNY_TO_DWR_CONFIRMS') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('PH3.BMC.BGM_ALL_INS_I') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('PH3.BMC.BGM_ALL_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('PH3.BMC.BGM_ALL_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('PH3.BMC.IMX_ALL_INS_I') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('PH3.BMC.IMX_ALL_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('PH3.BMC.IMX_ALL_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('PH3.BMC.SWIFT_PP_INS_I') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('PH3.BMC.SWIFT_PP_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('PH3.BMC.SWIFT_PP_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('PRA.BMC.PRA4_INS_O') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('PRA.BMC.PRA4_INS_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('PRA.BMC.PRA4_INS_O') +
   GROUP('wpra') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('PRA.BMC.PRA4_INS_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('QPE.BMC.READQ_INS_I') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('QPE.BMC.READQ_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('QPE.BMC.READQ_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('RDQ_TREADQ') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RDQ_TREADQ') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RDQ_TREADQ') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SAFE.BONY.ACKNAK') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAFE.BONY.ACKNAK') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAFE.BONY.ACKNAK') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SAL.BMC.SAB_INS_I') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAL.BMC.SAB_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAL.BMC.SAB_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SAL.BMC.SAL_INS_I') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAL.BMC.SAL_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SAL.BMC.SAL_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SCRAP') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SCRAP') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SMB.BMC.MBSFUT_INS_I') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SMB.BMC.MBSFUT_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SMB.BMC.MBSFUT_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SMB.BMC.SMB_INS_I') +
   GROUP('yeciss') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SMB.BMC.SMB_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SMB.BMC.SMB_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SMSSCCQM') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SMSSCCQM') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SMSSCCQM') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SPARE') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SPARE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SPARE') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SPARE1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SPARE1') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SPARE1') +
   GROUP('dbdc') +
   OBJTYPE(QUEUE) +
   AUTHADD(DSP,GET,INQ,PUT)
SET AUTHREC +
   PROFILE('SPARE2') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SPARE2') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SPARE3') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SPARE3') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SPARE4') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SPARE4') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SPARE5') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SPARE5') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SQAL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SQAL') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SQAL.REMOTE.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SQAL.REMOTE.QUEUE') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SQLA') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SQLA') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SQLA.REMOTE.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SQLA.REMOTE.QUEUE') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SQLB') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SQLB') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SQLB.REMOTE.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SQLB.REMOTE.QUEUE') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SQLD') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SQLD') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SQLD') +
   GROUP('dbdc') +
   OBJTYPE(QUEUE) +
   AUTHADD(DSP,INQ)
SET AUTHREC +
   PROFILE('SQLD.REMOTE.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SQLD.REMOTE.QUEUE') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SQLO') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SQLO') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SQLO.REMOTE.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SQLO.REMOTE.QUEUE') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SQNA') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SQNA') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SQNA.REMOTE.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SQNA.REMOTE.QUEUE') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SQND') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SQND') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SQND') +
   GROUP('w5rkms') +
   OBJTYPE(QUEUE) +
   AUTHADD(DSP,INQ)
SET AUTHREC +
   PROFILE('SQND.REMOTE.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SQND.REMOTE.QUEUE') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SQUD') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SQUD') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SQUD') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SSE.BMC.BDCT_SEC_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SSE.BMC.BDCT_SEC_O') +
   GROUP('w5rsse') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SSE.BMC.BDCT_SEC_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SSE.BMC.FRB_BDCT_SEC_I') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SSE.BMC.FRB_BDCT_SEC_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SSE.BMC.FRB_BDCT_SEC_I') +
   GROUP('w5rsse') +
   OBJTYPE(QUEUE) +
   AUTHADD(DSP,INQ,PUT)
SET AUTHREC +
   PROFILE('SSE.SSE.BDCT_SEC_X') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SSE.SSE.BDCT_SEC_X') +
   GROUP('w5rsse') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SSE.SSE.BDCT_SEC_X') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.ACCOUNTING.QUEUE') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.ACCOUNTING.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.ACCOUNTING.QUEUE') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.ACTIVITY.QUEUE') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.ACTIVITY.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.ACTIVITY.QUEUE') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.CHANNEL.EVENT') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.CHANNEL.EVENT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.CHANNEL.EVENT') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.COMMAND.EVENT') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.COMMAND.EVENT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.COMMAND.EVENT') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.COMMAND.QUEUE') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.COMMAND.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.COMMAND.QUEUE') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ,PUT)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.CONFIG.EVENT') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.CONFIG.EVENT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.CONFIG.EVENT') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.LOGGER.EVENT') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.LOGGER.EVENT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.LOGGER.EVENT') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.PERFM.EVENT') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.PERFM.EVENT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.PERFM.EVENT') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.PUBSUB.EVENT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.QMGR.EVENT') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.QMGR.EVENT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.QMGR.EVENT') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.STATISTICS.QUEUE') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.STATISTICS.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.STATISTICS.QUEUE') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.TRACE.ACTIVITY.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.TRACE.ROUTE.QUEUE') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.TRACE.ROUTE.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.TRACE.ROUTE.QUEUE') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.AUTH.DATA.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.AUTH.DATA.QUEUE') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(DSP)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.ADAPTER.FAILED') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.ADAPTER.FAILED') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.ADAPTER.FAILED') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.ADAPTER.INPROGRESS') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.ADAPTER.INPROGRESS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.ADAPTER.INPROGRESS') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.ADAPTER.NEW') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.ADAPTER.NEW') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.ADAPTER.NEW') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.ADAPTER.PROCESSED') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.ADAPTER.PROCESSED') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.ADAPTER.PROCESSED') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.ADAPTER.UNKNOWN') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.ADAPTER.UNKNOWN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.ADAPTER.UNKNOWN') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.ADMIN.QUEUE') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.ADMIN.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.ADMIN.QUEUE') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.ADMIN.REPLY') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.ADMIN.REPLY') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.ADMIN.REPLY') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.ADMIN.REPLYTODM') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.ADMIN.REPLYTODM') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.ADMIN.REPLYTODM') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.ADMIN.STREAM') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.ADMIN.STREAM') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.AGGR.CONTROL') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.AGGR.CONTROL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.AGGR.CONTROL') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.AGGR.REPLY') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.AGGR.REPLY') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.AGGR.REPLY') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.AGGR.REQUEST') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.AGGR.REQUEST') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.AGGR.REQUEST') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.AGGR.TIMEOUT') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.AGGR.TIMEOUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.AGGR.TIMEOUT') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.AGGR.UNKNOWN') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.AGGR.UNKNOWN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.AGGR.UNKNOWN') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.AUTH') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.AUTH') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.AUTH') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.CONFIG.QUEUE') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.CONFIG.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.CONFIG.QUEUE') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.CONFIG.REPLY') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.CONFIG.REPLY') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.CONFIG.REPLY') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.CONTROL.QUEUE') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.CONTROL.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.CONTROL.QUEUE') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.DEFAULT.STREAM') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.DEFAULT.STREAM') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.DEPLOY.QUEUE') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.DEPLOY.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.DEPLOY.QUEUE') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.DEPLOY.REPLY') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.DEPLOY.REPLY') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.DEPLOY.REPLY') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.EDA.COLLECTIONS') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.EDA.COLLECTIONS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.EDA.COLLECTIONS') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.EDA.EVENTS') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.EDA.EVENTS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.EDA.EVENTS') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.EXECUTIONGROUP.QUEUE') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.EXECUTIONGROUP.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.EXECUTIONGROUP.QUEUE') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.EXECUTIONGROUP.REPLY') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.EXECUTIONGROUP.REPLY') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.EXECUTIONGROUP.REPLY') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.INTER.BROKER.COMMUNICATIONS') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.INTER.BROKER.COMMUNICATIONS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.INTER.BROKER.COMMUNICATIONS') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.INTERBROKER.MODEL.QUEUE') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.INTERBROKER.MODEL.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.INTERBROKER.MODEL.QUEUE') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.INTERBROKER.QUEUE') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.INTERBROKER.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.INTERBROKER.QUEUE') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.MODEL.QUEUE') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.MODEL.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.MODEL.QUEUE') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.SECURITY.REPLY') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.SECURITY.REPLY') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.SECURITY.REPLY') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.SEQ.EXPIRY') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.SEQ.EXPIRY') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.SEQ.EXPIRY') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.SEQ.GROUP') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.SEQ.GROUP') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.SEQ.GROUP') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.SEQ.NUMBER') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.SEQ.NUMBER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.SEQ.NUMBER') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.TIMEOUT.QUEUE') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.TIMEOUT.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.TIMEOUT.QUEUE') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.WS.ACK') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.WS.ACK') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.WS.ACK') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.WS.INPUT') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.WS.INPUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.WS.INPUT') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.WS.REPLY') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.WS.REPLY') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.WS.REPLY') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.CHANNEL.INITQ') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.CHANNEL.INITQ') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.CHANNEL.INITQ') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.CHANNEL.SYNCQ') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.CHANNEL.SYNCQ') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.CHANNEL.SYNCQ') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.CHLAUTH.DATA.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.CICS.INITIATION.QUEUE') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.CICS.INITIATION.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.CICS.INITIATION.QUEUE') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.CLUSTER.COMMAND.QUEUE') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.CLUSTER.COMMAND.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.CLUSTER.COMMAND.QUEUE') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.CLUSTER.HISTORY.QUEUE') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.CLUSTER.HISTORY.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.CLUSTER.HISTORY.QUEUE') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.CLUSTER.REPOSITORY.QUEUE') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.CLUSTER.REPOSITORY.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.CLUSTER.REPOSITORY.QUEUE') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.CLUSTER.TRANSMIT.MODEL.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.CLUSTER.TRANSMIT.QUEUE') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.CLUSTER.TRANSMIT.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.CLUSTER.TRANSMIT.QUEUE') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.DEAD.LETTER.QUEUE') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEAD.LETTER.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEAD.LETTER.QUEUE') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.ALIAS.QUEUE') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.ALIAS.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.ALIAS.QUEUE') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.INITIATION.QUEUE') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.INITIATION.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.INITIATION.QUEUE') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.LOCAL.QUEUE') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.LOCAL.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.LOCAL.QUEUE') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.LOCAL.QUEUE') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(NONE)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.LOCAL.QUEUE') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(NONE)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.LOCAL.QUEUE') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(NONE)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.MODEL.QUEUE') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.MODEL.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.MODEL.QUEUE') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.REMOTE.QUEUE') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.REMOTE.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.REMOTE.QUEUE') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.DOTNET.XARECOVERY.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DURABLE.MODEL.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DURABLE.MODEL.QUEUE') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.DURABLE.SUBSCRIBER.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DURABLE.SUBSCRIBER.QUEUE') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.HIERARCHY.STATE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.HIERARCHY.STATE') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.INTER.QMGR.CONTROL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.INTER.QMGR.CONTROL') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.INTER.QMGR.FANREQ') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.INTER.QMGR.FANREQ') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.INTER.QMGR.PUBS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.INTER.QMGR.PUBS') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.INTERNAL.REPLY.QUEUE') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.INTERNAL.REPLY.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.INTERNAL.REPLY.QUEUE') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.JMS.ADMIN.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.JMS.ADMIN.QUEUE') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.JMS.D.CC.SUBSCRIBER.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.JMS.D.CC.SUBSCRIBER.QUEUE') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.JMS.D.SUBSCRIBER.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.JMS.D.SUBSCRIBER.QUEUE') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.JMS.MODEL.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.JMS.MODEL.QUEUE') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.JMS.ND.CC.SUBSCRIBER.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.JMS.ND.CC.SUBSCRIBER.QUEUE') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.JMS.ND.SUBSCRIBER.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.JMS.ND.SUBSCRIBER.QUEUE') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.JMS.PS.STATUS.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.JMS.PS.STATUS.QUEUE') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.JMS.REPORT.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.JMS.REPORT.QUEUE') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.JMS.TEMPQ.MODEL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.MQEXPLORER.REPLY.MODEL') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.MQEXPLORER.REPLY.MODEL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.MQEXPLORER.REPLY.MODEL') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.MQSC.REPLY.QUEUE') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.MQSC.REPLY.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.MQSC.REPLY.QUEUE') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.NDURABLE.MODEL.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.NDURABLE.MODEL.QUEUE') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.PENDING.DATA.QUEUE') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.PENDING.DATA.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.PENDING.DATA.QUEUE') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.PROTECTION.ERROR.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.PROTECTION.POLICY.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.RETAINED.PUB.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.RETAINED.PUB.QUEUE') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.SELECTION.EVALUATION.QUEUE') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.SELECTION.EVALUATION.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.SELECTION.EVALUATION.QUEUE') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.SELECTION.VALIDATION.QUEUE') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.SELECTION.VALIDATION.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.SELECTION.VALIDATION.QUEUE') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('T.READQ.BNY') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('T.READQ.BNY') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('TBL.BMC.CMI_INS_I') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TBL.BMC.CMI_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TBL.BMC.CMI_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('TBL.BMC.GLE_INS_I') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TBL.BMC.GLE_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TBL.BMC.GLE_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('TBL.BMC.PLM_INS_I') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TBL.BMC.PLM_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TBL.BMC.PLM_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('TBL.BMC.SCB_INS_I') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TBL.BMC.SCB_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TBL.BMC.SCB_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('TBL.BMC.SSS_INS_I') +
   GROUP('dbmw') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TBL.BMC.SSS_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TBL.BMC.SSS_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('TDDEV400') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TDDEV400') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TDDEV400') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('TDS_TDDEV400_1') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TDS_TDDEV400_1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TDS_TDDEV400_1') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('TEMP.QUEUE') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEMP.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEMP.QUEUE') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('TEMP.SUNGUARD') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEMP.SUNGUARD') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEMP.TLX.IN') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEMP.TLX.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEMP.TLX.IN') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('TEST_ABDA_OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST_ABDA_OUT') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('TEST_IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST_IN') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('TEST_OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST_OUT') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('TEST_QM') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST_QM') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST_QM') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('TEST_SGD_BGM') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TEST_SGD_BGM') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TLX.BMC.SWIFTNET_BDS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TLX.BMC.SWIFTNET_BDS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('TMQM') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TMQM') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TMQM') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('TSLK') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TSLK') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TSLK') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('UBS.BMC.SWP_INS_I') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('UBS.BMC.SWP_INS_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('UBS.BMC.SWP_INS_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('UBS_INS_I_MODEL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('UBS_INS_I_MODEL') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('UNIX.INITQ') +
   GROUP('disp') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('UNIX.INITQ') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('UNIX.INITQ') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('UNIX.INITQ') +
   GROUP('pbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('VQDF') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('VQDF') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('VQDF.REMOTE.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('VQDF.REMOTE.QUEUE') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('VQDH') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('VQDH') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('VQDN') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('VQDN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('VQDN') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('VQDN.REMOTE.QUEUE') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('VQDN.REMOTE.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('VQDN.REMOTE.QUEUE') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('VQIH') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('VQIH') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('VQIH.REMOTE.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('VQIH.REMOTE.QUEUE') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('VQPB') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('VQPB') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('VQUN') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('VQUN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('VQUN') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('VQUN.REMOTE.QUEUE') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('VQUN.REMOTE.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('VQUN.REMOTE.QUEUE') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('WQAH') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('WQAH') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('WQAH.REMOTE.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('WQAH.REMOTE.QUEUE') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('WQYB') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('WQYB') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('WQYB.REMOTE.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('WQYB.REMOTE.QUEUE') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('WQYC') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('WQYC') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('WQYC.REMOTE.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('WQYC.REMOTE.QUEUE') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('WQYD') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('WQYD') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('WQYD.REMOTE.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('WQYD.REMOTE.QUEUE') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('WUI.BMC.ALL_FRB_RSP_I') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('WUI.BMC.ALL_FRB_RSP_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('WUI.BMC.ALL_FRB_RSP_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('WUI.BMC.ALL_FRB_RSP_I_P') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('WUI.BMC.ALL_FRB_RSP_I_P') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('WUI.BMC.ALL_FRB_RSP_I_P') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('WUI.BMC.FRB_BDCT_SEC_I') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('WUI.BMC.FRB_BDCT_SEC_I') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('XBBJ605.LOCAL.QUEUE') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('XBBJ605.LOCAL.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('XBBJ605.LOCAL.QUEUE') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('XBBJ605.MODEL.QUEUE') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('XBBJ605.MODEL.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('XBBJ605.MODEL.QUEUE') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('XLM.BMC.KMS_XLM_CMS_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('XLM.BMC.KMS_XLM_CMS_O') +
   GROUP('w5rxlm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('XLM.BMC.KMS_XLM_CMS_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('XLM.BMC.RE1_XLM_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('XLM.BMC.RE1_XLM_O') +
   GROUP('w5rxlm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('XLM.BMC.RE1_XLM_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('XLM.BMC.RE2_XLM_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('XLM.BMC.RE2_XLM_O') +
   GROUP('w5rxlm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('XLM.BMC.RE2_XLM_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('XLM.BMC.RE3_XLM_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('XLM.BMC.RE3_XLM_O') +
   GROUP('w5rxlm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('XLM.BMC.RE3_XLM_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('XLM.BMC.RE4_XLM_O') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('XLM.BMC.RE4_XLM_O') +
   GROUP('w5rxlm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('XLM.BMC.RE4_XLM_O') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('YQZ') +
   GROUP('dbmc') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('YQZ') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('YYY_IMX3') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ZMQT') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ZMQT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ZMQT') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('ZMQT_S1') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ZMQT_S1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ZMQX') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ZMQX') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ZMQX') +
   GROUP('mqmon') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,DSP,INQ)
SET AUTHREC +
   PROFILE('ZMQX_S1') +
   GROUP('ymgmq') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ZMQX_S1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ZZZ_OUT') +
   GROUP('mqbrkrs') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ZZZ_OUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
DEFINE NAMELIST('SYSTEM.DEFAULT.NAMELIST') +
*  NAMCOUNT(0) +
   NAMES(' ') +
   DESCR(' ') +
*  ALTDATE(2010-04-09) +
*  ALTTIME(13.38.02) +
   REPLACE
DEFINE NAMELIST('SYSTEM.QPUBSUB.QUEUE.NAMELIST') +
*  NAMCOUNT(2) +
   NAMES('SYSTEM.BROKER.DEFAULT.STREAM' +
        ,'SYSTEM.BROKER.ADMIN.STREAM') +
   DESCR('A list of queues for the queued Pub/Sub interface to monitor') +
*  ALTDATE(2010-04-09) +
*  ALTTIME(13.38.02) +
   REPLACE
DEFINE NAMELIST('SYSTEM.QPUBSUB.SUBPOINT.NAMELIST') +
*  NAMCOUNT(1) +
   NAMES('SYSTEM.BROKER.DEFAULT.SUBPOINT') +
   DESCR('Topic objects list used to match to RFH2 subscription points') +
*  ALTDATE(2010-04-09) +
*  ALTTIME(13.38.02) +
   REPLACE
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.NAMELIST') +
   GROUP('mqbrkrs') +
   OBJTYPE(NAMELIST) +
   AUTHADD(CHG,DLT,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.NAMELIST') +
   GROUP('mqm') +
   OBJTYPE(NAMELIST) +
   AUTHADD(CHG,DLT,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.QPUBSUB.QUEUE.NAMELIST') +
   GROUP('mqm') +
   OBJTYPE(NAMELIST) +
   AUTHADD(CHG,DLT,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.QPUBSUB.SUBPOINT.NAMELIST') +
   GROUP('mqm') +
   OBJTYPE(NAMELIST) +
   AUTHADD(CHG,DLT,DSP,INQ)
DEFINE PROCESS('BMC.BMC.ADM_CITI_RSP_O.PROCESS') +
   APPLTYPE(UNIX) +
   APPLICID('/devl/bmc/esb/releases/RELEASE/scripts/JOB_ADM_CITI.KSH') +
   ENVRDATA(' ') +
   USERDATA(' ') +
   DESCR('RWH1703 HOLDS CITI OUTBOUND ADM FILE RESPONSE') +
*  ALTDATE(2013-09-20) +
*  ALTTIME(02.30.11) +
   REPLACE
DEFINE PROCESS('JOB_ADM_PIMCO_RSP') +
   APPLTYPE(UNIX) +
   APPLICID('/devl/bmc/esb/releases/RELEASE/scripts/JOB_ADM_PIMCO.KSH') +
   ENVRDATA(' ') +
   USERDATA(' ') +
   DESCR('RGD1641 HOLDS PIMCO OUTBOUND ADM FILE RESPONSE') +
*  ALTDATE(2013-09-13) +
*  ALTTIME(12.21.17) +
   REPLACE
DEFINE PROCESS('LMS.BMC.BMC2LMS_INPUT2.PROCESS') +
   APPLTYPE(DOS) +
   APPLICID('C:\Data\Batch.bat') +
   ENVRDATA(' ') +
   USERDATA(' ') +
   DESCR('REQ# 520') +
*  ALTDATE(2014-04-05) +
*  ALTTIME(10.48.14) +
   REPLACE
DEFINE PROCESS('LMS.BMC.BMC2LMS_INPUT3.PROCESS') +
   APPLTYPE(DOS) +
   APPLICID('C:\Data\Batch.bat') +
   ENVRDATA(' ') +
   USERDATA(' ') +
   DESCR('REQ# 520') +
*  ALTDATE(2014-04-05) +
*  ALTTIME(10.48.20) +
   REPLACE
DEFINE PROCESS('SYSTEM.DEFAULT.PROCESS') +
   APPLTYPE(UNIX) +
   APPLICID(' ') +
   ENVRDATA(' ') +
   USERDATA(' ') +
   DESCR(' ') +
*  ALTDATE(2010-04-09) +
*  ALTTIME(13.38.02) +
   REPLACE
SET AUTHREC +
   PROFILE('BMC.BMC.ADM_CITI_RSP_O.PROCESS') +
   GROUP('ymgmq') +
   OBJTYPE(PROCESS) +
   AUTHADD(CHG,DLT,DSP,INQ,SET)
SET AUTHREC +
   PROFILE('BMC.BMC.ADM_CITI_RSP_O.PROCESS') +
   GROUP('mqm') +
   OBJTYPE(PROCESS) +
   AUTHADD(CHG,DLT,DSP,INQ,SET)
SET AUTHREC +
   PROFILE('BMC.BMC.ADM_CITI_RSP_O.PROCESS') +
   GROUP('pbmc') +
   OBJTYPE(PROCESS) +
   AUTHADD(INQ,SET)
SET AUTHREC +
   PROFILE('BMC.BMC.ADM_CITI_RSP_O.PROCESS') +
   GROUP('mqmon') +
   OBJTYPE(PROCESS) +
   AUTHADD(INQ)
SET AUTHREC +
   PROFILE('JOB_ADM_PIMCO_RSP') +
   GROUP('yeciss') +
   OBJTYPE(PROCESS) +
   AUTHADD(CHG,DLT,DSP,INQ,SET)
SET AUTHREC +
   PROFILE('JOB_ADM_PIMCO_RSP') +
   GROUP('mqm') +
   OBJTYPE(PROCESS) +
   AUTHADD(CHG,DLT,DSP,INQ,SET)
SET AUTHREC +
   PROFILE('JOB_ADM_PIMCO_RSP') +
   GROUP('pbmc') +
   OBJTYPE(PROCESS) +
   AUTHADD(INQ,SET)
SET AUTHREC +
   PROFILE('JOB_ADM_PIMCO_RSP') +
   GROUP('mqmon') +
   OBJTYPE(PROCESS) +
   AUTHADD(INQ)
SET AUTHREC +
   PROFILE('LMS.BMC.BMC2LMS_INPUT2.PROCESS') +
   GROUP('ymgmq') +
   OBJTYPE(PROCESS) +
   AUTHADD(CHG,DLT,DSP,INQ,SET)
SET AUTHREC +
   PROFILE('LMS.BMC.BMC2LMS_INPUT2.PROCESS') +
   GROUP('mqm') +
   OBJTYPE(PROCESS) +
   AUTHADD(CHG,DLT,DSP,INQ,SET)
SET AUTHREC +
   PROFILE('LMS.BMC.BMC2LMS_INPUT2.PROCESS') +
   GROUP('mqmon') +
   OBJTYPE(PROCESS) +
   AUTHADD(INQ)
SET AUTHREC +
   PROFILE('LMS.BMC.BMC2LMS_INPUT3.PROCESS') +
   GROUP('ymgmq') +
   OBJTYPE(PROCESS) +
   AUTHADD(CHG,DLT,DSP,INQ,SET)
SET AUTHREC +
   PROFILE('LMS.BMC.BMC2LMS_INPUT3.PROCESS') +
   GROUP('mqm') +
   OBJTYPE(PROCESS) +
   AUTHADD(CHG,DLT,DSP,INQ,SET)
SET AUTHREC +
   PROFILE('LMS.BMC.BMC2LMS_INPUT3.PROCESS') +
   GROUP('mqmon') +
   OBJTYPE(PROCESS) +
   AUTHADD(INQ)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.PROCESS') +
   GROUP('mqbrkrs') +
   OBJTYPE(PROCESS) +
   AUTHADD(CHG,DLT,DSP,INQ,SET)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.PROCESS') +
   GROUP('mqm') +
   OBJTYPE(PROCESS) +
   AUTHADD(CHG,DLT,DSP,INQ,SET)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.PROCESS') +
   GROUP('mqmon') +
   OBJTYPE(PROCESS) +
   AUTHADD(INQ)
DEFINE CHANNEL('ABJA.TO.ABKA') +
   CHLTYPE(RCVR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR('itsp #476693') +
   HBINT(300) +
   KAINT(AUTO) +
   MAXMSGL(15000) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MRDATA(' ') +
   MREXIT(' ') +
   MRRTY(10) +
   MRTMR(1000) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PUTAUT(DEF) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) +
   USEDLQ(YES) +
   REPLACE
DEFINE CHANNEL('ABKA.ADP_TEST_QM.C1') +
   CHLTYPE(SDR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHHB(0) +
   BATCHINT(0) +
   BATCHLIM(5000)  +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   CONNAME('172.30.81.144(1414)') +
   CONVERT(YES) +
   DESCR('To ADP TEST_QM') +
   DISCINT(6000) +
   HBINT(300) +
   KAINT(AUTO) +
   LOCLADDR(' ') +
   LONGRTY(999999999) +
   LONGTMR(1200) +
   MAXMSGL(4194304) +
   MCANAME(' ') +
   MCATYPE(PROCESS) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PASSWORD(' ') +
   PROPCTL(COMPAT) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SHORTRTY(10) +
   SHORTTMR(60) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) MODENAME(' ') TPNAME(' ') +
   USEDLQ(YES) +
   USERID(' ') +
   XMITQ('TEST_QM') +
   REPLACE
DEFINE CHANNEL('ABKA.BDC.BMC.BGM') +
   CHLTYPE(SVRCONN) +
*  ALTDATE(2014-10-01) +
*  ALTTIME(06.46.20) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR('ITSP#551536') +
   DISCINT(0) +
   HBINT(60) +
   KAINT(AUTO) +
   MAXINST(10) +
   MAXINSTC(10) +
   MAXMSGL(4194304) +
   MCAUSER('dbdcd01') +
   MONCHL(QMGR) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SHARECNV(0) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('ABKA.BDC.BMC.FED') +
   CHLTYPE(SVRCONN) +
*  ALTDATE(2014-10-01) +
*  ALTTIME(07.54.29) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR('ITSP#551536') +
   DISCINT(0) +
   HBINT(60) +
   KAINT(AUTO) +
   MAXINST(10) +
   MAXINSTC(10) +
   MAXMSGL(4194304) +
   MCAUSER('dbdcd01') +
   MONCHL(QMGR) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SHARECNV(0) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('ABKA.BDC.BMC.FTS') +
   CHLTYPE(SVRCONN) +
*  ALTDATE(2014-10-01) +
*  ALTTIME(06.49.10) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR('ITSP#551536') +
   DISCINT(0) +
   HBINT(60) +
   KAINT(AUTO) +
   MAXINST(10) +
   MAXINSTC(10) +
   MAXMSGL(4194304) +
   MCAUSER('dbdcd01') +
   MONCHL(QMGR) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SHARECNV(0) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('ABKA.BDC.CLNT') +
   CHLTYPE(SVRCONN) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR('BDC client channel') +
   DISCINT(0) +
   HBINT(300) +
   KAINT(AUTO) +
   MAXINST(25) +
   MAXINSTC(25) +
   MAXMSGL(4194304) +
   MCAUSER('dbdcd01') +
   MONCHL(QMGR) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SHARECNV(0) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('ABKA.BDC.DRE') +
   CHLTYPE(SVRCONN) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR('ACP services BDC/BMC SVRCONN,itsp# 362340') +
   DISCINT(0) +
   HBINT(300) +
   KAINT(AUTO) +
   MAXINST(15) +
   MAXINSTC(5) +
   MAXMSGL(4194304) +
   MCAUSER('dbdcd01') +
   MONCHL(QMGR) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SHARECNV(0) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('ABKA.BMC.CLNT') +
   CHLTYPE(SVRCONN) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR('BMC client channel') +
   DISCINT(0) +
   HBINT(300) +
   KAINT(AUTO) +
   MAXINST(999999999) +
   MAXINSTC(999999999) +
   MAXMSGL(4194304) +
   MCAUSER('dbmcd01') +
   MONCHL(QMGR) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SHARECNV(0) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('ABKA.BMOCMDEV.C1') +
   CHLTYPE(SDR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHHB(0) +
   BATCHINT(0) +
   BATCHLIM(5000)  +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   CONNAME('out-test-mqproxy.mellon.com(17036)') +
   CONVERT(NO) +
   DESCR('chl for mq proxy BDS to BMO Bank of Montreal') +
   DISCINT(6000) +
   HBINT(300) +
   KAINT(AUTO) +
   LOCLADDR(' ') +
   LONGRTY(999999999) +
   LONGTMR(1200) +
   MAXMSGL(4194304) +
   MCANAME(' ') +
   MCATYPE(PROCESS) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PASSWORD(' ') +
   PROPCTL(COMPAT) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SHORTRTY(10) +
   SHORTTMR(60) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) MODENAME(' ') TPNAME(' ') +
   USEDLQ(YES) +
   USERID(' ') +
   XMITQ('BMOCMDEV') +
   REPLACE
DEFINE CHANNEL('ABKA.BNSUATCDS.C1') +
   CHLTYPE(SDR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHHB(0) +
   BATCHINT(0) +
   BATCHLIM(5000)  +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   CONNAME('172.30.193.151(1414)') +
   CONVERT(NO) +
   DESCR('ITSP132661:To Scotia/BNSUATCDS,itsp# 417692') +
   DISCINT(900) +
   HBINT(300) +
   KAINT(AUTO) +
   LOCLADDR(' ') +
   LONGRTY(999999999) +
   LONGTMR(1200) +
   MAXMSGL(4194304) +
   MCANAME(' ') +
   MCATYPE(PROCESS) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PASSWORD(' ') +
   PROPCTL(COMPAT) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SHORTRTY(10) +
   SHORTTMR(60) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) MODENAME(' ') TPNAME(' ') +
   USEDLQ(YES) +
   USERID(' ') +
   XMITQ('BNSUATCDS') +
   REPLACE
DEFINE CHANNEL('ABKA.CIGADPQM_D1.C1') +
   CHLTYPE(SDR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHHB(0) +
   BATCHINT(0) +
   BATCHLIM(5000)  +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   CONNAME('172.30.177.67(1416)') +
   CONVERT(NO) +
   DESCR('To Citadel/CIGADPQM') +
   DISCINT(900) +
   HBINT(300) +
   KAINT(AUTO) +
   LOCLADDR(' ') +
   LONGRTY(999999999) +
   LONGTMR(1200) +
   MAXMSGL(4194304) +
   MCANAME(' ') +
   MCATYPE(PROCESS) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PASSWORD(' ') +
   PROPCTL(COMPAT) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SHORTRTY(10) +
   SHORTTMR(60) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) MODENAME(' ') TPNAME(' ') +
   USEDLQ(YES) +
   USERID(' ') +
   XMITQ('CIGADPQM_DEV1') +
   REPLACE
DEFINE CHANNEL('ABKA.GSC.BMC') +
   CHLTYPE(SVRCONN) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR('ITSP #449206') +
   DISCINT(0) +
   HBINT(300) +
   KAINT(AUTO) +
   MAXINST(15) +
   MAXINSTC(5) +
   MAXMSGL(4194304) +
   MCAUSER('gscm1dm') +
   MONCHL(QMGR) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SHARECNV(10) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('ABKA.GSC.BMC.FTS') +
   CHLTYPE(SVRCONN) +
*  ALTDATE(2014-10-01) +
*  ALTTIME(07.04.28) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR('ITSP#551536') +
   DISCINT(0) +
   HBINT(60) +
   KAINT(AUTO) +
   MAXINST(10) +
   MAXINSTC(10) +
   MAXMSGL(4194304) +
   MCAUSER('gscm1dm') +
   MONCHL(QMGR) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SHARECNV(0) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('ABKA.GSC.BMC.RPO') +
   CHLTYPE(SVRCONN) +
*  ALTDATE(2014-10-07) +
*  ALTTIME(03.02.43) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR('itsp # 551559') +
   DISCINT(0) +
   HBINT(60) +
   KAINT(AUTO) +
   MAXINST(10) +
   MAXINSTC(10) +
   MAXMSGL(4194304) +
   MCAUSER('gscm1dm') +
   MONCHL(QMGR) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SHARECNV(0) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('ABKA.GSC.CLNT') +
   CHLTYPE(SVRCONN) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR('itsp #238753') +
   DISCINT(0) +
   HBINT(300) +
   KAINT(AUTO) +
   MAXINST(999999999) +
   MAXINSTC(999999999) +
   MAXMSGL(4194304) +
   MCAUSER('pgscp31') +
   MONCHL(QMGR) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SHARECNV(10) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('ABKA.GST1ETCPT1.C1') +
   CHLTYPE(SDR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHHB(0) +
   BATCHINT(0) +
   BATCHLIM(5000)  +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   CONNAME('gdshost(1414)') +
   CONVERT(NO) +
   DESCR('To GDS/GST1ETCPT1') +
   DISCINT(900) +
   HBINT(300) +
   KAINT(AUTO) +
   LOCLADDR(' ') +
   LONGRTY(999999999) +
   LONGTMR(1200) +
   MAXMSGL(4194304) +
   MCANAME(' ') +
   MCATYPE(PROCESS) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PASSWORD(' ') +
   PROPCTL(COMPAT) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SHORTRTY(10) +
   SHORTTMR(60) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) MODENAME(' ') TPNAME(' ') +
   USEDLQ(YES) +
   USERID(' ') +
   XMITQ('GST1ETCPT1.1') +
   REPLACE
DEFINE CHANNEL('ABKA.GST1ETCPT1.C2') +
   CHLTYPE(SDR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHHB(0) +
   BATCHINT(0) +
   BATCHLIM(5000)  +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   CONNAME('gdshost(1414)') +
   CONVERT(NO) +
   DESCR('To GDS/GST1ETCPT1') +
   DISCINT(900) +
   HBINT(300) +
   KAINT(AUTO) +
   LOCLADDR(' ') +
   LONGRTY(999999999) +
   LONGTMR(1200) +
   MAXMSGL(4194304) +
   MCANAME(' ') +
   MCATYPE(PROCESS) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PASSWORD(' ') +
   PROPCTL(COMPAT) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SHORTRTY(10) +
   SHORTTMR(60) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) MODENAME(' ') TPNAME(' ') +
   USEDLQ(YES) +
   USERID(' ') +
   XMITQ('GST1ETCPT1.2') +
   REPLACE
DEFINE CHANNEL('ABKA.KMS.BMC') +
   CHLTYPE(SVRCONN) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR('itsp # 497138') +
   DISCINT(0) +
   HBINT(300) +
   KAINT(AUTO) +
   MAXINST(15) +
   MAXINSTC(5) +
   MAXMSGL(4194304) +
   MCAUSER('kmsm01m') +
   MONCHL(QMGR) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SHARECNV(10) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('ABKA.MQSERV1.C1') +
   CHLTYPE(SDR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHHB(0) +
   BATCHINT(0) +
   BATCHLIM(5000)  +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   CONNAME('172.30.79.130 (1414)') +
   CONVERT(NO) +
   DESCR('To LIB/MQSERV1') +
   DISCINT(300) +
   HBINT(300) +
   KAINT(AUTO) +
   LOCLADDR(' ') +
   LONGRTY(999999999) +
   LONGTMR(1200) +
   MAXMSGL(4194304) +
   MCANAME(' ') +
   MCATYPE(PROCESS) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PASSWORD(' ') +
   PROPCTL(COMPAT) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SHORTRTY(10) +
   SHORTTMR(60) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) MODENAME(' ') TPNAME(' ') +
   USEDLQ(YES) +
   USERID(' ') +
   XMITQ('MQSERV1') +
   REPLACE
DEFINE CHANNEL('ABKA.NSBSMSDEV.C1') +
   CHLTYPE(SDR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHHB(0) +
   BATCHINT(0) +
   BATCHLIM(5000)  +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   CONNAME('172.30.31.20(1417)') +
   CONVERT(NO) +
   DESCR('ITSP# 206230') +
   DISCINT(6000) +
   HBINT(300) +
   KAINT(AUTO) +
   LOCLADDR(' ') +
   LONGRTY(999999999) +
   LONGTMR(1200) +
   MAXMSGL(4194304) +
   MCANAME(' ') +
   MCATYPE(PROCESS) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PASSWORD(' ') +
   PROPCTL(COMPAT) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(1) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SHORTRTY(10) +
   SHORTTMR(60) +
   SSLCIPH('RC4_MD5_US') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) MODENAME(' ') TPNAME(' ') +
   USEDLQ(YES) +
   USERID(' ') +
   XMITQ('SMSSCCQM') +
   REPLACE
DEFINE CHANNEL('ABKA.NYT8.S1') +
   CHLTYPE(SDR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHHB(0) +
   BATCHINT(0) +
   BATCHLIM(5000)  +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   CONNAME('172.30.3.2(25027)') +
   CONVERT(YES) +
   DESCR('ITSP297115:To MorganStanley/NYT8') +
   DISCINT(900) +
   HBINT(300) +
   KAINT(AUTO) +
   LOCLADDR(' ') +
   LONGRTY(999999999) +
   LONGTMR(1200) +
   MAXMSGL(4194304) +
   MCANAME(' ') +
   MCATYPE(PROCESS) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PASSWORD(' ') +
   PROPCTL(COMPAT) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SHORTRTY(10) +
   SHORTTMR(60) +
   SSLCIPH('TLS_RSA_WITH_AES_256_CBC_SHA') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) MODENAME(' ') TPNAME(' ') +
   USEDLQ(YES) +
   USERID(' ') +
   XMITQ('NYT8.1') +
   REPLACE
DEFINE CHANNEL('ABKA.NYT8.S2') +
   CHLTYPE(SDR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHHB(0) +
   BATCHINT(0) +
   BATCHLIM(5000)  +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   CONNAME('172.30.3.2(25027)') +
   CONVERT(YES) +
   DESCR('ITSP297115:To MorganStanley/NYT8') +
   DISCINT(900) +
   HBINT(300) +
   KAINT(AUTO) +
   LOCLADDR(' ') +
   LONGRTY(999999999) +
   LONGTMR(1200) +
   MAXMSGL(4194304) +
   MCANAME(' ') +
   MCATYPE(PROCESS) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PASSWORD(' ') +
   PROPCTL(COMPAT) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SHORTRTY(10) +
   SHORTTMR(60) +
   SSLCIPH('TLS_RSA_WITH_AES_256_CBC_SHA') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) MODENAME(' ') TPNAME(' ') +
   USEDLQ(YES) +
   USERID(' ') +
   XMITQ('NYT8.2') +
   REPLACE
DEFINE CHANNEL('ABKA.NYT8.S3') +
   CHLTYPE(SDR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHHB(0) +
   BATCHINT(0) +
   BATCHLIM(5000)  +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   CONNAME('172.30.3.2(25027)') +
   CONVERT(NO) +
   DESCR('ITSP316373:From MorganStanley/NYT8') +
   DISCINT(300) +
   HBINT(300) +
   KAINT(AUTO) +
   LOCLADDR(' ') +
   LONGRTY(999999999) +
   LONGTMR(1200) +
   MAXMSGL(4194304) +
   MCANAME(' ') +
   MCATYPE(PROCESS) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PASSWORD(' ') +
   PROPCTL(COMPAT) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SHORTRTY(10) +
   SHORTTMR(60) +
   SSLCIPH('TLS_RSA_WITH_AES_256_CBC_SHA') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) MODENAME(' ') TPNAME(' ') +
   USEDLQ(YES) +
   USERID(' ') +
   XMITQ('NYT8.3') +
   REPLACE
DEFINE CHANNEL('ABKA.P3TEST.C1') +
   CHLTYPE(SDR) +
*  ALTDATE(2014-10-20) +
*  ALTTIME(09.51.51) +
   BATCHHB(0) +
   BATCHINT(0) +
   BATCHLIM(5000)  +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   CONNAME('out-test-mqproxy.mellon.com(17016)') +
   CONVERT(NO) +
   DESCR('To P3TEST') +
   DISCINT(6000) +
   HBINT(300) +
   KAINT(AUTO) +
   LOCLADDR(' ') +
   LONGRTY(999999999) +
   LONGTMR(1200) +
   MAXMSGL(4194304) +
   MCANAME(' ') +
   MCATYPE(PROCESS) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PASSWORD(' ') +
   PROPCTL(COMPAT) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SHORTRTY(10) +
   SHORTTMR(60) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) MODENAME(' ') TPNAME(' ') +
   USEDLQ(YES) +
   USERID(' ') +
   XMITQ('P3TEST') +
   REPLACE
DEFINE CHANNEL('ABKA.PRA.CLNT') +
   CHLTYPE(SVRCONN) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR(' ') +
   DISCINT(0) +
   HBINT(300) +
   KAINT(AUTO) +
   MAXINST(999999999) +
   MAXINSTC(999999999) +
   MAXMSGL(4194304) +
   MCAUSER('dprad01') +
   MONCHL(QMGR) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SHARECNV(10) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('ABKA.SSE.BMC') +
   CHLTYPE(SVRCONN) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR(' ') +
   DISCINT(0) +
   HBINT(300) +
   KAINT(AUTO) +
   MAXINST(15) +
   MAXINSTC(5) +
   MAXMSGL(4194304) +
   MCAUSER('ssem02m') +
   MONCHL(QMGR) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SHARECNV(10) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('ABKA.TMQM.C1') +
   CHLTYPE(SDR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHHB(0) +
   BATCHINT(0) +
   BATCHLIM(5000)  +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   CONNAME('172.30.250.250.100(1415)') +
   CONVERT(NO) +
   DESCR('To MKG/TMQM') +
   DISCINT(300) +
   HBINT(300) +
   KAINT(AUTO) +
   LOCLADDR(' ') +
   LONGRTY(999999999) +
   LONGTMR(1200) +
   MAXMSGL(4194304) +
   MCANAME(' ') +
   MCATYPE(PROCESS) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PASSWORD(' ') +
   PROPCTL(COMPAT) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SHORTRTY(10) +
   SHORTTMR(60) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) MODENAME(' ') TPNAME(' ') +
   USEDLQ(YES) +
   USERID(' ') +
   XMITQ('TMQM') +
   REPLACE
DEFINE CHANNEL('ABKA.TO.ABDA') +
   CHLTYPE(SDR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHHB(0) +
   BATCHINT(0) +
   BATCHLIM(5000)  +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   CONNAME('xsa00y17(1491)') +
   CONVERT(NO) +
   DESCR(' ') +
   DISCINT(6000) +
   HBINT(300) +
   KAINT(AUTO) +
   LOCLADDR(' ') +
   LONGRTY(999999999) +
   LONGTMR(1200) +
   MAXMSGL(4194304) +
   MCANAME(' ') +
   MCATYPE(PROCESS) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PASSWORD(' ') +
   PROPCTL(COMPAT) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SHORTRTY(10) +
   SHORTTMR(60) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) MODENAME(' ') TPNAME(' ') +
   USEDLQ(YES) +
   USERID(' ') +
   XMITQ('ABDA') +
   REPLACE
DEFINE CHANNEL('ABKA.TO.ABJA') +
   CHLTYPE(SDR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHHB(0) +
   BATCHINT(0) +
   BATCHLIM(5000)  +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   CONNAME('xsa00y18.bankofny.com(1491)') +
   CONVERT(NO) +
   DESCR('itsp #476693') +
   DISCINT(6000) +
   HBINT(300) +
   KAINT(AUTO) +
   LOCLADDR(' ') +
   LONGRTY(999999999) +
   LONGTMR(1200) +
   MAXMSGL(15000) +
   MCANAME(' ') +
   MCATYPE(PROCESS) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PASSWORD(' ') +
   PROPCTL(COMPAT) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SHORTRTY(10) +
   SHORTTMR(60) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) MODENAME(' ') TPNAME(' ') +
   USEDLQ(YES) +
   USERID(' ') +
   XMITQ('ABJA') +
   REPLACE
DEFINE CHANNEL('ABKA.TO.ABUA') +
   CHLTYPE(SDR) +
*  ALTDATE(2014-09-09) +
*  ALTTIME(14.15.50) +
   BATCHHB(0) +
   BATCHINT(0) +
   BATCHLIM(5000)  +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   CONNAME('xsa00y19(1491)') +
   CONVERT(NO) +
   DESCR(' ') +
   DISCINT(900) +
   HBINT(300) +
   KAINT(AUTO) +
   LOCLADDR(' ') +
   LONGRTY(999999999) +
   LONGTMR(1200) +
   MAXMSGL(4194304) +
   MCANAME(' ') +
   MCATYPE(PROCESS) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PASSWORD(' ') +
   PROPCTL(COMPAT) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SHORTRTY(10) +
   SHORTTMR(60) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) MODENAME(' ') TPNAME(' ') +
   USEDLQ(YES) +
   USERID(' ') +
   XMITQ('ABUA') +
   REPLACE
DEFINE CHANNEL('ABKA.TO.AQT3') +
   CHLTYPE(SDR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHHB(0) +
   BATCHINT(0) +
   BATCHLIM(5000)  +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   CONNAME('xsa00x04(1453)') +
   CONVERT(NO) +
   DESCR('ITSP #227564') +
   DISCINT(900) +
   HBINT(300) +
   KAINT(AUTO) +
   LOCLADDR(' ') +
   LONGRTY(999999999) +
   LONGTMR(1200) +
   MAXMSGL(4194304) +
   MCANAME(' ') +
   MCATYPE(PROCESS) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PASSWORD(' ') +
   PROPCTL(COMPAT) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SHORTRTY(10) +
   SHORTTMR(60) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) MODENAME(' ') TPNAME(' ') +
   USEDLQ(YES) +
   USERID(' ') +
   XMITQ('AQT3') +
   REPLACE
DEFINE CHANNEL('ABKA.TO.ASMPMQI') +
   CHLTYPE(SDR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHHB(0) +
   BATCHINT(0) +
   BATCHLIM(5000)  +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   CONNAME('classt(1414)') +
   CONVERT(YES) +
   DESCR('To ASMPMQI') +
   DISCINT(6000) +
   HBINT(300) +
   KAINT(AUTO) +
   LOCLADDR(' ') +
   LONGRTY(999999999) +
   LONGTMR(1200) +
   MAXMSGL(4194304) +
   MCANAME(' ') +
   MCATYPE(PROCESS) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PASSWORD(' ') +
   PROPCTL(COMPAT) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SHORTRTY(10) +
   SHORTTMR(60) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) MODENAME(' ') TPNAME(' ') +
   USEDLQ(YES) +
   USERID(' ') +
   XMITQ('ASMPMQI') +
   REPLACE
DEFINE CHANNEL('ABKA.TO.BDSVD2') +
   CHLTYPE(SDR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHHB(0) +
   BATCHINT(0) +
   BATCHLIM(5000)  +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   CONNAME('robin(1414)') +
   CONVERT(NO) +
   DESCR('To BDSVD2') +
   DISCINT(6000) +
   HBINT(300) +
   KAINT(AUTO) +
   LOCLADDR(' ') +
   LONGRTY(999999999) +
   LONGTMR(1200) +
   MAXMSGL(4194304) +
   MCANAME(' ') +
   MCATYPE(PROCESS) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PASSWORD(' ') +
   PROPCTL(COMPAT) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SHORTRTY(10) +
   SHORTTMR(60) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) MODENAME(' ') TPNAME(' ') +
   USEDLQ(YES) +
   USERID(' ') +
   XMITQ('BDSVD2') +
   REPLACE
DEFINE CHANNEL('ABKA.TO.MG5A') +
   CHLTYPE(SDR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHHB(0) +
   BATCHINT(0) +
   BATCHLIM(5000)  +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   CONNAME('mqmmvs-mg5a.pgh.mellonbank.com(6090)') +
   CONVERT(YES) +
   DESCR('ITSP# 217321') +
   DISCINT(900) +
   HBINT(300) +
   KAINT(AUTO) +
   LOCLADDR(' ') +
   LONGRTY(999999999) +
   LONGTMR(1200) +
   MAXMSGL(4194304) +
   MCANAME(' ') +
   MCATYPE(PROCESS) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PASSWORD(' ') +
   PROPCTL(COMPAT) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SHORTRTY(10) +
   SHORTTMR(60) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) MODENAME(' ') TPNAME(' ') +
   USEDLQ(YES) +
   USERID(' ') +
   XMITQ('MG5A') +
   REPLACE
DEFINE CHANNEL('ABKA.TO.MQ25.BDS.S1') +
   CHLTYPE(SDR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHHB(0) +
   BATCHINT(0) +
   BATCHLIM(5000)  +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   CONNAME('170.74.254.85(16251)') +
   CONVERT(YES) +
   DESCR('ITSP 168382 To MS Smith Barney MQ25 QM') +
   DISCINT(900) +
   HBINT(300) +
   KAINT(AUTO) +
   LOCLADDR(' ') +
   LONGRTY(999999999) +
   LONGTMR(1200) +
   MAXMSGL(4194304) +
   MCANAME(' ') +
   MCATYPE(PROCESS) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PASSWORD(' ') +
   PROPCTL(COMPAT) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SHORTRTY(10) +
   SHORTTMR(60) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) MODENAME(' ') TPNAME(' ') +
   USEDLQ(YES) +
   USERID(' ') +
   XMITQ('MQ25') +
   REPLACE
DEFINE CHANNEL('ABKA.TO.MQ35.BDS.S1') +
   CHLTYPE(SDR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHHB(0) +
   BATCHINT(0) +
   BATCHLIM(5000)  +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   CONNAME('170.74.252.2(16351)') +
   CONVERT(YES) +
   DESCR('ITSP 168349 To MS Smith Barney MQ35 QM') +
   DISCINT(900) +
   HBINT(300) +
   KAINT(AUTO) +
   LOCLADDR(' ') +
   LONGRTY(999999999) +
   LONGTMR(1200) +
   MAXMSGL(4194304) +
   MCANAME(' ') +
   MCATYPE(PROCESS) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PASSWORD(' ') +
   PROPCTL(COMPAT) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SHORTRTY(10) +
   SHORTTMR(60) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) MODENAME(' ') TPNAME(' ') +
   USEDLQ(YES) +
   USERID(' ') +
   XMITQ('MQ35') +
   REPLACE
DEFINE CHANNEL('ABKA.TO.MQ72.BDS.S1') +
   CHLTYPE(SDR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHHB(0) +
   BATCHINT(0) +
   BATCHLIM(5000)  +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   CONNAME('170.74.252.221(16721)') +
   CONVERT(YES) +
   DESCR('ITSP 170923 To MS Smith Barney MQ72 QM') +
   DISCINT(900) +
   HBINT(300) +
   KAINT(AUTO) +
   LOCLADDR(' ') +
   LONGRTY(999999999) +
   LONGTMR(1200) +
   MAXMSGL(4194304) +
   MCANAME(' ') +
   MCATYPE(PROCESS) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PASSWORD(' ') +
   PROPCTL(COMPAT) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SHORTRTY(10) +
   SHORTTMR(60) +
   SSLCIPH('TRIPLE_DES_SHA_US') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) MODENAME(' ') TPNAME(' ') +
   USEDLQ(YES) +
   USERID(' ') +
   XMITQ('MQ72') +
   REPLACE
DEFINE CHANNEL('ABKA.TO.MQD4') +
   CHLTYPE(SDR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHHB(0) +
   BATCHINT(0) +
   BATCHLIM(5000)  +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   CONNAME('mvsa580.bankofny.com(1414)') +
   CONVERT(YES) +
   DESCR('To MQD4') +
   DISCINT(6000) +
   HBINT(300) +
   KAINT(AUTO) +
   LOCLADDR(' ') +
   LONGRTY(999999999) +
   LONGTMR(1200) +
   MAXMSGL(4194304) +
   MCANAME(' ') +
   MCATYPE(PROCESS) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PASSWORD(' ') +
   PROPCTL(COMPAT) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SHORTRTY(10) +
   SHORTTMR(60) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) MODENAME(' ') TPNAME(' ') +
   USEDLQ(YES) +
   USERID(' ') +
   XMITQ('MQD4') +
   REPLACE
DEFINE CHANNEL('ABKA.TO.SQAL') +
   CHLTYPE(SDR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHHB(0) +
   BATCHINT(0) +
   BATCHLIM(5000)  +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   CONNAME('xsd00z75.bankofny.com(1412)') +
   CONVERT(NO) +
   DESCR('To SQAL') +
   DISCINT(6000) +
   HBINT(300) +
   KAINT(AUTO) +
   LOCLADDR(' ') +
   LONGRTY(999999999) +
   LONGTMR(1200) +
   MAXMSGL(4194304) +
   MCANAME(' ') +
   MCATYPE(PROCESS) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PASSWORD(' ') +
   PROPCTL(COMPAT) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SHORTRTY(10) +
   SHORTTMR(60) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) MODENAME(' ') TPNAME(' ') +
   USEDLQ(YES) +
   USERID(' ') +
   XMITQ('SQAL') +
   REPLACE
DEFINE CHANNEL('ABKA.TO.SQLA') +
   CHLTYPE(SDR) +
*  ALTDATE(2014-09-29) +
*  ALTTIME(19.43.25) +
   BATCHHB(0) +
   BATCHINT(0) +
   BATCHLIM(5000)  +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   CONNAME('S036N00.BNYMELLON.NET(1492)') +
   CONVERT(NO) +
   DESCR('To SQLA') +
   DISCINT(6000) +
   HBINT(300) +
   KAINT(AUTO) +
   LOCLADDR(' ') +
   LONGRTY(999999999) +
   LONGTMR(1200) +
   MAXMSGL(4194304) +
   MCANAME(' ') +
   MCATYPE(PROCESS) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PASSWORD(' ') +
   PROPCTL(COMPAT) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(1) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SHORTRTY(10) +
   SHORTTMR(60) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) MODENAME(' ') TPNAME(' ') +
   USEDLQ(YES) +
   USERID(' ') +
   XMITQ('SQLA') +
   REPLACE
DEFINE CHANNEL('ABKA.TO.SQLB') +
   CHLTYPE(SDR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHHB(0) +
   BATCHINT(0) +
   BATCHLIM(5000)  +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   CONNAME('xsd00909.bankofny.com(1491)') +
   CONVERT(NO) +
   DESCR('To SQLB') +
   DISCINT(6000) +
   HBINT(300) +
   KAINT(AUTO) +
   LOCLADDR(' ') +
   LONGRTY(999999999) +
   LONGTMR(1200) +
   MAXMSGL(4194304) +
   MCANAME(' ') +
   MCATYPE(PROCESS) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PASSWORD(' ') +
   PROPCTL(COMPAT) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SHORTRTY(10) +
   SHORTTMR(60) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) MODENAME(' ') TPNAME(' ') +
   USEDLQ(YES) +
   USERID(' ') +
   XMITQ('SQLB') +
   REPLACE
DEFINE CHANNEL('ABKA.TO.SQLD') +
   CHLTYPE(SDR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHHB(0) +
   BATCHINT(0) +
   BATCHLIM(5000)  +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   CONNAME('xsd00935.bankofny.com(1491)') +
   CONVERT(NO) +
   DESCR('To SQLD') +
   DISCINT(6000) +
   HBINT(300) +
   KAINT(AUTO) +
   LOCLADDR(' ') +
   LONGRTY(999999999) +
   LONGTMR(1200) +
   MAXMSGL(4194304) +
   MCANAME(' ') +
   MCATYPE(PROCESS) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PASSWORD(' ') +
   PROPCTL(COMPAT) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SHORTRTY(10) +
   SHORTTMR(60) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) MODENAME(' ') TPNAME(' ') +
   USEDLQ(YES) +
   USERID(' ') +
   XMITQ('SQLD') +
   REPLACE
DEFINE CHANNEL('ABKA.TO.SQLO') +
   CHLTYPE(SDR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHHB(0) +
   BATCHINT(0) +
   BATCHLIM(5000)  +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   CONNAME('xsd00e11.bankofny.com(1491)') +
   CONVERT(NO) +
   DESCR('To SQLO') +
   DISCINT(6000) +
   HBINT(300) +
   KAINT(AUTO) +
   LOCLADDR(' ') +
   LONGRTY(999999999) +
   LONGTMR(1200) +
   MAXMSGL(4194304) +
   MCANAME(' ') +
   MCATYPE(PROCESS) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PASSWORD(' ') +
   PROPCTL(COMPAT) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SHORTRTY(10) +
   SHORTTMR(60) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) MODENAME(' ') TPNAME(' ') +
   USEDLQ(YES) +
   USERID(' ') +
   XMITQ('SQLO') +
   REPLACE
DEFINE CHANNEL('ABKA.TO.SQNA') +
   CHLTYPE(SDR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHHB(0) +
   BATCHINT(0) +
   BATCHLIM(5000)  +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   CONNAME('xsd00e11(1493)') +
   CONVERT(NO) +
   DESCR('To SQNA') +
   DISCINT(6000) +
   HBINT(300) +
   KAINT(AUTO) +
   LOCLADDR(' ') +
   LONGRTY(999999999) +
   LONGTMR(1200) +
   MAXMSGL(4194304) +
   MCANAME(' ') +
   MCATYPE(PROCESS) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PASSWORD(' ') +
   PROPCTL(COMPAT) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SHORTRTY(10) +
   SHORTTMR(60) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) MODENAME(' ') TPNAME(' ') +
   USEDLQ(YES) +
   USERID(' ') +
   XMITQ('SQNA') +
   REPLACE
DEFINE CHANNEL('ABKA.TO.SQND') +
   CHLTYPE(SDR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHHB(0) +
   BATCHINT(0) +
   BATCHLIM(5000)  +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   CONNAME('S088N00(1492)') +
   CONVERT(NO) +
   DESCR('To SQND') +
   DISCINT(6000) +
   HBINT(300) +
   KAINT(AUTO) +
   LOCLADDR(' ') +
   LONGRTY(999999999) +
   LONGTMR(1200) +
   MAXMSGL(4194304) +
   MCANAME(' ') +
   MCATYPE(PROCESS) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PASSWORD(' ') +
   PROPCTL(COMPAT) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(1) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SHORTRTY(10) +
   SHORTTMR(60) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) MODENAME(' ') TPNAME(' ') +
   USEDLQ(YES) +
   USERID(' ') +
   XMITQ('SQND') +
   REPLACE
DEFINE CHANNEL('ABKA.TO.SQUD') +
   CHLTYPE(SDR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHHB(0) +
   BATCHINT(0) +
   BATCHLIM(5000)  +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   CONNAME('S084N00(1491)') +
   CONVERT(NO) +
   DESCR('itsp# 307703') +
   DISCINT(900) +
   HBINT(300) +
   KAINT(AUTO) +
   LOCLADDR(' ') +
   LONGRTY(999999999) +
   LONGTMR(1200) +
   MAXMSGL(4194304) +
   MCANAME(' ') +
   MCATYPE(PROCESS) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PASSWORD(' ') +
   PROPCTL(COMPAT) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SHORTRTY(10) +
   SHORTTMR(60) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) MODENAME(' ') TPNAME(' ') +
   USEDLQ(YES) +
   USERID(' ') +
   XMITQ('SQUD') +
   REPLACE
DEFINE CHANNEL('ABKA.TO.VQDF') +
   CHLTYPE(SDR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHHB(0) +
   BATCHINT(0) +
   BATCHLIM(5000)  +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   CONNAME('kato(1416)') +
   CONVERT(NO) +
   DESCR('To VQDF') +
   DISCINT(6000) +
   HBINT(300) +
   KAINT(AUTO) +
   LOCLADDR(' ') +
   LONGRTY(999999999) +
   LONGTMR(1200) +
   MAXMSGL(4194304) +
   MCANAME(' ') +
   MCATYPE(PROCESS) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PASSWORD(' ') +
   PROPCTL(COMPAT) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SHORTRTY(10) +
   SHORTTMR(60) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) MODENAME(' ') TPNAME(' ') +
   USEDLQ(YES) +
   USERID(' ') +
   XMITQ('VQDF') +
   REPLACE
DEFINE CHANNEL('ABKA.TO.VQDH') +
   CHLTYPE(SDR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHHB(0) +
   BATCHINT(0) +
   BATCHLIM(5000)  +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   CONNAME('zaphod(1418)') +
   CONVERT(NO) +
   DESCR('ITSP # 442525') +
   DISCINT(6000) +
   HBINT(300) +
   KAINT(AUTO) +
   LOCLADDR(' ') +
   LONGRTY(999999999) +
   LONGTMR(1200) +
   MAXMSGL(4194304) +
   MCANAME(' ') +
   MCATYPE(PROCESS) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PASSWORD(' ') +
   PROPCTL(COMPAT) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SHORTRTY(10) +
   SHORTTMR(60) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) MODENAME(' ') TPNAME(' ') +
   USEDLQ(YES) +
   USERID(' ') +
   XMITQ('VQDH') +
   REPLACE
DEFINE CHANNEL('ABKA.TO.VQDN') +
   CHLTYPE(SDR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHHB(0) +
   BATCHINT(0) +
   BATCHLIM(5000)  +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   CONNAME('zaphod.bankofny.com(1474)') +
   CONVERT(NO) +
   DESCR('To VQDN') +
   DISCINT(6000) +
   HBINT(300) +
   KAINT(AUTO) +
   LOCLADDR(' ') +
   LONGRTY(999999999) +
   LONGTMR(1200) +
   MAXMSGL(4194304) +
   MCANAME(' ') +
   MCATYPE(PROCESS) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PASSWORD(' ') +
   PROPCTL(COMPAT) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SHORTRTY(10) +
   SHORTTMR(60) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) MODENAME(' ') TPNAME(' ') +
   USEDLQ(YES) +
   USERID(' ') +
   XMITQ('VQDN') +
   REPLACE
DEFINE CHANNEL('ABKA.TO.VQIH') +
   CHLTYPE(SDR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHHB(0) +
   BATCHINT(0) +
   BATCHLIM(5000)  +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   CONNAME('itehub.bankofny.com(1448)') +
   CONVERT(NO) +
   DESCR('ITSP475986:To VQIH') +
   DISCINT(6000) +
   HBINT(300) +
   KAINT(AUTO) +
   LOCLADDR(' ') +
   LONGRTY(999999999) +
   LONGTMR(1200) +
   MAXMSGL(4194304) +
   MCANAME(' ') +
   MCATYPE(PROCESS) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PASSWORD(' ') +
   PROPCTL(COMPAT) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SHORTRTY(10) +
   SHORTTMR(60) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) MODENAME(' ') TPNAME(' ') +
   USEDLQ(YES) +
   USERID(' ') +
   XMITQ('VQIH') +
   REPLACE
DEFINE CHANNEL('ABKA.TO.VQUN') +
   CHLTYPE(SDR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHHB(0) +
   BATCHINT(0) +
   BATCHLIM(5000)  +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   CONNAME('qafe.bankofny.com(1404)') +
   CONVERT(NO) +
   DESCR('To VQUN') +
   DISCINT(6000) +
   HBINT(300) +
   KAINT(AUTO) +
   LOCLADDR(' ') +
   LONGRTY(999999999) +
   LONGTMR(1200) +
   MAXMSGL(4194304) +
   MCANAME(' ') +
   MCATYPE(PROCESS) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PASSWORD(' ') +
   PROPCTL(COMPAT) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SHORTRTY(10) +
   SHORTTMR(60) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) MODENAME(' ') TPNAME(' ') +
   USEDLQ(YES) +
   USERID(' ') +
   XMITQ('VQUN') +
   REPLACE
DEFINE CHANNEL('ABKA.TO.WQAH') +
   CHLTYPE(SDR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHHB(0) +
   BATCHINT(0) +
   BATCHLIM(5000)  +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   CONNAME('ntsmdpm15023a.mellonbank.com(1418)') +
   CONVERT(NO) +
   DESCR('To WQAH') +
   DISCINT(6000) +
   HBINT(300) +
   KAINT(AUTO) +
   LOCLADDR(' ') +
   LONGRTY(999999999) +
   LONGTMR(1200) +
   MAXMSGL(4194304) +
   MCANAME(' ') +
   MCATYPE(PROCESS) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PASSWORD(' ') +
   PROPCTL(COMPAT) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SHORTRTY(10) +
   SHORTTMR(60) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) MODENAME(' ') TPNAME(' ') +
   USEDLQ(YES) +
   USERID(' ') +
   XMITQ('WQAH') +
   REPLACE
DEFINE CHANNEL('ABKA.TO.WQYB') +
   CHLTYPE(SDR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHHB(0) +
   BATCHINT(0) +
   BATCHLIM(5000)  +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   CONNAME('wsomdwvfhf01(1452)') +
   CONVERT(NO) +
   DESCR('To WQYB') +
   DISCINT(6000) +
   HBINT(300) +
   KAINT(AUTO) +
   LOCLADDR(' ') +
   LONGRTY(999999999) +
   LONGTMR(1200) +
   MAXMSGL(4194304) +
   MCANAME(' ') +
   MCATYPE(PROCESS) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PASSWORD(' ') +
   PROPCTL(COMPAT) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SHORTRTY(10) +
   SHORTTMR(60) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) MODENAME(' ') TPNAME(' ') +
   USEDLQ(YES) +
   USERID(' ') +
   XMITQ('WQYB') +
   REPLACE
DEFINE CHANNEL('ABKA.TO.WQYC') +
   CHLTYPE(SDR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHHB(0) +
   BATCHINT(0) +
   BATCHLIM(5000)  +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   CONNAME('wsomqavvpm01(1453)') +
   CONVERT(NO) +
   DESCR('To WQYC') +
   DISCINT(6000) +
   HBINT(300) +
   KAINT(AUTO) +
   LOCLADDR(' ') +
   LONGRTY(999999999) +
   LONGTMR(1200) +
   MAXMSGL(4194304) +
   MCANAME(' ') +
   MCATYPE(PROCESS) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PASSWORD(' ') +
   PROPCTL(COMPAT) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(1) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SHORTRTY(10) +
   SHORTTMR(60) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) MODENAME(' ') TPNAME(' ') +
   USEDLQ(YES) +
   USERID(' ') +
   XMITQ('WQYC') +
   REPLACE
DEFINE CHANNEL('ABKA.TO.WQYD') +
   CHLTYPE(SDR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHHB(0) +
   BATCHINT(0) +
   BATCHLIM(5000)  +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   CONNAME('WSOMTAPPRA10(1454)') +
   CONVERT(NO) +
   DESCR('To WQYD') +
   DISCINT(6000) +
   HBINT(300) +
   KAINT(AUTO) +
   LOCLADDR(' ') +
   LONGRTY(999999999) +
   LONGTMR(1200) +
   MAXMSGL(4194304) +
   MCANAME(' ') +
   MCATYPE(PROCESS) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PASSWORD(' ') +
   PROPCTL(COMPAT) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SHORTRTY(10) +
   SHORTTMR(60) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) MODENAME(' ') TPNAME(' ') +
   USEDLQ(YES) +
   USERID(' ') +
   XMITQ('WQYD') +
   REPLACE
DEFINE CHANNEL('ABKA.TO.ZMQT') +
   CHLTYPE(SDR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHHB(0) +
   BATCHINT(0) +
   BATCHLIM(5000)  +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   CONNAME('172.30.145.5(1415)') +
   CONVERT(NO) +
   DESCR('To ZMQT, ITSP# 497513') +
   DISCINT(900) +
   HBINT(300) +
   KAINT(AUTO) +
   LOCLADDR(' ') +
   LONGRTY(999999999) +
   LONGTMR(1200) +
   MAXMSGL(4194304) +
   MCANAME(' ') +
   MCATYPE(PROCESS) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PASSWORD(' ') +
   PROPCTL(COMPAT) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SHORTRTY(10) +
   SHORTTMR(60) +
   SSLCIPH('TLS_RSA_WITH_AES_256_CBC_SHA') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) MODENAME(' ') TPNAME(' ') +
   USEDLQ(YES) +
   USERID(' ') +
   XMITQ('ZMQT') +
   REPLACE
DEFINE CHANNEL('ABKA.TSLK.C1') +
   CHLTYPE(SDR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHHB(0) +
   BATCHINT(0) +
   BATCHLIM(5000)  +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   CONNAME('gdshost2(1415)') +
   CONVERT(NO) +
   DESCR('To GDS/TSLK') +
   DISCINT(900) +
   HBINT(300) +
   KAINT(AUTO) +
   LOCLADDR(' ') +
   LONGRTY(999999999) +
   LONGTMR(1200) +
   MAXMSGL(4194304) +
   MCANAME(' ') +
   MCATYPE(PROCESS) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PASSWORD(' ') +
   PROPCTL(COMPAT) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SHORTRTY(10) +
   SHORTTMR(60) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) MODENAME(' ') TPNAME(' ') +
   USEDLQ(YES) +
   USERID(' ') +
   XMITQ('TSLK') +
   REPLACE
DEFINE CHANNEL('ABKA.XLM.BMC') +
   CHLTYPE(SVRCONN) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR('itsp # 497123') +
   DISCINT(0) +
   HBINT(300) +
   KAINT(AUTO) +
   MAXINST(15) +
   MAXINSTC(5) +
   MAXMSGL(4194304) +
   MCAUSER('xlmm02m') +
   MONCHL(QMGR) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SHARECNV(10) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('ABKA.ZMQT.C1') +
   CHLTYPE(SDR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHHB(0) +
   BATCHINT(0) +
   BATCHLIM(5000)  +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   CONNAME('172.30.145.5(1415)') +
   CONVERT(YES) +
   DESCR('ITSP150500:To CitiGroup/SmithBarney/ZMQT') +
   DISCINT(300) +
   HBINT(300) +
   KAINT(AUTO) +
   LOCLADDR(' ') +
   LONGRTY(999999999) +
   LONGTMR(1200) +
   MAXMSGL(4194304) +
   MCANAME(' ') +
   MCATYPE(PROCESS) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PASSWORD(' ') +
   PROPCTL(COMPAT) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SHORTRTY(10) +
   SHORTTMR(60) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) MODENAME(' ') TPNAME(' ') +
   USEDLQ(YES) +
   USERID(' ') +
   XMITQ('ZMQT') +
   REPLACE
DEFINE CHANNEL('ABKA.ZMQT.S1') +
   CHLTYPE(SDR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHHB(0) +
   BATCHINT(0) +
   BATCHLIM(5000)  +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   CONNAME('172.30.145.5(1415)') +
   CONVERT(YES) +
   DESCR('itsp# 505405') +
   DISCINT(900) +
   HBINT(300) +
   KAINT(AUTO) +
   LOCLADDR(' ') +
   LONGRTY(999999999) +
   LONGTMR(1200) +
   MAXMSGL(4194304) +
   MCANAME(' ') +
   MCATYPE(PROCESS) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PASSWORD(' ') +
   PROPCTL(COMPAT) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SHORTRTY(10) +
   SHORTTMR(60) +
   SSLCIPH('TLS_RSA_WITH_AES_256_CBC_SHA') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) MODENAME(' ') TPNAME(' ') +
   USEDLQ(YES) +
   USERID(' ') +
   XMITQ('ZMQT_S1') +
   REPLACE
DEFINE CHANNEL('ABKA.ZMQX.C1') +
   CHLTYPE(SDR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHHB(0) +
   BATCHINT(0) +
   BATCHLIM(5000)  +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   CONNAME('172.30.145.6(1418)') +
   CONVERT(YES) +
   DESCR('ITSP150511:To CitiGroup/SmithBarney/ZMQX') +
   DISCINT(300) +
   HBINT(300) +
   KAINT(AUTO) +
   LOCLADDR(' ') +
   LONGRTY(999999999) +
   LONGTMR(1200) +
   MAXMSGL(4194304) +
   MCANAME(' ') +
   MCATYPE(PROCESS) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PASSWORD(' ') +
   PROPCTL(COMPAT) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SHORTRTY(10) +
   SHORTTMR(60) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) MODENAME(' ') TPNAME(' ') +
   USEDLQ(YES) +
   USERID(' ') +
   XMITQ('ZMQX') +
   REPLACE
DEFINE CHANNEL('ABKA.ZMQX.S1') +
   CHLTYPE(SDR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHHB(0) +
   BATCHINT(0) +
   BATCHLIM(5000)  +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   CONNAME('172.30.145.6(1418)') +
   CONVERT(YES) +
   DESCR('itsp# 490282') +
   DISCINT(900) +
   HBINT(300) +
   KAINT(AUTO) +
   LOCLADDR(' ') +
   LONGRTY(999999999) +
   LONGTMR(1200) +
   MAXMSGL(4194304) +
   MCANAME(' ') +
   MCATYPE(PROCESS) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PASSWORD(' ') +
   PROPCTL(COMPAT) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SHORTRTY(10) +
   SHORTTMR(60) +
   SSLCIPH('TLS_RSA_WITH_AES_256_CBC_SHA') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) MODENAME(' ') TPNAME(' ') +
   USEDLQ(YES) +
   USERID(' ') +
   XMITQ('ZMQX_S1') +
   REPLACE
DEFINE CHANNEL('ABKA_CLIENT') +
   CHLTYPE(SVRCONN) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR(' ') +
   DISCINT(0) +
   HBINT(300) +
   KAINT(AUTO) +
   MAXINST(999999999) +
   MAXINSTC(999999999) +
   MAXMSGL(4194304) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SHARECNV(0) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('ADP_0AB.BNY_ABKA.C1') +
   CHLTYPE(RCVR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR('From ADPSYS0AB') +
   HBINT(300) +
   KAINT(AUTO) +
   MAXMSGL(4194304) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MRDATA(' ') +
   MREXIT(' ') +
   MRRTY(10) +
   MRTMR(1000) +
   MSGDATA('ADP6MSGLOG') +
   MSGEXIT('CHL_RCVEXIT(RCVEXIT)') +
   NPMSPEED(FAST) +
   PUTAUT(DEF) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) +
   USEDLQ(YES) +
   REPLACE
DEFINE CHANNEL('ADP_0B.BNY_ABKA.C1') +
   CHLTYPE(RCVR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR('From ADPSYS0B') +
   HBINT(300) +
   KAINT(AUTO) +
   MAXMSGL(4194304) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MRDATA(' ') +
   MREXIT(' ') +
   MRRTY(10) +
   MRTMR(1000) +
   MSGDATA('ADP3MSGLOG') +
   MSGEXIT('CHL_RCVEXIT(RCVEXIT)') +
   NPMSPEED(FAST) +
   PUTAUT(DEF) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) +
   USEDLQ(YES) +
   REPLACE
DEFINE CHANNEL('ADP_0B.BNY_ABKA.C2') +
   CHLTYPE(RCVR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR('From ADPSYS0B') +
   HBINT(300) +
   KAINT(AUTO) +
   MAXMSGL(4194304) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MRDATA(' ') +
   MREXIT(' ') +
   MRRTY(10) +
   MRTMR(1000) +
   MSGDATA('ADP4MSGLOG') +
   MSGEXIT('CHL_RCVEXIT(RCVEXIT)') +
   NPMSPEED(FAST) +
   PUTAUT(DEF) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) +
   USEDLQ(YES) +
   REPLACE
DEFINE CHANNEL('ADP_0B.BNY_ABKA.C3') +
   CHLTYPE(RCVR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR('From ADPSYS0B') +
   HBINT(300) +
   KAINT(AUTO) +
   MAXMSGL(4194304) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MRDATA(' ') +
   MREXIT(' ') +
   MRRTY(10) +
   MRTMR(1000) +
   MSGDATA('ADP5MSGLOG') +
   MSGEXIT('CHL_RCVEXIT(RCVEXIT)') +
   NPMSPEED(FAST) +
   PUTAUT(DEF) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) +
   USEDLQ(YES) +
   REPLACE
DEFINE CHANNEL('ADP_0C.BNY_ABKA.C1') +
   CHLTYPE(RCVR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR('From ADPSYS0C') +
   HBINT(300) +
   KAINT(AUTO) +
   MAXMSGL(4194304) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MRDATA(' ') +
   MREXIT(' ') +
   MRRTY(10) +
   MRTMR(1000) +
   MSGDATA('ADPCMSGLOG') +
   MSGEXIT('CHL_RCVEXIT(RCVEXIT)') +
   NPMSPEED(FAST) +
   PUTAUT(DEF) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) +
   USEDLQ(YES) +
   REPLACE
DEFINE CHANNEL('ADP_SYS1.BNY_ABKA.C1') +
   CHLTYPE(RCVR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR('From ADPSYS1') +
   HBINT(300) +
   KAINT(AUTO) +
   MAXMSGL(4194304) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MRDATA(' ') +
   MREXIT(' ') +
   MRRTY(10) +
   MRTMR(1000) +
   MSGDATA('ADP1MSGLOG') +
   MSGEXIT('CHL_RCVEXIT(RCVEXIT)') +
   NPMSPEED(FAST) +
   PUTAUT(DEF) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) +
   USEDLQ(YES) +
   REPLACE
DEFINE CHANNEL('ADP_SYS1.BNY_ABKA.C2') +
   CHLTYPE(RCVR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR('From ADPSYS1') +
   HBINT(300) +
   KAINT(AUTO) +
   MAXMSGL(4194304) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MRDATA(' ') +
   MREXIT(' ') +
   MRRTY(10) +
   MRTMR(1000) +
   MSGDATA('ADP2MSGLOG') +
   MSGEXIT('CHL_RCVEXIT(RCVEXIT)') +
   NPMSPEED(FAST) +
   PUTAUT(DEF) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) +
   USEDLQ(YES) +
   REPLACE
DEFINE CHANNEL('ADP_TEST_QM.ABKA.C1') +
   CHLTYPE(RCVR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR('From ADP TEST_QM') +
   HBINT(300) +
   KAINT(AUTO) +
   MAXMSGL(4194304) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MRDATA(' ') +
   MREXIT(' ') +
   MRRTY(10) +
   MRTMR(1000) +
   MSGDATA('ADPBMSGLOG') +
   MSGEXIT('CHL_RCVEXIT(RCVEXIT)') +
   NPMSPEED(FAST) +
   PUTAUT(DEF) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) +
   USEDLQ(YES) +
   REPLACE
DEFINE CHANNEL('AQT3.TO.ABKA') +
   CHLTYPE(RCVR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR('ITSP #227564') +
   HBINT(300) +
   KAINT(AUTO) +
   MAXMSGL(4194304) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MRDATA(' ') +
   MREXIT(' ') +
   MRRTY(10) +
   MRTMR(1000) +
   MSGDATA('AQT3MSGLOG') +
   MSGEXIT('CHL_RCVEXIT(RCVEXIT)') +
   NPMSPEED(FAST) +
   PUTAUT(DEF) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) +
   USEDLQ(YES) +
   REPLACE
DEFINE CHANNEL('ASMPMQI.TO.ABKA') +
   CHLTYPE(RCVR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR('From ASMPMQI') +
   HBINT(300) +
   KAINT(AUTO) +
   MAXMSGL(4194304) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MRDATA(' ') +
   MREXIT(' ') +
   MRRTY(10) +
   MRTMR(1000) +
   MSGDATA('CLS1MSGLOG') +
   MSGEXIT('CHL_RCVEXIT(RCVEXIT)') +
   NPMSPEED(FAST) +
   PUTAUT(DEF) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) +
   USEDLQ(YES) +
   REPLACE
DEFINE CHANNEL('BBHTST.BNY_ABKA.C1') +
   CHLTYPE(RCVR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR('From BBH Test') +
   HBINT(300) +
   KAINT(AUTO) +
   MAXMSGL(4194304) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MRDATA(' ') +
   MREXIT(' ') +
   MRRTY(10) +
   MRTMR(1000) +
   MSGDATA('BBHMSGLOG') +
   MSGEXIT('CHL_RCVEXIT(RCVEXIT)') +
   NPMSPEED(FAST) +
   PUTAUT(DEF) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) +
   USEDLQ(YES) +
   REPLACE
DEFINE CHANNEL('BDSVD2.TO.ABKA') +
   CHLTYPE(RCVR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR('From BDSVD2') +
   HBINT(300) +
   KAINT(AUTO) +
   MAXMSGL(4194304) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MRDATA(' ') +
   MREXIT(' ') +
   MRRTY(10) +
   MRTMR(1000) +
   MSGDATA('BDSMSGLOG') +
   MSGEXIT('CHL_RCVEXIT(RCVEXIT)') +
   NPMSPEED(FAST) +
   PUTAUT(DEF) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) +
   USEDLQ(YES) +
   REPLACE
DEFINE CHANNEL('BMOCMDEV.ABKA.C1') +
   CHLTYPE(RCVR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR('chl for mq proxy BMO to BDS') +
   HBINT(300) +
   KAINT(AUTO) +
   MAXMSGL(4194304) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MRDATA(' ') +
   MREXIT(' ') +
   MRRTY(10) +
   MRTMR(1000) +
   MSGDATA('BMCMMSGLOG') +
   MSGEXIT('CHL_RCVEXIT(RCVEXIT)') +
   NPMSPEED(FAST) +
   PUTAUT(DEF) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) +
   USEDLQ(YES) +
   REPLACE
DEFINE CHANNEL('BMW.COMMAND.CHANNEL') +
   CHLTYPE(SVRCONN) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR('Server-connection channel for BMW Command Center') +
   DISCINT(0) +
   HBINT(300) +
   KAINT(AUTO) +
   MAXINST(999999999) +
   MAXINSTC(999999999) +
   MAXMSGL(4194304) +
   MCAUSER('bmw') +
   MONCHL(QMGR) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SHARECNV(10) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('BNSUATCDS.ABKA.C1') +
   CHLTYPE(RCVR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR('ITSP132661:From Scotia/BNSUATCDS') +
   HBINT(300) +
   KAINT(AUTO) +
   MAXMSGL(4194304) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MRDATA(' ') +
   MREXIT(' ') +
   MRRTY(10) +
   MRTMR(1000) +
   MSGDATA('SCOMSGLOG') +
   MSGEXIT('CHL_RCVEXIT(RCVEXIT)') +
   NPMSPEED(FAST) +
   PUTAUT(DEF) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) +
   USEDLQ(YES) +
   REPLACE
DEFINE CHANNEL('BNY_ABKA.ADP_0AB.C1') +
   CHLTYPE(SDR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHHB(0) +
   BATCHINT(0) +
   BATCHLIM(5000)  +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   CONNAME('172.30.81.152(1415)') +
   CONVERT(YES) +
   DESCR('To ADPSYS0AB') +
   DISCINT(6000) +
   HBINT(300) +
   KAINT(AUTO) +
   LOCLADDR(' ') +
   LONGRTY(999999999) +
   LONGTMR(1200) +
   MAXMSGL(4194304) +
   MCANAME(' ') +
   MCATYPE(PROCESS) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PASSWORD(' ') +
   PROPCTL(COMPAT) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SHORTRTY(10) +
   SHORTTMR(60) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) MODENAME(' ') TPNAME(' ') +
   USEDLQ(YES) +
   USERID(' ') +
   XMITQ('ADPSYS0AB_1') +
   REPLACE
DEFINE CHANNEL('BNY_ABKA.ADP_0B.C1') +
   CHLTYPE(SDR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHHB(0) +
   BATCHINT(0) +
   BATCHLIM(5000)  +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   CONNAME('172.30.81.137(1414)') +
   CONVERT(YES) +
   DESCR('To ADPSYS0B') +
   DISCINT(6000) +
   HBINT(300) +
   KAINT(AUTO) +
   LOCLADDR(' ') +
   LONGRTY(999999999) +
   LONGTMR(1200) +
   MAXMSGL(4194304) +
   MCANAME(' ') +
   MCATYPE(PROCESS) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PASSWORD(' ') +
   PROPCTL(COMPAT) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SHORTRTY(10) +
   SHORTTMR(60) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) MODENAME(' ') TPNAME(' ') +
   USEDLQ(YES) +
   USERID(' ') +
   XMITQ('ADPSYS0B_1') +
   REPLACE
DEFINE CHANNEL('BNY_ABKA.ADP_0B.C2') +
   CHLTYPE(SDR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHHB(0) +
   BATCHINT(0) +
   BATCHLIM(5000)  +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   CONNAME('172.30.81.137(1414)') +
   CONVERT(YES) +
   DESCR('To ADPSYS0B') +
   DISCINT(6000) +
   HBINT(300) +
   KAINT(AUTO) +
   LOCLADDR(' ') +
   LONGRTY(999999999) +
   LONGTMR(1200) +
   MAXMSGL(4194304) +
   MCANAME(' ') +
   MCATYPE(PROCESS) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PASSWORD(' ') +
   PROPCTL(COMPAT) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(1) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SHORTRTY(10) +
   SHORTTMR(60) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) MODENAME(' ') TPNAME(' ') +
   USEDLQ(YES) +
   USERID(' ') +
   XMITQ('ADPSYS0B_2') +
   REPLACE
DEFINE CHANNEL('BNY_ABKA.ADP_0B.C3') +
   CHLTYPE(SDR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHHB(0) +
   BATCHINT(0) +
   BATCHLIM(5000)  +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   CONNAME('173.30.81.137(1414)') +
   CONVERT(YES) +
   DESCR('To ADPSYS0B') +
   DISCINT(6000) +
   HBINT(300) +
   KAINT(AUTO) +
   LOCLADDR(' ') +
   LONGRTY(999999999) +
   LONGTMR(1200) +
   MAXMSGL(4194304) +
   MCANAME(' ') +
   MCATYPE(PROCESS) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PASSWORD(' ') +
   PROPCTL(COMPAT) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(1) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SHORTRTY(10) +
   SHORTTMR(60) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) MODENAME(' ') TPNAME(' ') +
   USEDLQ(YES) +
   USERID(' ') +
   XMITQ('ADPSYS0B_3') +
   REPLACE
DEFINE CHANNEL('BNY_ABKA.ADP_0C.C1') +
   CHLTYPE(SDR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHHB(0) +
   BATCHINT(0) +
   BATCHLIM(5000)  +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   CONNAME('adpsys0chost(1414)') +
   CONVERT(YES) +
   DESCR('To ADPSYS0C') +
   DISCINT(6000) +
   HBINT(300) +
   KAINT(AUTO) +
   LOCLADDR(' ') +
   LONGRTY(999999999) +
   LONGTMR(1200) +
   MAXMSGL(4194304) +
   MCANAME(' ') +
   MCATYPE(PROCESS) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PASSWORD(' ') +
   PROPCTL(COMPAT) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SHORTRTY(10) +
   SHORTTMR(60) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) MODENAME(' ') TPNAME(' ') +
   USEDLQ(YES) +
   USERID(' ') +
   XMITQ('ADPSYS0C_1') +
   REPLACE
DEFINE CHANNEL('BNY_ABKA.ADP_SYS1.C1') +
   CHLTYPE(SDR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHHB(0) +
   BATCHINT(0) +
   BATCHLIM(5000)  +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   CONNAME('172.30.81.151(1414)') +
   CONVERT(YES) +
   DESCR('To ADPSYS1') +
   DISCINT(6000) +
   HBINT(300) +
   KAINT(AUTO) +
   LOCLADDR(' ') +
   LONGRTY(999999999) +
   LONGTMR(1200) +
   MAXMSGL(4194304) +
   MCANAME(' ') +
   MCATYPE(PROCESS) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PASSWORD(' ') +
   PROPCTL(COMPAT) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SHORTRTY(10) +
   SHORTTMR(60) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) MODENAME(' ') TPNAME(' ') +
   USEDLQ(YES) +
   USERID(' ') +
   XMITQ('ADPSYS1_1') +
   REPLACE
DEFINE CHANNEL('BNY_ABKA.ADP_SYS1.C2') +
   CHLTYPE(SDR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHHB(0) +
   BATCHINT(0) +
   BATCHLIM(5000)  +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   CONNAME('172.30.81.151(1414)') +
   CONVERT(YES) +
   DESCR('To ADPSYS1') +
   DISCINT(6000) +
   HBINT(300) +
   KAINT(AUTO) +
   LOCLADDR(' ') +
   LONGRTY(999999999) +
   LONGTMR(1200) +
   MAXMSGL(4194304) +
   MCANAME(' ') +
   MCATYPE(PROCESS) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PASSWORD(' ') +
   PROPCTL(COMPAT) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SHORTRTY(10) +
   SHORTTMR(60) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) MODENAME(' ') TPNAME(' ') +
   USEDLQ(YES) +
   USERID(' ') +
   XMITQ('ADPSYS1_2') +
   REPLACE
DEFINE CHANNEL('BNY_ABKA.BBHTST.C1') +
   CHLTYPE(SDR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHHB(0) +
   BATCHINT(0) +
   BATCHLIM(5000)  +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   CONNAME('bbhhost(1414)') +
   CONVERT(YES) +
   DESCR('To BBH Test') +
   DISCINT(6000) +
   HBINT(300) +
   KAINT(AUTO) +
   LOCLADDR(' ') +
   LONGRTY(999999999) +
   LONGTMR(1200) +
   MAXMSGL(4194304) +
   MCANAME(' ') +
   MCATYPE(PROCESS) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PASSWORD(' ') +
   PROPCTL(COMPAT) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SHORTRTY(10) +
   SHORTTMR(60) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) MODENAME(' ') TPNAME(' ') +
   USEDLQ(YES) +
   USERID(' ') +
   XMITQ('BBHTST') +
   REPLACE
DEFINE CHANNEL('BNY_ABKA.MOR_MQ20.C1') +
   CHLTYPE(SDR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHHB(0) +
   BATCHINT(0) +
   BATCHLIM(5000)  +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   CONNAME('morhost(16201)') +
   CONVERT(YES) +
   DESCR('To Morgan Dean Witter') +
   DISCINT(6000) +
   HBINT(300) +
   KAINT(AUTO) +
   LOCLADDR(' ') +
   LONGRTY(999999999) +
   LONGTMR(1200) +
   MAXMSGL(4194304) +
   MCANAME(' ') +
   MCATYPE(PROCESS) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PASSWORD(' ') +
   PROPCTL(COMPAT) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SHORTRTY(10) +
   SHORTTMR(60) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) MODENAME(' ') TPNAME(' ') +
   USEDLQ(YES) +
   USERID(' ') +
   XMITQ('MQ20_1') +
   REPLACE
DEFINE CHANNEL('BNY_ABKA.MTX_TEST.C1') +
   CHLTYPE(SDR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHHB(0) +
   BATCHINT(0) +
   BATCHLIM(5000)  +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   CONNAME('mtxhost(1414)') +
   CONVERT(NO) +
   DESCR('To MATRIX') +
   DISCINT(6000) +
   HBINT(300) +
   KAINT(AUTO) +
   LOCLADDR(' ') +
   LONGRTY(999999999) +
   LONGTMR(1200) +
   MAXMSGL(4194304) +
   MCANAME(' ') +
   MCATYPE(PROCESS) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PASSWORD(' ') +
   PROPCTL(COMPAT) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SHORTRTY(10) +
   SHORTTMR(60) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) MODENAME(' ') TPNAME(' ') +
   USEDLQ(YES) +
   USERID(' ') +
   XMITQ('MTX_TEST.MQ_MATRIX') +
   REPLACE
DEFINE CHANNEL('BNY_ABKA.RDQ_TREADQ') +
   CHLTYPE(SDR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHHB(0) +
   BATCHINT(0) +
   BATCHLIM(5000)  +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   CONNAME('172.30.131.37(1416)') +
   CONVERT(NO) +
   DESCR('To READQ') +
   DISCINT(6000) +
   HBINT(300) +
   KAINT(AUTO) +
   LOCLADDR(' ') +
   LONGRTY(999999999) +
   LONGTMR(1200) +
   MAXMSGL(4194304) +
   MCANAME(' ') +
   MCATYPE(PROCESS) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PASSWORD(' ') +
   PROPCTL(COMPAT) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SHORTRTY(10) +
   SHORTTMR(60) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) MODENAME(' ') TPNAME(' ') +
   USEDLQ(YES) +
   USERID(' ') +
   XMITQ('RDQ_TREADQ') +
   REPLACE
DEFINE CHANNEL('BNY_ABKA.TDS_TEST.C1') +
   CHLTYPE(SDR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHHB(0) +
   BATCHINT(0) +
   BATCHLIM(5000)  +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   CONNAME('172.30.74.29(1414),172.30.74.168(1414)') +
   CONVERT(YES) +
   DESCR('To TDS') +
   DISCINT(6000) +
   HBINT(300) +
   KAINT(AUTO) +
   LOCLADDR(' ') +
   LONGRTY(999999999) +
   LONGTMR(1200) +
   MAXMSGL(4194304) +
   MCANAME(' ') +
   MCATYPE(PROCESS) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PASSWORD(' ') +
   PROPCTL(COMPAT) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SHORTRTY(10) +
   SHORTTMR(60) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) MODENAME(' ') TPNAME(' ') +
   USEDLQ(YES) +
   USERID(' ') +
   XMITQ('TDS_TDDEV400_1') +
   REPLACE
DEFINE CHANNEL('CIGADPQM_D1.ABKA.C1') +
   CHLTYPE(RCVR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR('From Citadel/CIGADPQM') +
   HBINT(300) +
   KAINT(AUTO) +
   MAXMSGL(4194304) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MRDATA(' ') +
   MREXIT(' ') +
   MRRTY(10) +
   MRTMR(1000) +
   MSGDATA('CITMSGLOG') +
   MSGEXIT('CHL_RCVEXIT(RCVEXIT)') +
   NPMSPEED(FAST) +
   PUTAUT(DEF) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) +
   USEDLQ(YES) +
   REPLACE
DEFINE CHANNEL('GST1ETCPT1.ABKA.C1') +
   CHLTYPE(RCVR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR('From GDS/GST1ETCPT1') +
   HBINT(300) +
   KAINT(AUTO) +
   MAXMSGL(4194304) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MRDATA(' ') +
   MREXIT(' ') +
   MRRTY(10) +
   MRTMR(1000) +
   MSGDATA('GST1MSGLOG') +
   MSGEXIT('CHL_RCVEXIT(RCVEXIT)') +
   NPMSPEED(FAST) +
   PUTAUT(DEF) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) +
   USEDLQ(YES) +
   REPLACE
DEFINE CHANNEL('GST1ETCPT1.ABKA.C2') +
   CHLTYPE(RCVR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR('From GDS/GST1ETCPT1') +
   HBINT(300) +
   KAINT(AUTO) +
   MAXMSGL(4194304) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MRDATA(' ') +
   MREXIT(' ') +
   MRRTY(10) +
   MRTMR(1000) +
   MSGDATA('GST2MSGLOG') +
   MSGEXIT('CHL_RCVEXIT(RCVEXIT)') +
   NPMSPEED(FAST) +
   PUTAUT(DEF) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) +
   USEDLQ(YES) +
   REPLACE
DEFINE CHANNEL('MG5A.TO.ABKA') +
   CHLTYPE(RCVR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR('ITSP# 217321') +
   HBINT(300) +
   KAINT(AUTO) +
   MAXMSGL(4194304) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MRDATA(' ') +
   MREXIT(' ') +
   MRRTY(10) +
   MRTMR(1000) +
   MSGDATA('CMSMSGLOG') +
   MSGEXIT('CHL_RCVEXIT(RCVEXIT)') +
   NPMSPEED(FAST) +
   PUTAUT(DEF) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) +
   USEDLQ(YES) +
   REPLACE
DEFINE CHANNEL('MOR_MQ20.BNY_ABKA.C1') +
   CHLTYPE(RCVR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR('From Morgan Dean Witter') +
   HBINT(300) +
   KAINT(AUTO) +
   MAXMSGL(4194304) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MRDATA(' ') +
   MREXIT(' ') +
   MRRTY(10) +
   MRTMR(1000) +
   MSGDATA('MORMSGLOG') +
   MSGEXIT('CHL_RCVEXIT(RCVEXIT)') +
   NPMSPEED(FAST) +
   PUTAUT(DEF) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) +
   USEDLQ(YES) +
   REPLACE
DEFINE CHANNEL('MQ25.TO.ABKA.BDS.S1') +
   CHLTYPE(RCVR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR('ITSP 168382:From MS Smith Barney MQ25 QM') +
   HBINT(300) +
   KAINT(AUTO) +
   MAXMSGL(4194304) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MRDATA(' ') +
   MREXIT(' ') +
   MRRTY(10) +
   MRTMR(1000) +
   MSGDATA('MQ25MSGLOG') +
   MSGEXIT('CHL_RCVEXIT(RCVEXIT)') +
   NPMSPEED(FAST) +
   PUTAUT(DEF) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) +
   USEDLQ(YES) +
   REPLACE
DEFINE CHANNEL('MQ35.TO.ABKA.BDS.S1') +
   CHLTYPE(RCVR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR('ITSP 168349:From MS Smith Barney MQ35 QM') +
   HBINT(300) +
   KAINT(AUTO) +
   MAXMSGL(4194304) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MRDATA(' ') +
   MREXIT(' ') +
   MRRTY(10) +
   MRTMR(1000) +
   MSGDATA('MQ35MSGLOG') +
   MSGEXIT('CHL_RCVEXIT(RCVEXIT)') +
   NPMSPEED(FAST) +
   PUTAUT(DEF) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) +
   USEDLQ(YES) +
   REPLACE
DEFINE CHANNEL('MQ72.TO.ABKA.BDS.S1') +
   CHLTYPE(RCVR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR('ITSP 170923:From MS Smith Barney MQ72 QM') +
   HBINT(300) +
   KAINT(AUTO) +
   MAXMSGL(4194304) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MRDATA(' ') +
   MREXIT(' ') +
   MRRTY(10) +
   MRTMR(1000) +
   MSGDATA('MQ72MSGLOG') +
   MSGEXIT('CHL_RCVEXIT(RCVEXIT)') +
   NPMSPEED(FAST) +
   PUTAUT(DEF) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH('TRIPLE_DES_SHA_US') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) +
   USEDLQ(YES) +
   REPLACE
DEFINE CHANNEL('MQD4.TO.ABKA') +
   CHLTYPE(RCVR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR('FROM MQD4,ITSP #273767') +
   HBINT(300) +
   KAINT(AUTO) +
   MAXMSGL(4194304) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MRDATA(' ') +
   MREXIT(' ') +
   MRRTY(10) +
   MRTMR(1000) +
   MSGDATA('MQD4MSGLOG') +
   MSGEXIT('CHL_RCVEXIT(RCVEXIT)') +
   NPMSPEED(FAST) +
   PUTAUT(DEF) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) +
   USEDLQ(YES) +
   REPLACE
DEFINE CHANNEL('MQMON') +
   CHLTYPE(SVRCONN) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR(' ') +
   DISCINT(0) +
   HBINT(300) +
   KAINT(AUTO) +
   MAXINST(999999999) +
   MAXINSTC(999999999) +
   MAXMSGL(4194304) +
   MCAUSER('mqmon') +
   MONCHL(QMGR) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SHARECNV(10) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('MQMONITOR') +
   CHLTYPE(SVRCONN) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR('MQMON channels') +
   DISCINT(0) +
   HBINT(300) +
   KAINT(AUTO) +
   MAXINST(999999999) +
   MAXINSTC(999999999) +
   MAXMSGL(4194304) +
   MCAUSER('mqm') +
   MONCHL(QMGR) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SHARECNV(0) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('MQSERV1.ABKA.C1') +
   CHLTYPE(RCVR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR('From LIB/MQSERV1') +
   HBINT(300) +
   KAINT(AUTO) +
   MAXMSGL(4194304) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MRDATA(' ') +
   MREXIT(' ') +
   MRRTY(10) +
   MRTMR(1000) +
   MSGDATA('LIBMSGLOG') +
   MSGEXIT('CHL_RCVEXIT(RCVEXIT)') +
   NPMSPEED(FAST) +
   PUTAUT(DEF) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) +
   USEDLQ(YES) +
   REPLACE
DEFINE CHANNEL('MTX_TEST.BNY_ABKA.C1') +
   CHLTYPE(RCVR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR('From MATRIX') +
   HBINT(300) +
   KAINT(AUTO) +
   MAXMSGL(4194304) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MRDATA(' ') +
   MREXIT(' ') +
   MRRTY(10) +
   MRTMR(1000) +
   MSGDATA('MTXMSGLOG') +
   MSGEXIT('CHL_RCVEXIT(RCVEXIT)') +
   NPMSPEED(FAST) +
   PUTAUT(DEF) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) +
   USEDLQ(YES) +
   REPLACE
DEFINE CHANNEL('NSBSMSDEV.ABKA.C1') +
   CHLTYPE(RCVR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR('ITSP# 206230') +
   HBINT(300) +
   KAINT(AUTO) +
   MAXMSGL(4194304) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MRDATA(' ') +
   MREXIT(' ') +
   MRRTY(10) +
   MRTMR(1000) +
   MSGDATA('NSBMSGLOG') +
   MSGEXIT('CHL_RCVEXIT(RCVEXIT)') +
   NPMSPEED(FAST) +
   PUTAUT(DEF) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SSLCAUTH(OPTIONAL) +
   SSLCIPH('RC4_MD5_US') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) +
   USEDLQ(YES) +
   REPLACE
DEFINE CHANNEL('NYT8.ABKA.S1') +
   CHLTYPE(RCVR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR('ITSP297115:From MorganStanley/NYT8') +
   HBINT(300) +
   KAINT(AUTO) +
   MAXMSGL(4194304) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MRDATA(' ') +
   MREXIT(' ') +
   MRRTY(10) +
   MRTMR(1000) +
   MSGDATA('NYT8MSGLOG') +
   MSGEXIT('CHL_RCVEXIT(RCVEXIT)') +
   NPMSPEED(FAST) +
   PUTAUT(DEF) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH('TLS_RSA_WITH_AES_256_CBC_SHA') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) +
   USEDLQ(YES) +
   REPLACE
DEFINE CHANNEL('NYT8.ABKA.S2') +
   CHLTYPE(RCVR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR('ITSP297115:From MorganStanley/NYT8') +
   HBINT(300) +
   KAINT(AUTO) +
   MAXMSGL(4194304) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MRDATA(' ') +
   MREXIT(' ') +
   MRRTY(10) +
   MRTMR(1000) +
   MSGDATA('NYT8MSGLOG') +
   MSGEXIT('CHL_RCVEXIT(RCVEXIT)') +
   NPMSPEED(FAST) +
   PUTAUT(DEF) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH('TLS_RSA_WITH_AES_256_CBC_SHA') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) +
   USEDLQ(YES) +
   REPLACE
DEFINE CHANNEL('NYT8.ABKA.S3') +
   CHLTYPE(RCVR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR('ITSP316373:From MorganStanley/NYT8') +
   HBINT(300) +
   KAINT(AUTO) +
   MAXMSGL(4194304) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MRDATA(' ') +
   MREXIT(' ') +
   MRRTY(10) +
   MRTMR(1000) +
   MSGDATA('MSWMMSGLOG') +
   MSGEXIT('CHL_RCVEXIT(RCVEXIT)') +
   NPMSPEED(FAST) +
   PUTAUT(DEF) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH('TLS_RSA_WITH_AES_256_CBC_SHA') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) +
   USEDLQ(YES) +
   REPLACE
DEFINE CHANNEL('P3TEST.ABKA.C1') +
   CHLTYPE(RCVR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR('From P3TEST') +
   HBINT(300) +
   KAINT(AUTO) +
   MAXMSGL(4194304) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MRDATA(' ') +
   MREXIT(' ') +
   MRRTY(10) +
   MRTMR(1000) +
   MSGDATA('PH3MSGLOG') +
   MSGEXIT('CHL_RCVEXIT(RCVEXIT)') +
   NPMSPEED(FAST) +
   PUTAUT(DEF) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) +
   USEDLQ(YES) +
   REPLACE
DEFINE CHANNEL('RDQ_TREADQ.BNY_ABKA') +
   CHLTYPE(RCVR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR('From READQ') +
   HBINT(300) +
   KAINT(AUTO) +
   MAXMSGL(4194304) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MRDATA(' ') +
   MREXIT(' ') +
   MRRTY(10) +
   MRTMR(1000) +
   MSGDATA('RDQMSGLOG') +
   MSGEXIT('CHL_RCVEXIT(RCVEXIT)') +
   NPMSPEED(FAST) +
   PUTAUT(DEF) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) +
   USEDLQ(YES) +
   REPLACE
DEFINE CHANNEL('SQAL.TO.ABKA') +
   CHLTYPE(RCVR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR('From SQAL') +
   HBINT(300) +
   KAINT(AUTO) +
   MAXMSGL(4194304) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MRDATA(' ') +
   MREXIT(' ') +
   MRRTY(10) +
   MRTMR(1000) +
   MSGDATA('SQALMSGLOG') +
   MSGEXIT('CHL_RCVEXIT(RCVEXIT)') +
   NPMSPEED(FAST) +
   PUTAUT(DEF) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) +
   USEDLQ(YES) +
   REPLACE
DEFINE CHANNEL('SQLA.TO.ABKA') +
   CHLTYPE(RCVR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR('From SQLA') +
   HBINT(300) +
   KAINT(AUTO) +
   MAXMSGL(4194304) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MRDATA(' ') +
   MREXIT(' ') +
   MRRTY(10) +
   MRTMR(1000) +
   MSGDATA('SQLAMSGLOG') +
   MSGEXIT('CHL_RCVEXIT(RCVEXIT)') +
   NPMSPEED(FAST) +
   PUTAUT(DEF) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) +
   USEDLQ(YES) +
   REPLACE
DEFINE CHANNEL('SQLB.TO.ABKA') +
   CHLTYPE(RCVR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR('From SQLB') +
   HBINT(300) +
   KAINT(AUTO) +
   MAXMSGL(4194304) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MRDATA(' ') +
   MREXIT(' ') +
   MRRTY(10) +
   MRTMR(1000) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PUTAUT(DEF) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) +
   USEDLQ(YES) +
   REPLACE
DEFINE CHANNEL('SQLD.TO.ABKA') +
   CHLTYPE(RCVR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR('From SQLD') +
   HBINT(300) +
   KAINT(AUTO) +
   MAXMSGL(4194304) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MRDATA(' ') +
   MREXIT(' ') +
   MRRTY(10) +
   MRTMR(1000) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PUTAUT(DEF) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) +
   USEDLQ(YES) +
   REPLACE
DEFINE CHANNEL('SQLO.TO.ABKA') +
   CHLTYPE(RCVR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR('From SQLO') +
   HBINT(300) +
   KAINT(AUTO) +
   MAXMSGL(4194304) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MRDATA(' ') +
   MREXIT(' ') +
   MRRTY(10) +
   MRTMR(1000) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PUTAUT(DEF) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) +
   USEDLQ(YES) +
   REPLACE
DEFINE CHANNEL('SQNA.TO.ABKA') +
   CHLTYPE(RCVR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR('From SQNA') +
   HBINT(300) +
   KAINT(AUTO) +
   MAXMSGL(4194304) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MRDATA(' ') +
   MREXIT(' ') +
   MRRTY(10) +
   MRTMR(1000) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PUTAUT(DEF) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) +
   USEDLQ(YES) +
   REPLACE
DEFINE CHANNEL('SQND.TO.ABKA') +
   CHLTYPE(RCVR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR('From SQND') +
   HBINT(300) +
   KAINT(AUTO) +
   MAXMSGL(4194304) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MRDATA(' ') +
   MREXIT(' ') +
   MRRTY(10) +
   MRTMR(1000) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PUTAUT(DEF) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) +
   USEDLQ(YES) +
   REPLACE
DEFINE CHANNEL('SQUD.TO.ABKA') +
   CHLTYPE(RCVR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR('itsp# 307703') +
   HBINT(300) +
   KAINT(AUTO) +
   MAXMSGL(4194304) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MRDATA(' ') +
   MREXIT(' ') +
   MRRTY(10) +
   MRTMR(1000) +
   MSGDATA('SQUDMSGLOG') +
   MSGEXIT('CHL_RCVEXIT(RCVEXIT)') +
   NPMSPEED(FAST) +
   PUTAUT(DEF) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) +
   USEDLQ(YES) +
   REPLACE
DEFINE CHANNEL('SYSTEM.AUTO.RECEIVER') +
   CHLTYPE(RCVR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR('Auto-defined by') +
   HBINT(300) +
   KAINT(AUTO) +
   MAXMSGL(4194304) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MRDATA(' ') +
   MREXIT(' ') +
   MRRTY(10) +
   MRTMR(1000) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PUTAUT(DEF) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) +
   USEDLQ(YES) +
   REPLACE
DEFINE CHANNEL('SYSTEM.AUTO.SVRCONN') +
   CHLTYPE(SVRCONN) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR('Auto-defined by') +
   DISCINT(0) +
   HBINT(300) +
   KAINT(AUTO) +
   MAXINST(999999999) +
   MAXINSTC(999999999) +
   MAXMSGL(4194304) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SHARECNV(10) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('SYSTEM.BKR.CONFIG') +
   CHLTYPE(SVRCONN) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR(' ') +
   DISCINT(0) +
   HBINT(300) +
   KAINT(AUTO) +
   MAXINST(999999999) +
   MAXINSTC(999999999) +
   MAXMSGL(104857600) +
   MCAUSER('mqm') +
   MONCHL(QMGR) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SHARECNV(10) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('SYSTEM.DEF.CLUSRCVR') +
   CHLTYPE(CLUSRCVR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHHB(0) +
   BATCHINT(0) +
   BATCHLIM(5000)  +
   BATCHSZ(50) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLWGHT(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   CONNAME(' ') +
   CONVERT(NO) +
   DESCR(' ') +
   DISCINT(6000) +
   HBINT(300) +
   KAINT(AUTO) +
   LOCLADDR(' ') +
   LONGRTY(999999999) +
   LONGTMR(1200) +
   MAXMSGL(4194304) +
   MCANAME(' ') +
   MCATYPE(THREAD) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MRDATA(' ') +
   MREXIT(' ') +
   MRRTY(10) +
   MRTMR(1000) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NETPRTY(0) +
   NPMSPEED(FAST) +
   PROPCTL(COMPAT) +
   PUTAUT(DEF) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SHORTRTY(10) +
   SHORTTMR(60) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) MODENAME(' ') TPNAME(' ') +
   USEDLQ(YES) +
   REPLACE
DEFINE CHANNEL('SYSTEM.DEF.CLUSSDR') +
   CHLTYPE(CLUSSDR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHHB(0) +
   BATCHINT(0) +
   BATCHLIM(5000)  +
   BATCHSZ(50) +
   CLUSNL(' ') +
   CLUSTER(' ') +
   CLWLPRTY(0) +
   CLWLRANK(0) +
   CLWLWGHT(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   CONNAME(' ') +
   CONVERT(NO) +
   DESCR(' ') +
   DISCINT(6000) +
   HBINT(300) +
   KAINT(AUTO) +
   LOCLADDR(' ') +
   LONGRTY(999999999) +
   LONGTMR(1200) +
   MAXMSGL(4194304) +
   MCANAME(' ') +
   MCATYPE(THREAD) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PASSWORD(' ') +
   PROPCTL(COMPAT) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SHORTRTY(10) +
   SHORTTMR(60) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) MODENAME(' ') TPNAME(' ') +
   USEDLQ(YES) +
   USERID(' ') +
   REPLACE
DEFINE CHANNEL('SYSTEM.DEF.RECEIVER') +
   CHLTYPE(RCVR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR(' ') +
   HBINT(300) +
   KAINT(AUTO) +
   MAXMSGL(4194304) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MRDATA(' ') +
   MREXIT(' ') +
   MRRTY(10) +
   MRTMR(1000) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PUTAUT(DEF) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) +
   USEDLQ(YES) +
   REPLACE
DEFINE CHANNEL('SYSTEM.DEF.REQUESTER') +
   CHLTYPE(RQSTR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   CONNAME(' ') +
   DESCR(' ') +
   HBINT(300) +
   KAINT(AUTO) +
   LOCLADDR(' ') +
   MAXMSGL(4194304) +
   MCANAME(' ') +
   MCATYPE(PROCESS) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MRDATA(' ') +
   MREXIT(' ') +
   MRRTY(10) +
   MRTMR(1000) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PASSWORD(' ') +
   PUTAUT(DEF) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) MODENAME(' ') TPNAME(' ') +
   USEDLQ(YES) +
   USERID(' ') +
   REPLACE
DEFINE CHANNEL('SYSTEM.DEF.SENDER') +
   CHLTYPE(SDR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHHB(0) +
   BATCHINT(0) +
   BATCHLIM(5000)  +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   CONNAME(' ') +
   CONVERT(NO) +
   DESCR(' ') +
   DISCINT(6000) +
   HBINT(300) +
   KAINT(AUTO) +
   LOCLADDR(' ') +
   LONGRTY(999999999) +
   LONGTMR(1200) +
   MAXMSGL(4194304) +
   MCANAME(' ') +
   MCATYPE(PROCESS) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PASSWORD(' ') +
   PROPCTL(COMPAT) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SHORTRTY(10) +
   SHORTTMR(60) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) MODENAME(' ') TPNAME(' ') +
   USEDLQ(YES) +
   USERID(' ') +
   XMITQ(' ') +
   REPLACE
DEFINE CHANNEL('SYSTEM.DEF.SERVER') +
   CHLTYPE(SVR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHHB(0) +
   BATCHINT(0) +
   BATCHLIM(5000)  +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   CONNAME(' ') +
   CONVERT(NO) +
   DESCR(' ') +
   DISCINT(6000) +
   HBINT(300) +
   KAINT(AUTO) +
   LOCLADDR(' ') +
   LONGRTY(999999999) +
   LONGTMR(1200) +
   MAXMSGL(4194304) +
   MCANAME(' ') +
   MCATYPE(PROCESS) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PASSWORD(' ') +
   PROPCTL(COMPAT) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SHORTRTY(10) +
   SHORTTMR(60) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) MODENAME(' ') TPNAME(' ') +
   USEDLQ(YES) +
   USERID(' ') +
   XMITQ(' ') +
   REPLACE
DEFINE CHANNEL('SYSTEM.DEF.SVRCONN') +
   CHLTYPE(SVRCONN) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR(' ') +
   DISCINT(0) +
   HBINT(300) +
   KAINT(AUTO) +
   MAXINST(999999999) +
   MAXINSTC(999999999) +
   MAXMSGL(4194304) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SHARECNV(0) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('TDS_TEST.BNY_ABKA.C1') +
   CHLTYPE(RCVR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR('From TDS') +
   HBINT(300) +
   KAINT(AUTO) +
   MAXMSGL(4194304) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MRDATA(' ') +
   MREXIT(' ') +
   MRRTY(10) +
   MRTMR(1000) +
   MSGDATA('TDSMSGLOG') +
   MSGEXIT('CHL_RCVEXIT(RCVEXIT)') +
   NPMSPEED(FAST) +
   PUTAUT(DEF) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) +
   USEDLQ(YES) +
   REPLACE
DEFINE CHANNEL('TMQM.ABKA.C1') +
   CHLTYPE(RCVR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR('From MKG/TMQM') +
   HBINT(300) +
   KAINT(AUTO) +
   MAXMSGL(4194304) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MRDATA(' ') +
   MREXIT(' ') +
   MRRTY(10) +
   MRTMR(1000) +
   MSGDATA('MKGMSGLOG') +
   MSGEXIT('CHL_RCVEXIT(RCVEXIT)') +
   NPMSPEED(FAST) +
   PUTAUT(DEF) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) +
   USEDLQ(YES) +
   REPLACE
DEFINE CHANNEL('TSLK.ABKA.C1') +
   CHLTYPE(RCVR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR('From GDS/TSLK') +
   HBINT(300) +
   KAINT(AUTO) +
   MAXMSGL(4194304) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MRDATA(' ') +
   MREXIT(' ') +
   MRRTY(10) +
   MRTMR(1000) +
   MSGDATA('TSLKMSGLOG') +
   MSGEXIT('CHL_RCVEXIT(RCVEXIT)') +
   NPMSPEED(FAST) +
   PUTAUT(DEF) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) +
   USEDLQ(YES) +
   REPLACE
DEFINE CHANNEL('VQDF.TO.ABKA') +
   CHLTYPE(RCVR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR('From VQDF') +
   HBINT(300) +
   KAINT(AUTO) +
   MAXMSGL(4194304) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MRDATA(' ') +
   MREXIT(' ') +
   MRRTY(10) +
   MRTMR(1000) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PUTAUT(DEF) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) +
   USEDLQ(YES) +
   REPLACE
DEFINE CHANNEL('VQDH.TO.ABKA') +
   CHLTYPE(RCVR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR('ITSP # 442525') +
   HBINT(300) +
   KAINT(AUTO) +
   MAXMSGL(4194304) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MRDATA(' ') +
   MREXIT(' ') +
   MRRTY(10) +
   MRTMR(1000) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PUTAUT(DEF) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) +
   USEDLQ(YES) +
   REPLACE
DEFINE CHANNEL('VQDN.TO.ABKA') +
   CHLTYPE(RCVR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR('From VQDN') +
   HBINT(300) +
   KAINT(AUTO) +
   MAXMSGL(4194304) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MRDATA(' ') +
   MREXIT(' ') +
   MRRTY(10) +
   MRTMR(1000) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PUTAUT(DEF) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) +
   USEDLQ(YES) +
   REPLACE
DEFINE CHANNEL('VQIH.TO.ABKA') +
   CHLTYPE(RCVR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR('ITSP475986:From VQIH') +
   HBINT(300) +
   KAINT(AUTO) +
   MAXMSGL(4194304) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MRDATA(' ') +
   MREXIT(' ') +
   MRRTY(10) +
   MRTMR(1000) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PUTAUT(DEF) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) +
   USEDLQ(YES) +
   REPLACE
DEFINE CHANNEL('VQLB.TO.ABKA') +
   CHLTYPE(RCVR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR(' ') +
   HBINT(300) +
   KAINT(AUTO) +
   MAXMSGL(4194304) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MRDATA(' ') +
   MREXIT(' ') +
   MRRTY(10) +
   MRTMR(1000) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PUTAUT(DEF) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) +
   USEDLQ(YES) +
   REPLACE
DEFINE CHANNEL('VQUN.TO.ABKA') +
   CHLTYPE(RCVR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR('From VQUN') +
   HBINT(300) +
   KAINT(AUTO) +
   MAXMSGL(4194304) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MRDATA(' ') +
   MREXIT(' ') +
   MRRTY(10) +
   MRTMR(1000) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PUTAUT(DEF) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) +
   USEDLQ(YES) +
   REPLACE
DEFINE CHANNEL('WQAH.TO.ABKA') +
   CHLTYPE(RCVR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR('From WQAH') +
   HBINT(300) +
   KAINT(AUTO) +
   MAXMSGL(4194304) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MRDATA(' ') +
   MREXIT(' ') +
   MRRTY(10) +
   MRTMR(1000) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PUTAUT(DEF) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) +
   USEDLQ(YES) +
   REPLACE
DEFINE CHANNEL('WQYB.TO.ABKA') +
   CHLTYPE(RCVR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR('From WQYB') +
   HBINT(300) +
   KAINT(AUTO) +
   MAXMSGL(4194304) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MRDATA(' ') +
   MREXIT(' ') +
   MRRTY(10) +
   MRTMR(1000) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PUTAUT(DEF) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) +
   USEDLQ(YES) +
   REPLACE
DEFINE CHANNEL('WQYC.TO.ABKA') +
   CHLTYPE(RCVR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR('From WQYC') +
   HBINT(300) +
   KAINT(AUTO) +
   MAXMSGL(4194304) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MRDATA(' ') +
   MREXIT(' ') +
   MRRTY(10) +
   MRTMR(1000) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PUTAUT(DEF) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) +
   USEDLQ(YES) +
   REPLACE
DEFINE CHANNEL('WQYD.TO.ABKA') +
   CHLTYPE(RCVR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR('From WQYD') +
   HBINT(300) +
   KAINT(AUTO) +
   MAXMSGL(4194304) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MRDATA(' ') +
   MREXIT(' ') +
   MRRTY(10) +
   MRTMR(1000) +
   MSGDATA(' ') +
   MSGEXIT(' ') +
   NPMSPEED(FAST) +
   PUTAUT(DEF) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) +
   USEDLQ(YES) +
   REPLACE
DEFINE CHANNEL('ZMQT.ABKA.C1') +
   CHLTYPE(RCVR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR('ITSP150500:From CitiGroup/SmithBarney/ZMQT') +
   HBINT(300) +
   KAINT(AUTO) +
   MAXMSGL(4194304) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MRDATA(' ') +
   MREXIT(' ') +
   MRRTY(10) +
   MRTMR(1000) +
   MSGDATA('ZMQTMSGLOG') +
   MSGEXIT('CHL_RCVEXIT(RCVEXIT)') +
   NPMSPEED(FAST) +
   PUTAUT(DEF) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) +
   USEDLQ(YES) +
   REPLACE
DEFINE CHANNEL('ZMQT.ABKA.S1') +
   CHLTYPE(RCVR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR('itsp# 505405') +
   HBINT(300) +
   KAINT(AUTO) +
   MAXMSGL(4194304) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MRDATA(' ') +
   MREXIT(' ') +
   MRRTY(10) +
   MRTMR(1000) +
   MSGDATA('ZMQTMSGLOG') +
   MSGEXIT('CHL_RCVEXIT(RCVEXIT)') +
   NPMSPEED(FAST) +
   PUTAUT(DEF) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH('TLS_RSA_WITH_AES_256_CBC_SHA') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) +
   USEDLQ(YES) +
   REPLACE
DEFINE CHANNEL('ZMQT.TO.ABKA') +
   CHLTYPE(RCVR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR('From ZMQT, ITSP# 497513') +
   HBINT(300) +
   KAINT(AUTO) +
   MAXMSGL(4194304) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MRDATA(' ') +
   MREXIT(' ') +
   MRRTY(10) +
   MRTMR(1000) +
   MSGDATA('ZMQTMSGLOG') +
   MSGEXIT('CHL_RCVEXIT(RCVEXIT)') +
   NPMSPEED(FAST) +
   PUTAUT(DEF) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH('TLS_RSA_WITH_AES_256_CBC_SHA') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) +
   USEDLQ(YES) +
   REPLACE
DEFINE CHANNEL('ZMQX.ABKA.C1') +
   CHLTYPE(RCVR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR('ITSP150511:From CitiGroup/SmithBarney/ZMQX') +
   HBINT(300) +
   KAINT(AUTO) +
   MAXMSGL(4194304) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MRDATA(' ') +
   MREXIT(' ') +
   MRRTY(10) +
   MRTMR(1000) +
   MSGDATA('ZMQXMSGLOG') +
   MSGEXIT('CHL_RCVEXIT(RCVEXIT)') +
   NPMSPEED(FAST) +
   PUTAUT(DEF) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) +
   USEDLQ(YES) +
   REPLACE
DEFINE CHANNEL('ZMQX.ABKA.S1') +
   CHLTYPE(RCVR) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BATCHSZ(50) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   DESCR('itsp# 490282') +
   HBINT(300) +
   KAINT(AUTO) +
   MAXMSGL(4194304) +
   MCAUSER(' ') +
   MONCHL(QMGR) +
   MRDATA(' ') +
   MREXIT(' ') +
   MRRTY(10) +
   MRTMR(1000) +
   MSGDATA('CSNEMSGLOG') +
   MSGEXIT('CHL_RCVEXIT(RCVEXIT)') +
   NPMSPEED(FAST) +
   PUTAUT(DEF) +
   RCVDATA(' ') +
   RCVEXIT(' ') +
*  RESETSEQ(NO) +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SEQWRAP(999999999) +
   SSLCAUTH(REQUIRED) +
   SSLCIPH('TLS_RSA_WITH_AES_256_CBC_SHA') +
   SSLPEER(' ') +
   STATCHL(QMGR) +
   TRPTYPE(TCP) +
   USEDLQ(YES) +
   REPLACE
DEFINE CHANNEL('SYSTEM.DEF.CLNTCONN') +
   CHLTYPE(CLNTCONN) +
   AFFINITY(PREFERRED) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(03.22.48) +
   CLNTWGHT(0) +
   COMPHDR(NONE) +
   COMPMSG(NONE) +
   CONNAME(' ') +
   DEFRECON(NO) +
   DESCR(' ') +
   HBINT(300) +
   KAINT(AUTO) +
   LOCLADDR(' ') +
   MAXMSGL(4194304) +
   PASSWORD(' ') +
   QMNAME(' ') +
   RCVDATA(' ') +
   RCVEXIT(' ') +
   SCYDATA(' ') +
   SCYEXIT(' ') +
   SENDDATA(' ') +
   SENDEXIT(' ') +
   SHARECNV(10) +
   SSLCIPH(' ') +
   SSLPEER(' ') +
   TRPTYPE(TCP) MODENAME(' ') TPNAME(' ') +
   USERID(' ') +
   REPLACE
SET AUTHREC +
   PROFILE('ABJA.TO.ABKA') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.ADP_TEST_QM.C1') +
   GROUP('dbmc') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.ADP_TEST_QM.C1') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.BDC.BMC.BGM') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.BDC.BMC.FED') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.BDC.BMC.FTS') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.BDC.CLNT') +
   GROUP('dbmc') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.BDC.CLNT') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.BDC.DRE') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.BMC.CLNT') +
   GROUP('disp') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.BMC.CLNT') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.BMOCMDEV.C1') +
   GROUP('ymgdb2') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.BMOCMDEV.C1') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.BNSUATCDS.C1') +
   GROUP('ymgmq') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.BNSUATCDS.C1') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.CIGADPQM_D1.C1') +
   GROUP('ymgmq') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.CIGADPQM_D1.C1') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.GSC.BMC') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.GSC.BMC.FTS') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.GSC.BMC.RPO') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.GSC.CLNT') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.GST1ETCPT1.C1') +
   GROUP('ymgmq') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.GST1ETCPT1.C1') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.GST1ETCPT1.C2') +
   GROUP('ymgmq') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.GST1ETCPT1.C2') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.KMS.BMC') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.MQSERV1.C1') +
   GROUP('ymgmq') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.MQSERV1.C1') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.NSBSMSDEV.C1') +
   GROUP('ymgmq') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.NSBSMSDEV.C1') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.NYT8.S1') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.NYT8.S2') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.NYT8.S3') +
   GROUP('ymgmq') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.NYT8.S3') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.P3TEST.C1') +
   GROUP('ymgmq') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.P3TEST.C1') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.PRA.CLNT') +
   GROUP('ymgmq') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.PRA.CLNT') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.SSE.BMC') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.SSE.BMC') +
   GROUP('w5rsse') +
   OBJTYPE(CHANNEL) +
   AUTHADD(DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.TMQM.C1') +
   GROUP('ymgmq') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.TMQM.C1') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.TO.ABDA') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.TO.ABJA') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.TO.ABUA') +
   GROUP('dbmc') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.TO.ABUA') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.TO.AQT3') +
   GROUP('yeciss') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.TO.AQT3') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.TO.ASMPMQI') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.TO.BDSVD2') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.TO.MG5A') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.TO.MQ25.BDS.S1') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.TO.MQ35.BDS.S1') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.TO.MQ72.BDS.S1') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.TO.MQD4') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.TO.SQAL') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.TO.SQLA') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.TO.SQLB') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.TO.SQLD') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.TO.SQLO') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.TO.SQNA') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.TO.SQND') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.TO.SQUD') +
   GROUP('ymgmq') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.TO.SQUD') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.TO.VQDF') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.TO.VQDH') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.TO.VQDN') +
   GROUP('ymgmq') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.TO.VQDN') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.TO.VQIH') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.TO.VQUN') +
   GROUP('ymgmq') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.TO.VQUN') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.TO.WQAH') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.TO.WQYB') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.TO.WQYC') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.TO.WQYD') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.TO.ZMQT') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.TSLK.C1') +
   GROUP('ymgmq') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.TSLK.C1') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.XLM.BMC') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.ZMQT.C1') +
   GROUP('ymgmq') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.ZMQT.C1') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.ZMQT.S1') +
   GROUP('ymgmq') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.ZMQT.S1') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.ZMQX.C1') +
   GROUP('ymgmq') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.ZMQX.C1') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.ZMQX.S1') +
   GROUP('ymgmq') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA.ZMQX.S1') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA_CLIENT') +
   GROUP('disp') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ABKA_CLIENT') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ADP_0AB.BNY_ABKA.C1') +
   GROUP('disp') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ADP_0AB.BNY_ABKA.C1') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ADP_0B.BNY_ABKA.C1') +
   GROUP('disp') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ADP_0B.BNY_ABKA.C1') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ADP_0B.BNY_ABKA.C2') +
   GROUP('disp') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ADP_0B.BNY_ABKA.C2') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ADP_0B.BNY_ABKA.C3') +
   GROUP('disp') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ADP_0B.BNY_ABKA.C3') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ADP_0C.BNY_ABKA.C1') +
   GROUP('disp') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ADP_0C.BNY_ABKA.C1') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ADP_SYS1.BNY_ABKA.C1') +
   GROUP('disp') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ADP_SYS1.BNY_ABKA.C1') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ADP_SYS1.BNY_ABKA.C2') +
   GROUP('disp') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ADP_SYS1.BNY_ABKA.C2') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ADP_TEST_QM.ABKA.C1') +
   GROUP('dbmc') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ADP_TEST_QM.ABKA.C1') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('AQT3.TO.ABKA') +
   GROUP('yeciss') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('AQT3.TO.ABKA') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ASMPMQI.TO.ABKA') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('BBHTST.BNY_ABKA.C1') +
   GROUP('disp') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('BBHTST.BNY_ABKA.C1') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('BDSVD2.TO.ABKA') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('BMOCMDEV.ABKA.C1') +
   GROUP('ymgdb2') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('BMOCMDEV.ABKA.C1') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('BMW.COMMAND.CHANNEL') +
   GROUP('disp') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('BMW.COMMAND.CHANNEL') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('BNSUATCDS.ABKA.C1') +
   GROUP('ymgmq') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('BNSUATCDS.ABKA.C1') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('BNY_ABKA.ADP_0AB.C1') +
   GROUP('disp') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('BNY_ABKA.ADP_0AB.C1') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('BNY_ABKA.ADP_0B.C1') +
   GROUP('disp') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('BNY_ABKA.ADP_0B.C1') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('BNY_ABKA.ADP_0B.C2') +
   GROUP('disp') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('BNY_ABKA.ADP_0B.C2') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('BNY_ABKA.ADP_0B.C3') +
   GROUP('disp') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('BNY_ABKA.ADP_0B.C3') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('BNY_ABKA.ADP_0C.C1') +
   GROUP('disp') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('BNY_ABKA.ADP_0C.C1') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('BNY_ABKA.ADP_SYS1.C1') +
   GROUP('disp') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('BNY_ABKA.ADP_SYS1.C1') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('BNY_ABKA.ADP_SYS1.C2') +
   GROUP('disp') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('BNY_ABKA.ADP_SYS1.C2') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('BNY_ABKA.BBHTST.C1') +
   GROUP('disp') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('BNY_ABKA.BBHTST.C1') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('BNY_ABKA.MOR_MQ20.C1') +
   GROUP('disp') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('BNY_ABKA.MOR_MQ20.C1') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('BNY_ABKA.MTX_TEST.C1') +
   GROUP('disp') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('BNY_ABKA.MTX_TEST.C1') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('BNY_ABKA.RDQ_TREADQ') +
   GROUP('disp') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('BNY_ABKA.RDQ_TREADQ') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('BNY_ABKA.TDS_TEST.C1') +
   GROUP('disp') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('BNY_ABKA.TDS_TEST.C1') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('CIGADPQM_D1.ABKA.C1') +
   GROUP('ymgmq') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('CIGADPQM_D1.ABKA.C1') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('GST1ETCPT1.ABKA.C1') +
   GROUP('ymgmq') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('GST1ETCPT1.ABKA.C1') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('GST1ETCPT1.ABKA.C2') +
   GROUP('ymgmq') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('GST1ETCPT1.ABKA.C2') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('MG5A.TO.ABKA') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('MOR_MQ20.BNY_ABKA.C1') +
   GROUP('disp') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('MOR_MQ20.BNY_ABKA.C1') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('MQ25.TO.ABKA.BDS.S1') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('MQ35.TO.ABKA.BDS.S1') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('MQ72.TO.ABKA.BDS.S1') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('MQD4.TO.ABKA') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('MQMON') +
   GROUP('disp') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('MQMON') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('MQMONITOR') +
   GROUP('disp') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('MQMONITOR') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('MQSERV1.ABKA.C1') +
   GROUP('ymgmq') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('MQSERV1.ABKA.C1') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('MTX_TEST.BNY_ABKA.C1') +
   GROUP('disp') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('MTX_TEST.BNY_ABKA.C1') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('NSBSMSDEV.ABKA.C1') +
   GROUP('ymgmq') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('NSBSMSDEV.ABKA.C1') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('NYT8.ABKA.S1') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('NYT8.ABKA.S2') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('NYT8.ABKA.S3') +
   GROUP('ymgmq') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('NYT8.ABKA.S3') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('P3TEST.ABKA.C1') +
   GROUP('ymgmq') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('P3TEST.ABKA.C1') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('RDQ_TREADQ.BNY_ABKA') +
   GROUP('disp') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('RDQ_TREADQ.BNY_ABKA') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('SQAL.TO.ABKA') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('SQLA.TO.ABKA') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('SQLB.TO.ABKA') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('SQLD.TO.ABKA') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('SQLO.TO.ABKA') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('SQNA.TO.ABKA') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('SQND.TO.ABKA') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('SQUD.TO.ABKA') +
   GROUP('ymgmq') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('SQUD.TO.ABKA') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('SYSTEM.AUTO.RECEIVER') +
   GROUP('mqbrkrs') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('SYSTEM.AUTO.RECEIVER') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('SYSTEM.AUTO.SVRCONN') +
   GROUP('mqbrkrs') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('SYSTEM.AUTO.SVRCONN') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('SYSTEM.BKR.CONFIG') +
   GROUP('mqbrkrs') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('SYSTEM.BKR.CONFIG') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('SYSTEM.DEF.CLUSRCVR') +
   GROUP('mqbrkrs') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('SYSTEM.DEF.CLUSRCVR') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('SYSTEM.DEF.CLUSSDR') +
   GROUP('mqbrkrs') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('SYSTEM.DEF.CLUSSDR') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('SYSTEM.DEF.RECEIVER') +
   GROUP('mqbrkrs') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('SYSTEM.DEF.RECEIVER') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('SYSTEM.DEF.REQUESTER') +
   GROUP('mqbrkrs') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('SYSTEM.DEF.REQUESTER') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('SYSTEM.DEF.SENDER') +
   GROUP('mqbrkrs') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('SYSTEM.DEF.SENDER') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('SYSTEM.DEF.SENDER') +
   GROUP('disp') +
   OBJTYPE(CHANNEL) +
   AUTHADD(NONE)
SET AUTHREC +
   PROFILE('SYSTEM.DEF.SERVER') +
   GROUP('mqbrkrs') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('SYSTEM.DEF.SERVER') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('SYSTEM.DEF.SVRCONN') +
   GROUP('mqbrkrs') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('SYSTEM.DEF.SVRCONN') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('TDS_TEST.BNY_ABKA.C1') +
   GROUP('disp') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('TDS_TEST.BNY_ABKA.C1') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('TMQM.ABKA.C1') +
   GROUP('ymgmq') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('TMQM.ABKA.C1') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('TSLK.ABKA.C1') +
   GROUP('ymgmq') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('TSLK.ABKA.C1') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('VQDF.TO.ABKA') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('VQDH.TO.ABKA') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('VQDN.TO.ABKA') +
   GROUP('ymgmq') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('VQDN.TO.ABKA') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('VQIH.TO.ABKA') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('VQLB.TO.ABKA') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('VQUN.TO.ABKA') +
   GROUP('ymgmq') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('VQUN.TO.ABKA') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('WQAH.TO.ABKA') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('WQYB.TO.ABKA') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('WQYC.TO.ABKA') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('WQYD.TO.ABKA') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ZMQT.ABKA.C1') +
   GROUP('ymgmq') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ZMQT.ABKA.C1') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ZMQT.ABKA.S1') +
   GROUP('ymgmq') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ZMQT.ABKA.S1') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ZMQT.TO.ABKA') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ZMQX.ABKA.C1') +
   GROUP('ymgmq') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ZMQX.ABKA.C1') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ZMQX.ABKA.S1') +
   GROUP('ymgmq') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('ZMQX.ABKA.S1') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
DEFINE AUTHINFO('SYSTEM.DEFAULT.AUTHINFO.OCSP') +
   AUTHTYPE(OCSP) +
   OCSPURL(' ') +
   DESCR(' ') +
*  ALTDATE(2010-07-23) +
*  ALTTIME(22.54.16) +
   REPLACE
DEFINE AUTHINFO('SYSTEM.DEFAULT.AUTHINFO.CRLLDAP') +
   AUTHTYPE(CRLLDAP) +
   CONNAME(' ') +
   LDAPUSER(' ') +
   LDAPPWD(' ') +
   DESCR(' ') +
*  ALTDATE(2010-04-09) +
*  ALTTIME(13.38.02) +
   REPLACE
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.AUTHINFO.OCSP') +
   GROUP('mqbrkrs') +
   OBJTYPE(AUTHINFO) +
   AUTHADD(CHG,DLT,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.AUTHINFO.OCSP') +
   GROUP('mqm') +
   OBJTYPE(AUTHINFO) +
   AUTHADD(CHG,DLT,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.AUTHINFO.CRLLDAP') +
   GROUP('mqbrkrs') +
   OBJTYPE(AUTHINFO) +
   AUTHADD(CHG,DLT,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.AUTHINFO.CRLLDAP') +
   GROUP('mqm') +
   OBJTYPE(AUTHINFO) +
   AUTHADD(CHG,DLT,DSP,INQ)
DEFINE LISTENER('LISTEN1') TRPTYPE(TCP) CONTROL(QMGR) +
   PORT(1491) +
   IPADDR(' ') +
   BACKLOG(400) +
   DESCR('Listener #1 for ABKA') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.45) +
   REPLACE
DEFINE LISTENER('SYSTEM.DEFAULT.LISTENER.TCP') TRPTYPE(TCP) CONTROL(MANUAL) +
   PORT(0) +
   IPADDR(' ') +
   BACKLOG(0) +
   DESCR(' ') +
*  ALTDATE(2010-04-09) +
*  ALTTIME(13.38.02) +
   REPLACE
SET AUTHREC +
   PROFILE('LISTEN1') +
   GROUP('disp') +
   OBJTYPE(LISTENER) +
   AUTHADD(CHG,DLT,DSP,CTRL)
SET AUTHREC +
   PROFILE('LISTEN1') +
   GROUP('mqm') +
   OBJTYPE(LISTENER) +
   AUTHADD(CHG,DLT,DSP,CTRL)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.LISTENER.TCP') +
   GROUP('mqbrkrs') +
   OBJTYPE(LISTENER) +
   AUTHADD(CHG,DLT,DSP,CTRL)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.LISTENER.TCP') +
   GROUP('mqm') +
   OBJTYPE(LISTENER) +
   AUTHADD(CHG,DLT,DSP,CTRL)
DEFINE SERVICE('DLQMON') +
   CONTROL(QMGR) +
   SERVTYPE(SERVER) +
   STARTCMD('+MQ_DATA_PATH+/ispbin/mqmdlqmo') +
   STARTARG('+QMNAME+.DEAD.QUEUE +QMNAME+') +
   STOPCMD('+MQ_INSTALL_PATH+/bin/amqsstop') +
   STOPARG('-m +QMNAME+ -p +MQ_SERVER_PID+') +
   STDOUT('+MQ_DATA_PATH+/qmgrs/+QMNAME+/errors/dlqmon.out') +
   STDERR(' ') +
   DESCR('Dead Letter Queue Monitor Service') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.45) +
   REPLACE
DEFINE SERVICE('SYSTEM.BROKER') +
   CONTROL(MANUAL) +
   SERVTYPE(SERVER) +
   STARTCMD('/usr/mqm/bin/runmqbrk') +
   STARTARG('-m ABKA') +
   STOPCMD('/usr/mqm/bin/endmqbrk') +
   STOPARG('-m ABKA') +
   STDOUT(' ') +
   STDERR(' ') +
   DESCR('Publish/Subscribe') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.45) +
   REPLACE
DEFINE SERVICE('SYSTEM.DEFAULT.SERVICE') +
   CONTROL(MANUAL) +
   SERVTYPE(COMMAND) +
   STARTCMD(' ') +
   STARTARG(' ') +
   STOPCMD(' ') +
   STOPARG(' ') +
   STDOUT(' ') +
   STDERR(' ') +
   DESCR(' ') +
*  ALTDATE(2010-04-09) +
*  ALTTIME(13.38.02) +
   REPLACE
DEFINE SERVICE('TRGMON') +
   CONTROL(QMGR) +
   SERVTYPE(SERVER) +
   STARTCMD('+MQ_INSTALL_PATH+/bin/runmqtrm') +
   STARTARG('-m +QMNAME+ -q +INITQ+') +
   STOPCMD('+MQ_INSTALL_PATH+/bin/amqsstop') +
   STOPARG('-m +QMNAME+ -p +MQ_SERVER_PID+') +
   STDOUT('+MQ_DATA_PATH+/qmgrs/+QMNAME+/errors/trgmon.out') +
   STDERR(' ') +
   DESCR('Trigger Monitor Service') +
*  ALTDATE(2010-03-02) +
*  ALTTIME(14.12.45) +
   REPLACE
SET AUTHREC +
   PROFILE('DLQMON') +
   GROUP('disp') +
   OBJTYPE(SERVICE) +
   AUTHADD(CHG,DLT,DSP,CTRL)
SET AUTHREC +
   PROFILE('DLQMON') +
   GROUP('mqm') +
   OBJTYPE(SERVICE) +
   AUTHADD(CHG,DLT,DSP,CTRL)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER') +
   GROUP('mqbrkrs') +
   OBJTYPE(SERVICE) +
   AUTHADD(CHG,DLT,DSP,CTRL)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER') +
   GROUP('mqm') +
   OBJTYPE(SERVICE) +
   AUTHADD(CHG,DLT,DSP,CTRL)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.SERVICE') +
   GROUP('mqbrkrs') +
   OBJTYPE(SERVICE) +
   AUTHADD(CHG,DLT,DSP,CTRL)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.SERVICE') +
   GROUP('mqm') +
   OBJTYPE(SERVICE) +
   AUTHADD(CHG,DLT,DSP,CTRL)
SET AUTHREC +
   PROFILE('TRGMON') +
   GROUP('disp') +
   OBJTYPE(SERVICE) +
   AUTHADD(CHG,DLT,DSP,CTRL)
SET AUTHREC +
   PROFILE('TRGMON') +
   GROUP('mqm') +
   OBJTYPE(SERVICE) +
   AUTHADD(CHG,DLT,DSP,CTRL)
DEFINE COMMINFO('SYSTEM.DEFAULT.COMMINFO.MULTICAST') +
   TYPE(MULTICAST) +
   DESCR(' ') +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   BRIDGE(ENABLED) +
   CCSID(ASPUB) +
   COMMEV(DISABLED) +
   ENCODING(ASPUB) +
   GRPADDR('239.0.0.0') +
   MCHBINT(2000) +
   MCPROP(ALL) +
   MONINT(60) +
   MSGHIST(100) +
   NSUBHIST(NONE) +
   PORT(1414) +
   REPLACE
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.COMMINFO.MULTICAST') +
   GROUP('mqm') +
   OBJTYPE(COMMINFO) +
   AUTHADD(CHG,DLT,DSP)
DEFINE TOPIC('MSIL_TO_BONY_RPO.TOPIC') +
   TYPE(LOCAL) +
   TOPICSTR('MSIL_TO_BONY_RPO') +
   DESCR('ITSP#469178') +
   CLUSTER(' ') +
   DURSUB(ASPARENT) +
   PUB(ASPARENT) +
   SUB(ASPARENT) +
   DEFPSIST(ASPARENT) +
   DEFPRTY(ASPARENT) +
   DEFPRESP(ASPARENT) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   PMSGDLV(ASPARENT) +
   NPMSGDLV(ASPARENT) +
   PUBSCOPE(ASPARENT) +
   SUBSCOPE(ASPARENT) +
   PROXYSUB(FIRSTUSE) +
   WILDCARD(PASSTHRU) +
   MDURMDL(' ') +
   MNDURMDL(' ') +
   MCAST(ASPARENT) +
   COMMINFO(' ') +
   USEDLQ(ASPARENT) +
   CUSTOM(' ') +
   REPLACE
DEFINE TOPIC('SYSTEM.BASE.TOPIC') +
   TYPE(LOCAL) +
   TOPICSTR('') +
   DESCR('Base topic for resolving attributes') +
   CLUSTER(' ') +
   DURSUB(YES) +
   PUB(ENABLED) +
   SUB(ENABLED) +
   DEFPSIST(NO) +
   DEFPRTY(0) +
   DEFPRESP(SYNC) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   PMSGDLV(ALLDUR) +
   NPMSGDLV(ALLAVAIL) +
   PUBSCOPE(ALL) +
   SUBSCOPE(ALL) +
   PROXYSUB(FIRSTUSE) +
   WILDCARD(PASSTHRU) +
   MDURMDL('SYSTEM.DURABLE.MODEL.QUEUE') +
   MNDURMDL('SYSTEM.NDURABLE.MODEL.QUEUE') +
   MCAST(DISABLED) +
   COMMINFO('SYSTEM.DEFAULT.COMMINFO.MULTICAST') +
   USEDLQ(YES) +
   CUSTOM(' ') +
   REPLACE
DEFINE TOPIC('SYSTEM.BROKER.ADMIN.STREAM') +
   TYPE(LOCAL) +
   TOPICSTR('SYSTEM.BROKER.ADMIN.STREAM') +
   DESCR('Admin stream for queued Pub/Sub interface') +
   CLUSTER(' ') +
   DURSUB(ASPARENT) +
   PUB(ASPARENT) +
   SUB(ASPARENT) +
   DEFPSIST(ASPARENT) +
   DEFPRTY(ASPARENT) +
   DEFPRESP(ASPARENT) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   PMSGDLV(ASPARENT) +
   NPMSGDLV(ASPARENT) +
   PUBSCOPE(ASPARENT) +
   SUBSCOPE(ASPARENT) +
   PROXYSUB(FIRSTUSE) +
   WILDCARD(BLOCK) +
   MDURMDL(' ') +
   MNDURMDL(' ') +
   MCAST(DISABLED) +
   COMMINFO(' ') +
   USEDLQ(ASPARENT) +
   CUSTOM(' ') +
   REPLACE
DEFINE TOPIC('SYSTEM.BROKER.DEFAULT.STREAM') +
   TYPE(LOCAL) +
   TOPICSTR('') +
   DESCR('Default stream for queued Pub/Sub interface') +
   CLUSTER(' ') +
   DURSUB(ASPARENT) +
   PUB(ASPARENT) +
   SUB(ASPARENT) +
   DEFPSIST(ASPARENT) +
   DEFPRTY(ASPARENT) +
   DEFPRESP(ASPARENT) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   PMSGDLV(ASPARENT) +
   NPMSGDLV(ASPARENT) +
   PUBSCOPE(ASPARENT) +
   SUBSCOPE(ASPARENT) +
   PROXYSUB(FIRSTUSE) +
   WILDCARD(BLOCK) +
   MDURMDL(' ') +
   MNDURMDL(' ') +
   MCAST(DISABLED) +
   COMMINFO(' ') +
   USEDLQ(ASPARENT) +
   CUSTOM(' ') +
   REPLACE
DEFINE TOPIC('SYSTEM.BROKER.DEFAULT.SUBPOINT') +
   TYPE(LOCAL) +
   TOPICSTR('') +
   DESCR('Default RFH2 subscription point for queued Pub/Sub interface') +
   CLUSTER(' ') +
   DURSUB(ASPARENT) +
   PUB(ASPARENT) +
   SUB(ASPARENT) +
   DEFPSIST(ASPARENT) +
   DEFPRTY(ASPARENT) +
   DEFPRESP(ASPARENT) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   PMSGDLV(ASPARENT) +
   NPMSGDLV(ASPARENT) +
   PUBSCOPE(ASPARENT) +
   SUBSCOPE(ASPARENT) +
   PROXYSUB(FIRSTUSE) +
   WILDCARD(BLOCK) +
   MDURMDL(' ') +
   MNDURMDL(' ') +
   MCAST(DISABLED) +
   COMMINFO(' ') +
   USEDLQ(ASPARENT) +
   CUSTOM(' ') +
   REPLACE
DEFINE TOPIC('SYSTEM.BROKER.MB.TOPIC') +
   TYPE(LOCAL) +
   TOPICSTR('$SYS/Broker') +
   DESCR(' ') +
   CLUSTER(' ') +
   DURSUB(ASPARENT) +
   PUB(ASPARENT) +
   SUB(ASPARENT) +
   DEFPSIST(ASPARENT) +
   DEFPRTY(ASPARENT) +
   DEFPRESP(ASPARENT) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   PMSGDLV(ASPARENT) +
   NPMSGDLV(ASPARENT) +
   PUBSCOPE(ASPARENT) +
   SUBSCOPE(ASPARENT) +
   PROXYSUB(FIRSTUSE) +
   WILDCARD(PASSTHRU) +
   MDURMDL(' ') +
   MNDURMDL(' ') +
   MCAST(ASPARENT) +
   COMMINFO(' ') +
   USEDLQ(ASPARENT) +
   CUSTOM(' ') +
   REPLACE
DEFINE TOPIC('SYSTEM.DEFAULT.TOPIC') +
   TYPE(LOCAL) +
   TOPICSTR('') +
   DESCR(' ') +
   CLUSTER(' ') +
   DURSUB(ASPARENT) +
   PUB(ASPARENT) +
   SUB(ASPARENT) +
   DEFPSIST(ASPARENT) +
   DEFPRTY(ASPARENT) +
   DEFPRESP(ASPARENT) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.15) +
   PMSGDLV(ASPARENT) +
   NPMSGDLV(ASPARENT) +
   PUBSCOPE(ASPARENT) +
   SUBSCOPE(ASPARENT) +
   PROXYSUB(FIRSTUSE) +
   WILDCARD(PASSTHRU) +
   MDURMDL(' ') +
   MNDURMDL(' ') +
   MCAST(ASPARENT) +
   COMMINFO(' ') +
   USEDLQ(ASPARENT) +
   CUSTOM(' ') +
   REPLACE
SET AUTHREC +
   PROFILE('MSIL_TO_BONY_RPO.TOPIC') +
   GROUP('mqm') +
   OBJTYPE(TOPIC) +
   AUTHADD(CHG,CLR,DLT,DSP,PASSALL,PASSID,SETALL,SETID,CTRL,PUB,SUB,RESUME)
SET AUTHREC +
   PROFILE('MSIL_TO_BONY_RPO.TOPIC') +
   GROUP('dbmc') +
   OBJTYPE(TOPIC) +
   AUTHADD(CHG,CLR,DSP,PASSALL,PASSID,SETALL,SETID,CTRL,PUB,SUB,RESUME)
SET AUTHREC +
   PROFILE('SYSTEM.BASE.TOPIC') +
   GROUP('mqm') +
   OBJTYPE(TOPIC) +
   AUTHADD(CHG,CLR,DLT,DSP,PASSALL,PASSID,SETALL,SETID,CTRL,PUB,SUB,RESUME)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.ADMIN.STREAM') +
   GROUP('mqm') +
   OBJTYPE(TOPIC) +
   AUTHADD(CHG,CLR,DLT,DSP,PASSALL,PASSID,SETALL,SETID,CTRL,PUB,SUB,RESUME)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.DEFAULT.STREAM') +
   GROUP('mqm') +
   OBJTYPE(TOPIC) +
   AUTHADD(CHG,CLR,DLT,DSP,PASSALL,PASSID,SETALL,SETID,CTRL,PUB,SUB,RESUME)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.DEFAULT.SUBPOINT') +
   GROUP('mqm') +
   OBJTYPE(TOPIC) +
   AUTHADD(CHG,CLR,DLT,DSP,PASSALL,PASSID,SETALL,SETID,CTRL,PUB,SUB,RESUME)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.MB.TOPIC') +
   GROUP('mqbrkrs') +
   OBJTYPE(TOPIC) +
   AUTHADD(CHG,CLR,DLT,DSP,PASSALL,PASSID,SETALL,SETID,CTRL,PUB,SUB,RESUME)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.MB.TOPIC') +
   GROUP('mqm') +
   OBJTYPE(TOPIC) +
   AUTHADD(CHG,CLR,DLT,DSP,PASSALL,PASSID,SETALL,SETID,CTRL,PUB,SUB,RESUME)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.TOPIC') +
   GROUP('mqm') +
   OBJTYPE(TOPIC) +
   AUTHADD(CHG,CLR,DLT,DSP,PASSALL,PASSID,SETALL,SETID,CTRL,PUB,SUB,RESUME)
DEFINE SUB('SYSTEM.DEFAULT.SUB') +
   TOPICSTR('') +
   TOPICOBJ(' ') +
   DEST(' ') +
   DESTQMGR(' ') +
   PUBAPPID(' ') +
   SELECTOR('') +
*  SELTYPE(NONE) +
   USERDATA(' ') +
   PUBACCT(0000000000000000000000000000000000000000000000000000000000000000) +
   DESTCORL(000000000000000000000000000000000000000000000000) +
   DESTCLAS(PROVIDED) +
*  DURABLE(YES) +
   EXPIRY(UNLIMITED) +
   PSPROP(MSGPROP) +
   PUBPRTY(ASPUB) +
   REQONLY(NO) +
   SUBSCOPE(ALL) +
   SUBLEVEL(1) +
*  SUBTYPE(ADMIN) +
   VARUSER(ANY) +
   WSCHEMA(TOPIC) +
   SUBUSER(' ') +
*  CRDATE(2010-04-09) +
*  CRTIME(13:38:02) +
*  ALTDATE( ) +
*  ALTTIME( ) +
   REPLACE
DEFINE SUB('MSIL_TO_BONY_RPO_REV3.SUB') +
   TOPICSTR('') +
   TOPICOBJ('MSIL_TO_BONY_RPO.TOPIC') +
   DEST('MQABNY.MQSBNY.RPO.BMC.RE3_SWIFT_REV_Q') +
   DESTQMGR(' ') +
   PUBAPPID(' ') +
   SELECTOR('') +
*  SELTYPE(NONE) +
   USERDATA(' ') +
   PUBACCT(0332323800000000000000000000000000000000000000000000000000000006) +
   DESTCORL(414D512041424B4120202020202020205287731822F7F307) +
   DESTCLAS(PROVIDED) +
*  DURABLE(YES) +
   EXPIRY(UNLIMITED) +
   PSPROP(NONE) +
   PUBPRTY(ASPUB) +
   REQONLY(NO) +
   SUBSCOPE(ALL) +
   SUBLEVEL(1) +
*  SUBTYPE(ADMIN) +
   VARUSER(ANY) +
   WSCHEMA(TOPIC) +
   SUBUSER('mqm') +
*  CRDATE(2014-05-30) +
*  CRTIME(04:23:26) +
*  ALTDATE(2014-05-30) +
*  ALTTIME(04:23:26) +
   REPLACE
DEFINE SUB('MSIL_TO_BONY_RPO_REV4.SUB') +
   TOPICSTR('') +
   TOPICOBJ('MSIL_TO_BONY_RPO.TOPIC') +
   DEST('MQABNY.MQSBNY.RPO.BMC.RE4_SWIFT_REV_Q') +
   DESTQMGR(' ') +
   PUBAPPID(' ') +
   SELECTOR('') +
*  SELTYPE(NONE) +
   USERDATA(' ') +
   PUBACCT(0332323800000000000000000000000000000000000000000000000000000006) +
   DESTCORL(414D512041424B4120202020202020205287731822F7F30D) +
   DESTCLAS(PROVIDED) +
*  DURABLE(YES) +
   EXPIRY(UNLIMITED) +
   PSPROP(NONE) +
   PUBPRTY(ASPUB) +
   REQONLY(NO) +
   SUBSCOPE(ALL) +
   SUBLEVEL(1) +
*  SUBTYPE(ADMIN) +
   VARUSER(ANY) +
   WSCHEMA(TOPIC) +
   SUBUSER('mqm') +
*  CRDATE(2014-05-30) +
*  CRTIME(04:23:35) +
*  ALTDATE(2014-05-30) +
*  ALTTIME(04:23:35) +
   REPLACE
SET CHLAUTH('SYSTEM.ADMIN.SVRCONN') +
   TYPE(ADDRESSMAP) +
   DESCR('Default rule to allow MQ Explorer access') +
   CUSTOM(' ') +
   ADDRESS('*') +
   USERSRC(CHANNEL) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.16) +
   ACTION(REPLACE)
SET CHLAUTH('SYSTEM.*') +
   TYPE(ADDRESSMAP) +
   DESCR('Default rule to disable all SYSTEM channels') +
   CUSTOM(' ') +
   ADDRESS('*') +
   USERSRC(NOACCESS) +
   WARN(NO) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.16) +
   ACTION(REPLACE)
SET CHLAUTH('*') +
   TYPE(BLOCKUSER) +
   DESCR('Default rule to disallow privileged users') +
   CUSTOM(' ') +
   USERLIST('*MQADMIN') +
   WARN(NO) +
*  ALTDATE(2014-09-08) +
*  ALTTIME(02.37.16) +
   ACTION(REPLACE)
